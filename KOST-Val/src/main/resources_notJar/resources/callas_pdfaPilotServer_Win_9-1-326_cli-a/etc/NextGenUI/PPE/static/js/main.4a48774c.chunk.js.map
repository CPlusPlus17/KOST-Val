{"version":3,"sources":["components/drawingArea/transition/icons/certify.svg","components/drawingArea/transition/icons/create_reports.svg","components/drawingArea/transition/icons/create_report.svg","components/drawingArea/spinner.svg","registerServiceWorker.js","api/index.js","dictionary.js","redux/modules/transitionsLayout.js","redux/modules/transitions.js","redux/modules/changeStack.js","redux/model/Change.js","redux/model/ChangeStepProperty.js","redux/modules/stepsLayout.js","components/drawingArea/step/anchor/Anchor.js","components/drawingArea/step/Step.js","components/drawingArea/transition/Transition.js","redux/modules/transitionActionType.js","redux/model/RemoveTransition.js","components/drawingArea/transition/Transition.container.js","redux/modules/transitionCopy.js","redux/model/ChangeTransition.js","redux/model/AddTransition.js","redux/model/AddConnection.js","redux/model/ChangeConnection.js","redux/modules/connectionsLayout.js","redux/modules/tempTransition.js","redux/modules/drawingArea.js","redux/modules/availableObjects.js","redux/model/ChangeTransitionProperty.js","redux/modules/stepProperties.js","redux/modules/transitionProperties.js","api/processPlanConversion.js","redux/modules/processPlan.js","redux/model/AddStep.js","redux/model/InsertNewStepIntoTransition.js","redux/model/AddTransitionForInsertStep.js","redux/model/RemoveStep.js","redux/modules/steps.js","redux/model/MoveStep.js","components/drawingArea/step/Step.container.js","components/drawingArea/transition/TempTransition.container.js","components/drawingArea/transition/TempConnection.container.js","redux/model/RemoveConnection.js","components/drawingArea/transition/FilePickupConnectionLine.container.js","components/drawingArea/DrawingArea.js","redux/modules/compositeSelectors.js","components/drawingArea/DrawingArea.container.js","components/zoomPanel/ZoomToolbar.js","components/zoomPanel/ZoomToolbar.container.js","components/sidePanel/SidePanel.js","components/sidePanel/stepPanel/stepButton/StepButton.js","components/sidePanel/stepPanel/stepButton/StepButton.container.js","components/sidePanel/stepPanel/StepPanel.js","components/sidePanel/stepPanel/StepPanel.container.js","components/sidePanel/propPanel/select/Select.js","components/sidePanel/propPanel/select/Select.container.js","components/sidePanel/propPanel/checkBox/CheckBox.js","components/sidePanel/propPanel/checkBox/CheckBox.container.js","components/sidePanel/propPanel/ExternalObjectSelect/iconButton/IconButton.js","components/sidePanel/propPanel/variableInput/variables/variableItem/VariableItem.js","components/sidePanel/propPanel/variableInput/variables/variableItem/VariableItem.container.js","components/sidePanel/propPanel/variableInput/variables/Variables.js","components/sidePanel/propPanel/variableInput/variables/Variables.container.js","components/sidePanel/propPanel/variableCheckbox/VariableCheckBox.js","components/sidePanel/propPanel/variableCheckbox/VariableCheckBox.container.js","components/sidePanel/propPanel/input/Input.js","components/sidePanel/propPanel/input/Input.container.js","components/sidePanel/propPanel/variableInput/VariableInput.js","components/sidePanel/propPanel/variableInput/VariableInput.container.js","components/sidePanel/propPanel/checkBoxGroup/CheckBoxGroup.js","components/sidePanel/propPanel/checkBoxGroup/CheckBoxGroup.container.js","components/sidePanel/propPanel/radioButton/RadioButton.js","components/sidePanel/propPanel/modalPdfOverview/ModalPdfOverview.js","components/sidePanel/propPanel/modalPdfOverview/ModalPdfOverview.container.js","components/sidePanel/propPanel/multiSelect/CheckableMultiSelect.js","components/sidePanel/propPanel/multiSelect/CheckableMultiSelect.container.js","components/sidePanel/propPanel/ExternalObjectSelect/ExternalObjectSelect.js","components/sidePanel/propPanel/ExternalObjectSelect/ExternalObjectSelect.container.js","components/sidePanel/propPanel/PropPanel.js","components/sidePanel/propPanel/TransitionPropPanel.container.js","components/sidePanel/propPanel/StepPropPanel.container.js","components/headerPanel/processPlanDetails/ProcessPlanDetails.js","redux/model/ChangeProcessPlanAuthor.js","redux/model/ChangeProcessPlanComment.js","redux/model/ChangeProcessPlanEmail.js","redux/model/ChangeProcessPlanGroup.js","redux/model/ChangeProcessPlanDialog.js","components/headerPanel/processPlanDetails/ProcessPlanDetails.container.js","components/headerPanel/HeaderPanel.js","redux/model/ChangeProcessPlanName.js","components/headerPanel/HeaderPanel.container.js","components/App.js","redux/model/AutoGenerateLayout.js","components/App.container.js","redux/modules/index.js","index.js","components/drawingArea/error_icon.svg"],"names":["module","exports","Boolean","window","location","hostname","match","Api","Error","Promise","resolve","settings","console","log","type","id","password","FetchApi","fetch","then","response","json","sampleName","PdfToolboxNativeApi","backEventsHandlers","sendExtensionMessage","request","method","persistent","onSuccess","data","callback","eventName","_","isFunction","reject","value","contentType","JSON","parse","e","onFailure","code","message","this","_sendMessage","stringify","nativeApiAvailable","api","translatedStepTypes","translatedExternalAddingElement","translatedExternalEditingElement","translatedExternalDuplicatingElement","transltedGroupStepProperties","translatedStepCheckboxLabels","translatedReportLabels","translatedTransitionReportTypes","translatedTransitionCheckboxType","translatedTransitionRadioButtonType","translatedTransitionTypes","translatedNativeTransitionTypes","handleActions","PROCESS_PLAN_LOAD","state","action","payload","transitionsLayout","CHANGE_APPLY","change","description","applyRemoveTransitionLayout","applyAddTransitionLayout","applyTransitionLayoutPositionChange","applyRemoveTransitionConnectionLayout","applyLayoutAutoGenerationForTransitionsLayout","applyAddTransitionLayoutForInsertStep","CHANGE_REVERT","revertRemoveTransitionLayout","revertAddTransitionLayout","revertTransitionLayoutPositionChange","revertRemoveTransitionConnectionLayout","revertAutoGenerationForTransitionsLayout","revertAddTransitionLayoutForInsertStep","calculateTransitionPoint","stepLayout","side","isNil","pointX","pointY","position","x","y","size","height","width","RECT_OFFSET","createRightTopPoints","startStepLayout","endStepLayout","startPoint","endPoint","distanceBetweenStepsX","distanceBetweenStepsY","points","push","createRightBottomPoints","Math","abs","distanceBetweenSteps","createRightLeftPoints","createRightRightPoints","createBottomTopPoints","createBottomRightPoints","createBottomLeftPoints","createBottomBottomPoints","ARROW_LINE_OFFSET","createLeftTopPoints","createLeftBottomPoints","createLeftLeftPoints","createLeftRightPoints","createTopTopPoints","createTopLeftPoints","createTopBottomPoints","createTopRightPoints","getTransitionLayoutById","find","getTransitionsLayout","layout","transitionId","selectTransition","createAction","highlightTransition","checkIsTransitionIntersectedByStep","stepsLayout","highlightElement","elementType","dispatch","getState","highlightStep","transition","getTransitionById","startStepId","endStepId","allTransitions","getTransitionsByStartStepId","mapValues","reportsLabels","typeLabels","availableReportsByStartStepType","availableTransitionTypesByStartStepType","transitions","TRANSITION_SELECT","step","selected","applyAddTransition","applyTransitionPositionChange","applyRemoveTransitionConnected","applyRemoveTransition","applyAddTransitionForInsertStep","applyLayoutAutoGenerationForTransitions","revertAddTransition","revertTransitionPositionChange","revertRemoveTransitionConected","revertRemoveTransition","revertAddTransitionForInsertStep","revertLayoutAutoGenerationForTransitions","TRANSITION_HIGHLIGHT","highlighted","TRANSITIONS_INTERSECT","yStart","yEnd","xStart","xEnd","intersectedTransition","forEach","calculateNativeTransitionPoints","arrow","index","length","isNull","map","intersected","transitionLayout","mainPoints","start","end","MainPoints","concat","getTransitions","getTransitionIds","createSelector","Object","keys","getSelectedTransition","getSelectedTransitionId","selectedTransition","getTransitionStartStepId","getAvailableTransitionReports","stepId","availableReports","getStepTypeById","report","label","getAvailableTransitionTypes","availableTypes","pickBy","getTransitionsByEndStepId","isTransitionHighlighted","selectedStep","getSelectedStep","getStepDependenceFromTransitions","isDependent","isExistImposedTransition","isUndefined","applyChange","revertChange","changeStack","isRedo","undoStack","redoStack","slice","getUndoStack","getRedoStack","Change","steps","stepProperty","stepsProperties","processPlan","transitionProperties","ChangeStepProperty","name","currentValue","connections","connection","updateStepsLayoutPosition","updateStepsLayoutSize","moveStep","direction","DELTA_BY_DIRECTION","left","deltaX","deltaY","top","right","bottom","STEPS_LAYOUT_POSITION_UPDATE","scaledPosition","STEPS_LAYOUT_SIZE_UPDATE","applyStepsLayout","applyRemoveStepLayout","applyAddStepLayout","applyInsertStepLayout","applyLayoutAutoGenerationForStepsLayout","revertStepsLayout","revertRemoveStepLayout","revertAddStepLayout","revertInsertStepLayout","revertLayoutAutoGenerationForStepsLayout","STEP_MOVE","getStepsLayout","getStepLayoutById","getMaxStepPositionX","firstStepKey","maxStepPositionX","get","getMaxStepPositionY","maxStepPositionY","getMinStepPositionX","minStepPositionX","getMinStepPositionY","minStepPositionY","Anchor","onMouseUp","props","hover","handleMouseUp","onMouseOver","handleMouseOver","onMouseDown","stopPropagation","active","handleMouseDown","onHandleTouchStart","document","addEventListener","handleTouchMove","computedPosition","targetTouches","pageX","pageY","handleTouchTransitionMove","HEADER_OFFSET","handleTouchEnd","anchor","elementFromPoint","cx","cy","handleDeleteTempTransition","className","baseVal","split","handleCreateTransitionByTouch","removeEventListener","onMouseOut","handleMouseOut","outlineClassName","anchorHighlighted","stepClassName","selectable","anchorClassName","r","outlineRadius","pointRadius","onTouchStart","onTouchEnd","onTouchEndCapture","onTouchCancel","Component","defaultProps","ANCHOR_POINT_POSITIONS","DIRECTION_BY_KEY_CODE","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Step","setStep","setStepText","stepText","renderAnchorPoints","anchorHover","modifyingTransition","coordinates","calculateAnchorCoordinatesByPosition","offsetHeight","intersectedAnchors","intersection","key","anchorStartEndAvailability","modifyingConnection","handleAnchorMouseDown","handleTransitionCreationEnd","onAnchorMouseOver","onAnchorMouseOut","onDeleteTempTransition","onCreateTempTransitionByTouch","onAddTransition","renderLeftTopAngleAnchor","connectionAnchorIsVisible","renderFilePickUpAnchorPoint","pickUpFile","connectionCanStart","renderText","text","renderValidationTooltips","validationTooltips","href","error","ERROR_ICON_SIZE","join","isLockedProcessPlan","haveChangedPosition","startPosition","handleMouseMove","mouseDownTimeout","setTimeout","setState","cursorType","handleTouchStart","xDiff","zoomScale","yDiff","onStepPositionChange","mouseMoveTimeout","isExistDependentTransition","onTransitionOver","svgPosition","snapToGrid","isEmpty","round","isEqual","onStepPositionChangeEnd","isIntersected","onDropStep","clearTimeout","handleClick","onStepSelect","onTransitionCreationStart","onTransitionCreationEnd","handleMouseEnter","onStepHighlight","handleMouseLeave","onStepHighlightReset","handleArrowKeyDown","repeat","movementPositon","shiftKey","onTransitionCreationStartByShortcut","altKey","movementDirection","includes","onMoveStep","onAnotherElementSelect","handleKeyDown","preventDefault","onRemoveStep","handleKeyUp","difference","textStepHeight","symbolsNum","floor","ICON_TEXT_OFFSET","ref","stepClass","stepAvailability","patternName","patternSelected","stepLabel","role","aria-label","tabIndex","onMouseEnter","onMouseLeave","onKeyDown","onKeyUp","onClick","rx","ry","getIcon","fill","renderContent","focus","onSizeChange","prevProps","focused","stepType","d","gradientUnits","x1","y1","x2","y2","style","stopColor","stopOpacity","offset","RADIUS","ICONS","certify","create_report","create_reports","Transition","setTransition","renderArrow","arrowPoints","arrowType","arrowPosition","renderSelectionPath","path","renderTypes","showTransitionInfo","types","typesPoints","translate","renderIcons","icons","icon","iconsPoints","ICON_SIZE","innerText","caption","fontSize","textAnchor","getErrorIconCoordinates","buildPath","i","offsetCoordinate","getLineDirection","getRadius","getOffsetCoordinate","mainCoordinate","directiveCoordinate","sign","getAriaLabel","onTransitionSelect","onStartTransitionPointUpdate","baseStart","scale","pow","onTransitionHighlight","onTransitionHighlightReset","handleDragOver","isAvailableDrop","handleDragLeave","handleDrop","dataTransfer","getData","ignore","clientX","offsetX","clientY","offsetY","onInsertStep","onRemoveTransition","onArrowKeyDown","ctrlKey","onEnterKeyDown","transitionClassName","disabled","onDragOver","onDragLeave","onDrop","ARROW_SIZE","setCreatingTransitionByShortcutsType","setCreatingTransitionType","setUpdatingTransitionEndPointType","setUpdatingTransitionStartPointType","setCreatingConnectionType","setUpdatingConnectionType","resetActionType","CREATING_TRANSITION_TYPE_SET","actionType","UPDATING_TRANSITION_END_POINT_TYPE_SET","UPDATING_TRANSITION_START_POINT_TYPE_SET","CREATING_CONNECTION_TYPE_SET","UPDATING_CONNECTION_TYPE_SET","ACTION_TYPE_RESET","CREATING_TRANSITION_BY_SHORTCUTS_TYPE_SET","getActionType","transitionActionType","modifyingTransitionByMouse","RemoveTransitionChange","deletedtransitionProperties","omitBy","filter","property","calculateTransitionPoints","calculateTypesPoints","transitionPoints","maxLength","max","LINE_HEIGHT","calculateIconsPoints","createReportTextOffsetX","createReportTextOffsetY","iconSizeX","startsWith","connect","typesToDisplay","chain","translatedTypes","getTranslate","localize","getFocusedArea","DRAWING_AREA","getScale","getSvgPosition","isTransitionDisabled","isTransitionsInfoShown","selectStep","selectDrawingArea","pointType","startTransitionPointUpdate","setFocusOnGlobalArea","moveToAnotherTransitionToSameStep","moveToAnotherTransitionFromSameStep","selectAnotherElement","uuidv4","newTransitionId","dropStepIntoTransition","copyTransition","TRANSITION_COPY","getTransitionCopy","transitionCopy","ChangeTransitionPosition","tempTransition","baseTransition","AddTransitionChange","omit","properties","availableTransitionsByStepType","checkedTransitionValues","postProcessingOptionsByStartStepType","option","checked","values","transitionProperty","AddConnection","connectionLayout","endPosition","ChangeConnectionPosition","connectedLayout","stepProperties","applyRemoveStepConnectionLayout","applyAddStepConnectionLayout","applyAddTransitionConnectionLayout","applyConnectionLayoutPositionChange","applyRemoveConnection","applyInsertStepConnectionLayout","applyLayoutAutoGenerationForConnections","applyUpdateConnection","revertRemoveStepConnectionLayout","revertAddStepConnectionLayout","revertAddTransitionConnectionLayout","revertConnectionLayoutPositionChange","revertRemoveConnection","revertInsertStepConnectionLayout","revertLayoutAutoGenerationForConnections","revertUpdateConnection","getConnectionsLayout","connectionsLayout","getConnectionEndPosition","getConnectionLayout","isLeftTopAngleVisible","startTransitionCreation","updateScaledTempTransitionEndPoint","updateScaledTempTransitionStartPoint","changeTempTransitionEndPointPosition","changeTempTransitionStartPointPosition","removeTempTransition","startTransitionUpdate","updateTempTransitionEndPoint","drawingArea","viewportPosition","endTransitionCreation","transitionCreationStarted","restoreOldTransition","restoreOldConnection","getTempTransition","startTempTransition","stepPosition","continueTransitionCreation","updateTempTransitionStartPoint","changeTransitionPosition","TRANSITION_CREATION_START","TEMP_TRANSITION_END_POINT_UPDATE","scaledCoordinates","TEMP_TRANSITION_START_POINT_UPDATE","TEMP_TRANSITION_END_POINT_POSITION_CHANGE","TEMP_TRANSITION_START_POINT_POSITION_CHANGE","TEMP_TRANSITION_REMOVE","TRANSITION_UPDATE_START","transitionCreationInProgress","getTempTransitionEndPointPosition","calculatePosition","ARROW_OFFSET","NEXT_POSITION","PREVIOUS_POSITION","toggleTransitionInfo","updateViewportSize","updateViewportPosition","updateOriginalViewportSize","incrementZoomScale","resetToTheBaseViewBox","fitTheView","toggleSnapToGrid","changeScreenSize","loadViewSettings","loadSettings","updateSettings","allTransitionsIds","findIndex","allTransitionIds","selectedStepId","getSelectedStepId","stepsIds","getAllStepIds","transitionsIds","moveToAnotherGroup","stepIds","fromPairs","labels","maxLabel","markGroup","connectedStepId","currentLabel","nextLabel","nextStepId","findKey","DRAWING_AREA_VIEWPORT_SIZE_UPDATE","viewportSize","zoomToFit","DRAWING_AREA_VIEWPORT_POSITION_UPDATE","DRAWING_AREA_ORIGINAL_VIEWPORT_SIZE_UPDATE","originalViewportSize","DRAWING_AREA_ORIGINAL_VIEWPORT_POSITION_UPDATE","originalViewportPosition","DRAWING_AREA_ZOOM_SCALE_INCREMENT","scaleValue","toFixed","DRAWING_AREA_ORIGINAL_VIEWPORT_SIZE_RESET","DRAWING_AREA_RESIZE_VIEWPORT_SIZE","FIT_THE_VIEW","fittedViewportPosition","fittedViewportSize","scaleValueForWidth","scaleValueForHeight","DRAWING_AREA_UPDATE_VISUALIZATION","TRANSITION_INFO_TOGGLE","STEP_SELECT","SNAP_TO_GRID_TOGGLE","PROCESS_PLAN_VIEW_SETTINGS_LOAD","zoomFactor","translations","settingsLoaded","getDrawingArea","getViewSettings","getSnapToGrid","isZoomToFitEnabled","areSettingsLoaded","getTranslations","VariableTypes","stepTypeToObjectType","loadAvailableObjects","loadObjects","setAvailableObjects","objects","createExternalObject","duplicateExternalObject","editExternalObject","updateExternalObject","AVAILABLE_OBJECTS_LOAD","loaded","processplans","profiles","actions","variables","fixups","checks","quickchecks","groups","reportTemplates","getAvailableObjects","availableObjects","isAvailableObjectsLoaded","getAvailableObjectsByStepType","variable","getReferencedObjectByStepId","object","getStepText","referencedObject","getObjectText","getAvailableObjectOptions","selectedStepType","getAvailableStepOptions","getSteps","getStepAvailableObjectReferenceValidationTooltip","propertiesByStepType","getAvailableGroupOptions","group","getAvailableDialogOptions","dialogs","dialog","getVariables","getVariableById","varId","getVariableDisplayText","warn","getReportTemplatesOptions","reportTemplate","getProcessPlanAvailableObjects","ChangeTransitionProperty","changedValues","SELECTABLE_PROPERTIES_NUMBER_BY_STEP_PROPERTY_NAME","propertyEditControls","omit_fixups","options","step_id","suffix","prefix","folder","overwrite_existing_file","replace_file_name","enable_step","applyAddStepProperty","applyStepPropertyChange","applyRemoveStepProperty","applyAddConnectedStepProperty","applyChangeConnectedStepProperty","applyRemoveConnectionProperty","applyInsertStepProperty","applyProcessPlanLayoutAutoGenerationStepProperties","revertAddStepProperty","revertStepPropertyChange","revertRemoveStepProperty","revertAddConnectedStepProperty","revertChangeConnectedStepProperty","revertRemoveConnectionProperty","revertInsertStepProperty","revertProcessPlanLayoutAutoGenerationStepProperties","getStepProperties","getAllStepProperties","getStepPropertyByName","propertyName","getStepAvailabilityById","enableStepProperty","SELECTABLE_PROPERTIES_NUMBER_BY_TRANSITION_PROPERTY_NAME","selectedOptions","getSelectedOnOtherTransitionsTypes","applyRemoveTransitionProperty","applyAddTransitionProperties","applyTransitionPropertyChange","applyRemoveTransitionConnectedProperties","applyAddTransitionPropertiesForInsertStep","applyLayoutAutoGenerationForTransitionProperties","revertRemoveTransitionProperty","revertAddTransitionProperties","revertTransitionPropertyChange","revertRemoveTransitionConnectedProperties","revertLayoutAutoGenerationForTransitionProperties","revertAddTransitionPropertiesForInsertStep","getAllTransitionProperties","getTransitionProperties","getSelectedTransitionProps","getSelectedTransitionPropsWithControlDescriptors","selectedTransitionProps","objectId","isPostProcessDisabled","controlDescriptor","groupBy","groupName","undefined","getTransitionPropertiesByNameAndTransitionId","getTransitionPropertiesByNameAndStartStepId","stepTransitionsIds","getTransitionTypesByStartStepId","transitionIds","flatten","getAllTransitionTypes","allTransitionProperties","getTransitionIcons","reportType","isString","getAllTransitionIcons","getTransitionPropertiesValidationTooltips","createReportProperty","typesProperty","getAllTransitionsPropertiesValidationTooltips","transitionByStartStepId","transitionEventTypes","without","STEP_TYPES","PROCESS_PLAN","PROFILE","VARIABLE","CHECK","ACTION","FIXUP","PDF_COPY","QUICKCHECK","ADDFILES","FILE_PICK_UP","RENAME","defaultPropertyValues","booleanProperties","generationOptions","startSize","offsets","columns","generateStepsLayout","previousStepPosition","numOfSteps","sequence","convertProcessPlan","baseInfo","author","comment","email","locked","hasPassword","addFilesStep","forOwn","stepReference","addedTransitions","transitionType","sourceTransition","pick","endStepIndex","next_step","selectedPostProcessingOptions","post_process","transitionTypes","availableTransitionTypes","stepTransitions","keyBy","generateTransitionLayout","stepTransitionsLayout","stepTransitionIds","xor","first","getErrorTypes","stepsErrors","getAllStepsValidationTooltips","stepError","transitionErrors","transitionError","processPlanNameErrors","getProcessPlanNameValidationTooltip","uniq","convertToJson","validationResult","allStepsIds","allStepsIdsToStartFrom","allStepIdsToEndAt","remove","validationValue","stepIdProperties","validateProcessPlan","stepsSequence","out","identity","stepPropertyValue","referencedStepProperty","referencedStepId","indexOf","nextStepIndex","transitionsIdsByStartStepId","transitionsIdsByType","optionName","layoutIndex","errors","errorMessages","loadProcessPlan","showProcessPlanInfo","globalArea","setProcessPlanJson","processPlanJson","setPasswordFlag","lockProcessPlan","subscribe","store","finally","saveProcessPlan","CHANGE_PASSWORD","CHANGE_PLAN_LOCK","applyProcessPlanNameChange","applyProcessPlanAuthorChange","applyProcessPlanEmailChange","applyProcessPlanCommentChange","applyProcessPlanGroupChange","applyProcessPlanDialogChange","revertProcessPlanNameChange","revertProcessPlanAuthorChange","revertProcessPlanEmailChange","revertProcessPlanCommentChange","revertProcessPlanGroupChange","revertProcessPlanDialogChange","SHOW_PROCESS_PLAN_INFO","isHidden","FOCUS_ON_GLOBAL_AREA_SET","focusedArea","PROCESS_PLAN_JSON_SET","validationSucceed","getProcessPlanInfo","isProcessPlanLoaded","getProcessPlanJson","getProcessPlanAccess","getAddFilesAvailability","getProcessPlanName","processPlanName","DEFAULT_STEP_SIZE","DEFAULT_STEP_POSITION","AddStepChange","newProperties","has","InsertNewStepIntoTransition","prevTransition","prevTransitionLayout","AddTransitionForInsertStep","baseTransitionId","RemoveStepChange","allTransitionLayout","deletedTransition","tempConectedLayout","transitionConnectedLayout","transitionConnectedProperties","originProperties","allSteps","newTransitions","newTransitionsLayout","newTransitionsProperties","outgoingTransitionsProperties","incomingTransitionsProperties","outgoingTransitions","incomingTransitions","outgoingTransitionTypes","outgoingTransitionsProperty","assign","incomingTransitionsProperty","incomeProperty","incomingValue","outgoingProperty","outgoingValue","intersectedValues","incomingTransition","outgoingTransition","originTransitions","isPossibleToTransferTypes","originTransition","isPossibleToTransferCertifyValue","isPossibleToTransferReportValues","originCertifyProperties","originReportProperties","originTypesProperties","incomingCertifyProperties","incomingReportProperties","deletedStepType","differenceInTypes","transferringValues","abilityToTransferCertify","abilityToTransferReports","newModifiedTransition","newTransition","incomingCertify","incomingReports","modifiedCertify","modifiedReports","newTransitionsProperty","differenceBetweenTypes","currentTransitionId","currentNewTransition","newIncomeProperty","certifyValue","currentTransition","tempTransitionProperties","tempTransitionsLayout","tempKey","tempValue","merge","delTransitionConnectionLayout","dropStep","dropExistingStepIntoTransition","getIdOfIntersectedTransition","removeStep","checkIsAnchorsIntersectedByTransition","STEP_HIGHLIGHT","applyRemoveStep","applyAddStep","applyLayoutAutoGenerationForSteps","applyInsertStep","applyInsertStepForAnchors","revertRemoveStep","revertAddStep","revertLayoutAutoGenerationForSteps","revertInsertStep","revertInsertStepForAnchors","ANCHORS_INTERSECT","imposedTransition","imposedDirection","getAllFilePickupStepIds","getStepById","isStepHighlighted","getStepValidationTooltips","tooltips","requiredTransitionTypes","getRequiredTransitions","definedTransitionTypes","events","allStepIds","MoveStepChange","newPosition","oldPosition","existingTransitionTypes","stepIdProperty","transitionCanStart","availableStepsLayout","startTempTransitionByShortcut","checkIsTransitionImposed","checkIsAnchorsImposed","updateTempTransitionByShortcut","currentPosition","endPointStepId","newPoint","changeTempTransitionPositionByShortcut","RemoveConnection","connectedProperties","endStepSize","startFilePickUpConnectionEndPointUpdate","DrawingArea","setDrawingArea","handleTempTransitionUpdate","onUpdateTempTransition","onMoveViewport","browserResize","el","getElementById","offsetWidth","onBrowserChangeViewport","handleDrawingAreaSelect","onDrawingAreaSelect","onResetSelection","onMoveToAnotherGroup","renderSteps","bind","renderTransitions","renderFilePickupConnection","fetching","src","spinner","alt","onresize","viewBox","onMouseMove","stepsValidationTooltips","transitionsTypes","transitionsIcons","transitionsValidationTooltips","filePickupConnections","getAllFilePickupConnections","getSelectedStepProps","getSelectedStepPropsWithControlDescriptors","selectedStepProps","drawingThisArea","viewPortSize","ZoomToolbar","onZoomIn","setInterval","onChangeZoom","onStopZooming","clearInterval","onStopZoomIn","onZoomOut","onStopZoomOut","onFitTheScreen","onReset","title","SidePanel","children","StepButton","setStepButton","stepButton","onDragStart","ev","setData","nativeEvent","onDragTouchStart","rect","target","getBoundingClientRect","onDragTouchMove","touchPosition","onDragEnd","onMobileDrop","draggable","StepPanel","setStepPanel","stepPanel","renderStepButtons","addFilesAvailability","selectedStepButtonIndex","onStepAdd","Select","setSelect","select","getComponents","Option","innerProps","innerRef","isFocused","isSelected","handleChange","selectedOption","onChange","openedSelect","handleSelectOpen","handleSelectClose","onSetSelection","clearable","isDisabled","onOpen","onClose","components","variableInput","blur","isActiveVariable","onSelect","CheckBox","setCheckBox","checkBox","which","keyCode","selectedOnOtherTransitions","labelClassName","aria-labelledby","groupLabelId","replace","aria-checked","React","IconButton","isActiveIcon","isActiveBtn","VariableItem","setVariableItem","variableItem","onSetVariable","inputValue","inputType","handleMenuKeyDown","selectedElementIndexIcon","onDuplicate","onEdit","variableText","onVariableDuplicated","onVariableUpdated","Variables","setVariablesList","variablesList","setFixedVariablesList","fixedVariableList","fixedSizeList","selectedVariableItemIndex","scrollToItem","onExitVariable","onCreate","isActive","Row","itemSize","itemCount","onVariableCreated","VariableCheckBox","handleClickCheckboxVariable","isActiveCheckBoxVariable","handleVariableSelect","newVariable","handleExitVariable","activeTooltip","tooltipText","isVariable","isPlainObject","data-tooltip","Input","setInput","input","event","aria-live","TEXTAREA","ELEMENTS","DIRECTION","VariableInput","setVariableInput","setVariablesContainer","variablesContainer","setAddButton","addButton","getVariablesContainerChildren","vars","variableParts","activeVariableIndex","activeVariableRange","handleVariableClick","handleArrowDownClick","convertToState","resultValue","variableProps","MAX_VARIABLE_CHAR_NUMBER","updateVariableContainerView","offsetTop","offsetLeft","textAreaHeight","variableInputWidth","convertToProps","propsValue","propsVars","variableValue","handleInputChange","deltaOffset","selectionStart","cursorPosition","variableToRemove","newVariableValue","changingActiveVariable","deltaLength","indexToInsert","splice","selectionStartPosition","selectionRangePosition","selectionEndPosition","last","focusedElementIndex","isModifiedVariable","activeVariable","addNewVariable","element","classList","variableSelectedRange","selectionEnd","selectionDirection","firstRangeVariable","head","lastRangeVariable","setSelectionRange","parentElement","selectRangeByKeyboard","startSelectionPosition","endSelectionPosition","removeVariableByIndex","variableIndex","handleScroll","scrollLeft","handleScrollContainer","deleteRange","deleteFullWord","startPositionToDelete","firstSpace","endPositionToDelete","variableToDeleteIndex","deleteFullWordByBackspace","firstSpaceWithText","handleCursorPositionChanged","variableToRemoveIndex","multiLine","maxScrollLeft","scrollWidth","clientWidth","keyCombinationPressed","inputID","onScroll","snakeCase","prevState","scrollHeight","parseInt","multiplier","textLength","scrollPositionDelta","CheckBoxGroup","setCheckBoxGroup","checkBoxGroup","renderOption","checkboxes","selectedCheckBoxIndex","handleChangeOption","optionValue","RadioButton","setRadioButton","radioButton","ModalPdfOverview","handleTemplateOptionsChange","onPropertyChange","details","template","templateOptions","onSetModalCount","highlightingCheckedChange","highlightingProblems","maskCheckedChange","layerCheckedChange","toggleModal","onSetModal","modalIsOpen","handleSelect","selectedType","selectedPropertyIndex","isOpen","toggle","fade","modalIsOpenCount","onSelectModal","onCount","modalIsOpened","CheckableMultiSelect","handleCheckedChange","handleSelectedOptionsChange","selectedElementIndex","handleMultiValueClick","modalOpenCount","handleSetModal","modal","handleSetModalCount","flatOptions","MultiValueContainer","modalDetails","_owner","parentId","isMulti","ExternalObjectSelect","PropPanel","setPropPanel","propPanel","renderPropertyGroups","propertyGroups","renderProperty","handlePropertyChange","selectedPropertiesIndex","selectablePropertiesNumber","sum","typesProperties","updateTransitionTypes","ProcessPlanDetails","handleAuthorChange","onChangeAuthor","handleEmailChange","onChangeEmail","handleCommentChange","onChangeComment","handleGroupChange","selectedGroupOption","groupOptions","onChangeGroup","handleDialogChange","selectedDialogOption","dialogOptions","onChangeDialog","isValidNewGroupOption","selectValue","selectGroupOptions","trim","isValidNewDialogOption","selectDialogOptions","isValidNewOption","styles","menu","provided","zIndex","htmlFor","ChangeProcessPlanAuthor","prevAuthor","ChangeProcessPlanComment","prevComment","ChangeProcessPlanEmail","prevEmail","ChangeProcessPlanGroup","prevGroup","ChangeProcessPlanDialog","prevDialog","headerPanel","HeaderPanel","setPassword","setPasswordLock","passwordLock","setPasswordConfirmation","passwordConfirmation","renderValidationTooltip","validationTooltip","renderExportButton","isExportAvailable","aria-controls","handleExportButtonClick","renderLockMenu","lockMenuIsOpened","changeLockType","changeSimpleLockType","changePasswordProtectedLockTypeMenu","renderExportModal","exportModalIsOpened","modalText","mode","lineNumbers","readOnly","foldGutter","gutters","autoFocus","color","renderModalLockWithPassword","lockWithPasswordModalIsOpened","togglePasswordProtectedLockModal","renderConfirmPopover","changePasswordProtectedLockType","placement","passwordConfirmationPopoverOpen","renderModalUnlockWithPassword","unlockWithPasswordModalIsOpened","togglePasswordProtectedUnlockModal","renderPopover","changePasswordProtectedUnlockType","popoverOpen","handleNameChange","onChangeProcessPlanName","changeSimpleUnlockType","moreDetails","isHideProcessPlanInfo","onChangeLockType","onChangePassword","checkPassword","isValidPassword","closeFullscreen","onProcessPlanExport","fullscreenElement","exitFullscreen","mozFullScreenElement","mozCancelFullScreen","webkitFullscreenElement","webkitExitFullscreen","msFullscreenElement","msExitFullscreen","headerMouseUp","isExistTempTransition","destroyTempTransition","aria-expanded","ChangeProcessPlanName","prevName","lockedType","App","setApp","app","setMain","main","getMobileOperatingSystem","userAgent","navigator","vendor","opera","test","MSStream","handleFullScreen","elem","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","onFocusOnGlobalArea","onSelectDrawingArea","metaKey","onRedo","onUndo","deleteElement","selectedObjectType","onDeleteStep","onDeleteTransition","onAutoGenerateLayout","onUpdateLayout","handleUndo","handleRedo","handleResize","onMainRender","innerWidth","innerHeight","onUpdateScreenSize","toolbarMouseUp","isGotTranslation","setToolbar","isAvailableUndo","isAvailableRedo","aria-pressed","onTransitionInfoButtonClick","onSnapToGridButtonClick","renderSidePanel","initialize","languages","translation","renderToStaticMarkup","withLocalize","GenerateLayout","plans","newProcessPlan","prevProcessPlan","currentProcessPlan","combineReducers","localizeReducer","rootEpic","combineEpics","action$","state$","pipe","ofType","toString","switchMap","newObjectId","meta","from","concatMap","updatedObjects","resultActions","keyboardEventKeyPolyfill","epicMiddleware","createEpicMiddleware","createStore","reducer","applyMiddleware","thunk","promise","run","sampleParam","search","param","substring","ReactDOM","render","serviceWorker","ready","registration","unregister","polyfill"],"mappings":"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","file":"static/js/main.4a48774c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/certify.efd31ec9.svg\";","module.exports = __webpack_public_path__ + \"static/media/create_reports.ca4c033c.svg\";","module.exports = __webpack_public_path__ + \"static/media/create_report.179c6cdc.svg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.b48014ab.svg\";","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import _ from 'lodash';\r\n\r\nclass Api {\r\n    subscribe() {}\r\n    loadObjects() {\r\n        throw new Error('loadObjects not implemented');\r\n    }\r\n    loadProcessPlan() {\r\n        throw new Error('loadProcessPlan not implemented');\r\n    }\r\n    saveProcessPlan() {\r\n        throw new Promise(resolve => {resolve()});\r\n    }\r\n    loadSettings() {\r\n        throw new Error('loadSettings not implemented');\r\n    }\r\n    updateSettings(settings) {\r\n        console.log('Settings update requested', settings);\r\n        return new Promise(resolve => resolve());\r\n    }\r\n    createExternalObject(type) {\r\n        console.log(`createExternalObject: ${type}`);\r\n        return new Promise(resolve => resolve());\r\n    }\r\n    updateExternalObject(type, id) {\r\n        console.log(`updateExternalObject: ${type}, ${id}`);\r\n        return new Promise(resolve => resolve());\r\n    }\r\n    duplicateExternalObject(type, id) {\r\n        console.log(`duplicateExternalObject: ${type}, ${id}`);\r\n        return new Promise(resolve => resolve());\r\n    }\r\n    setPassword(password) {\r\n        console.log(`setPassword: ${password}`);\r\n        return new Promise(resolve => resolve());\r\n    }\r\n    checkPassword(password) {\r\n        console.log(`checkPassword: ${password}`);\r\n        return new Promise(resolve => resolve());\r\n    }\r\n}\r\n\r\nclass FetchApi extends Api {\r\n    loadObjects() {\r\n        return fetch('./samples/availableObjects.json').then(response => response.json());\r\n    }\r\n    loadProcessPlan(sampleName = 'default') {\r\n        return fetch('./samples/processPlans/' + sampleName + '.json').then(response => response.json());\r\n    }\r\n    loadSettings() {\r\n        return fetch('./samples/settings.json').then(response => response.json());\r\n    }\r\n    createExternalObject(type) {\r\n        console.log(`createExternalObject: ${type} => <file_name:> should be selected`, );\r\n        return Promise.resolve('V8ae60b5a7524b68eda9fc1dbd2bffbad');\r\n    }\r\n    duplicateExternalObject(type, id) {\r\n        console.log(`duplicateExternalObject: ${type}, ${id} => <font_name:Hugo> should be selected`);\r\n        return Promise.resolve('Vd125ff9fe4a7dcf7c763c49c425e4902');\r\n    }\r\n    setPassword(password) {\r\n        return Promise.resolve(true);\r\n    }\r\n    checkPassword(password) {\r\n        return Promise.resolve(true);\r\n    }\r\n}\r\n\r\nclass PdfToolboxNativeApi extends Api {\r\n    constructor() {\r\n        super();\r\n\r\n        this.backEventsHandlers = {};\r\n\r\n        window.sendExtensionMessage({\r\n            request: {\r\n                method: 'registerEventCallback'\r\n            },\r\n            persistent: true,\r\n            onSuccess: (data) => {\r\n                let callback = this.backEventsHandlers[data.eventName];\r\n                if (_.isFunction(callback)) {\r\n                    callback(data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    _sendMessage(method, data) {\r\n        return new Promise((resolve, reject) => {\r\n            window.sendExtensionMessage({\r\n                request: {\r\n                    method,\r\n                    data\r\n                },\r\n                onSuccess: (data) => {\r\n                    try {\r\n                        let value;\r\n                        if (data != null && data.value != null && data.contentType != null) {\r\n                            switch (data.contentType) {\r\n                                case 'json':\r\n                                    value = JSON.parse(data.value);\r\n                                    break;\r\n                                case 'string':\r\n                                case 'bool':\r\n                                    value = data.value;\r\n                                    break;\r\n                                default:\r\n                                    reject(new Error(`Received unknown contentType ${data.contentType}, ignoring`));\r\n                                    break;\r\n                            }\r\n                        }\r\n                        resolve(value);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    }\r\n                },\r\n                onFailure: (code, message) => {\r\n                    console.log(\"Error(\" + code + \"): \" + message);\r\n                    reject(new Error(message));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    subscribe(eventName, callback) {\r\n        this.backEventsHandlers[eventName] = callback;\r\n    }\r\n\r\n    loadObjects() {\r\n        return this._sendMessage('loadObjects');\r\n    }\r\n\r\n    loadProcessPlan(sampleName) {\r\n        return this._sendMessage('loadDefault');\r\n    }\r\n\r\n    saveProcessPlan(data) {\r\n        return this._sendMessage('saveProcessPlan', data);\r\n    }\r\n\r\n    loadSettings() {\r\n        return this._sendMessage('loadSettings');\r\n    }\r\n\r\n    updateSettings(settings) {\r\n        return this._sendMessage('updateSettings', JSON.stringify(settings));\r\n    }\r\n\r\n    createExternalObject(type) {\r\n        return this._sendMessage('createExternalObject', type);\r\n    }\r\n\r\n    updateExternalObject(type, id) {\r\n        return this._sendMessage('updateExternalObject', {type, id});\r\n    }\r\n\r\n    duplicateExternalObject(type, id) {\r\n        return this._sendMessage('duplicateExternalObject', {type, id});\r\n    }\r\n\r\n    setPassword(password) {\r\n        return this._sendMessage('setPassword', password);\r\n    }\r\n\r\n    checkPassword(password) {\r\n        return this._sendMessage('checkPassword', password);\r\n    }\r\n}\r\n\r\nexport const nativeApiAvailable = _.isFunction(window.sendExtensionMessage);\r\n\r\nconst api = nativeApiAvailable ? new PdfToolboxNativeApi() : new FetchApi();\r\n\r\nexport default api;\r\n","export const translatedStepTypes ={\r\n        'processplan': 'NG_PPE_MetaProfName_long',\r\n        'profile': 'NG_PPE_ProfileName_long',\r\n        'action': 'NG_PPE_SwitchName_long',\r\n        'variable': 'NG_PPE_VariableName_long',\r\n        'fixup': 'NG_PPE_FixupName_long',\r\n        'check': 'NG_PPE_RuleName_long',\r\n        'quickcheck': 'NG_PPE_QuickCheckName_long',\r\n        'addfiles': 'NG_PPE_AddFilesName_long',\r\n        'pdfcopy': 'NG_PPE_SavePDFName_long',\r\n        'rename': 'NG_PPE_RenameName_long',\r\n        'filepickup': 'NG_PPE_PickupName_long'\r\n};\r\n\r\nexport const translatedExternalAddingElement = {\r\n        'processplan': 'NG_PPE_MetaProfCreate_long',\r\n        'profile': 'NG_PPE_ProfileCreate_long',\r\n        'action': 'NG_PPE_ActionCreate_long',\r\n        'variable': 'NG_PPE_VariableCreate_long',\r\n        'fixup':'NG_PPE_FixupCreate_long',\r\n        'check': 'NG_PPE_RuleCreate_long',\r\n        'quickcheck': 'NG_PPE_QuickCheckCreate_long',\r\n        'addfiles': 'NG_PPE_AddFilesCreate_long'\r\n};\r\n\r\nexport const translatedExternalEditingElement ={\r\n        'processplan': 'NG_PPE_MetaProfEdit_long',\r\n        'profile': 'NG_PPE_ProfileEdit_long',\r\n        'action': 'NG_PPE_ActionEdit_long',\r\n        'variable': 'NG_PPE_VariableEdit_long',\r\n        'fixup': 'NG_PPE_FixupEdit_long',\r\n        'check': 'NG_PPE_RuleEdit_long',\r\n        'quickcheck': 'NG_PPE_QuickCheckEdit_long',\r\n        'addfiles': 'NG_PPE_AddFilesEdit_long'\r\n};\r\n\r\nexport const translatedExternalDuplicatingElement = {\r\n        'processplan': 'NG_PPE_MetaProfDuplicate_long',\r\n        'profile': 'NG_PPE_ProfileDuplicate_long',\r\n        'action': 'NG_PPE_ActionDuplicate_long',\r\n        'variable': 'NG_PPE_VariableDuplicate_long',\r\n        'fixup': 'NG_PPE_FixupDuplicate_long',\r\n        'check': 'NG_PPE_RuleDuplicate_long',\r\n        'quickcheck': 'NG_PPE_QuickCheckDuplicate_long',\r\n        'addfiles': 'NG_PPE_AddFilesDuplicate_long'\r\n};\r\n\r\nexport const transltedGroupStepProperties = {\r\n        'Name': 'NG_PPE_StepName_long',\r\n        'Pick up PDF from': 'NG_PPE_Pick_up_PDF_from_long'\r\n};\r\n\r\nexport const translatedVariableInputLabels = {\r\n        'variable-processPlan-name': 'NG_PPE_Process_plan_name_long',\r\n        'Comment': 'NG_PPE_Comment_long',\r\n        'Suffix': 'NG_PPE_Suffix_long',\r\n        'Prefix': 'NG_PPE_Prefix_long',\r\n        'Folder': 'NG_PPE_SavePDFFolder_long'\r\n};\r\n\r\nexport const translatedStepCheckboxLabels = {\r\n        'Do not apply Fixups': 'NG_PPE_ProfileFixups_long',\r\n        'Overwrite existing file': 'NG_PPE_Overwrite_long',\r\n        'Replace file name with prefix and suffix': 'NG_PPE_SavePDFOmitName_long',\r\n        'Enable step': 'NG_PPE_EnableStep_long'\r\n};\r\n\r\nexport const translatedReportLabels = {\r\n        'txt_report': 'NG_PPE_Report_Text_long',\r\n        'xml_report': 'NG_PPE_Report_XML_long',\r\n        'overview_report': 'NG_PPE_Report_Overview_long',\r\n        'mask_report': 'NG_PPE_Report_Mask_long',\r\n        'comment_report': 'NG_PPE_Report_Comment_long',\r\n        'layer_report': 'NG_PPE_Report_Layer_long',\r\n        'compare_report': 'NG_PPE_Report_Compare_long',\r\n        'inventory_report': 'NG_PPE_Report_Inventory_long'\r\n};\r\n\r\nexport const translatedTransitionReportTypes = {\r\n        'Text': 'NG_PPE_Report_Text_long',\r\n        'XML': 'NG_PPE_Report_XML_long',\r\n        'PDF overview': 'NG_PPE_Report_Overview_long',\r\n        'PDF mask': 'NG_PPE_Report_Mask_long',\r\n        'Comment': 'NG_PPE_Report_Comment_long',\r\n        'Layer': 'NG_PPE_Report_Layer_long',\r\n        'Compare': 'NG_PPE_Report_Compare_long',\r\n        'Inventory': 'NG_PPE_Report_Inventory_long',\r\n};\r\n\r\nexport const translatedTransitionCheckboxType = {\r\n        'success': 'NG_PPE_StepOnSuccess_long',\r\n        'failure': 'NG_PPE_StepOnFailure_long',\r\n        'error': 'NG_PPE_StepOnError_long',\r\n        'warning': 'NG_PPE_StepOnWarning_long',\r\n        'hit': 'NG_PPE_StepOnHit_long',\r\n        'info': 'NG_PPE_StepOnInfo_long',\r\n        'else': 'NG_PPE_StepElse_long',\r\n        'disabled': 'NG_PPE_IfDisabled_long',\r\n        'Certify PDF': 'NG_PPE_Certify_long',\r\n        'Create report': 'NG_PPE_Create_report_long',\r\n        'Transition types': 'NG_PPE_Transition_types_long',\r\n        'Post processing': 'NG_PPE_Post_processing_long',\r\n        'Problems highlighting': 'NG_PPE_ReportProblemsHighlighting_long'\r\n};\r\nexport const translatedTransitionRadioButtonType = {\r\n    'Transparent masks': 'NG_PPE_ReportByTransparentMasks_long',\r\n    'Layers': 'NG_PPE_ReportByLayers_long'\r\n};\r\n\r\nexport const translatedTransitionTypes = {\r\n        'success': 'NG_PPE_StepOnSuccess_long',\r\n        'failure': 'NG_PPE_StepOnFailure_long',\r\n        'error': 'NG_PPE_StepOnError_long',\r\n        'warning': 'NG_PPE_StepOnWarning_long',\r\n        'hit': 'NG_PPE_StepOnHit_long',\r\n        'info': 'NG_PPE_StepOnInfo_long',\r\n        'else': 'NG_PPE_StepElse_long',\r\n        'disabled': 'NG_PPE_IfDisabled_long'\r\n};\r\n\r\nexport const translatedNativeTransitionTypes = {\r\n        'on_success': 'NG_PPE_StepOnSuccess_long',\r\n        'on_failure': 'NG_PPE_StepOnFailure_long',\r\n        'on_error': 'NG_PPE_StepOnError_long',\r\n        'on_warning': 'NG_PPE_StepOnWarning_long',\r\n        'on_hit': 'NG_PPE_StepOnHit_long',\r\n        'on_info': 'NG_PPE_StepOnInfo_long',\r\n        'else': 'NG_PPE_StepElse_long',\r\n        'if_disabled': 'NG_PPE_IfDisabled_long'\r\n};\r\n","import {handleActions} from 'redux-actions';\r\nimport _ from 'lodash';\r\n\r\nexport const ARROW_LINE_OFFSET = 25;\r\nexport const ARROW_OFFSET = 10;\r\n\r\n//- State\r\nconst initialState = {};\r\n\r\n//- Reducers\r\nexport default handleActions({\r\n    PROCESS_PLAN_LOAD: (state, action) => {\r\n        return action.payload.transitionsLayout;\r\n    },\r\n    CHANGE_APPLY: (state, {payload: change}) => {\r\n        switch (change.description) {\r\n            case 'Remove transition':\r\n                return change.applyRemoveTransitionLayout(state);\r\n            case 'Add transition':\r\n                return change.applyAddTransitionLayout(state);\r\n            case 'Change transition position':\r\n                return change.applyTransitionLayoutPositionChange(state);\r\n            case 'Remove step':\r\n                return change.applyRemoveTransitionConnectionLayout(state);\r\n            case 'Generate auto layout':\r\n                return change.applyLayoutAutoGenerationForTransitionsLayout(state);\r\n            case 'Insert new step into transition':\r\n                return change.applyAddTransitionLayoutForInsertStep(state);\r\n            case 'Create transitions for insert step':\r\n                return change.applyAddTransitionLayoutForInsertStep(state);\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    CHANGE_REVERT: (state, {payload: change}) => {\r\n        switch (change.description) {\r\n            case 'Remove transition':\r\n                return change.revertRemoveTransitionLayout(state);\r\n            case 'Add transition':\r\n                return change.revertAddTransitionLayout(state);\r\n            case 'Change transition position':\r\n                return change.revertTransitionLayoutPositionChange(state);\r\n            case 'Remove step':\r\n                return change.revertRemoveTransitionConnectionLayout(state);\r\n            case 'Generate auto layout':\r\n                return change.revertAutoGenerationForTransitionsLayout(state);\r\n            case 'Insert new step into transition':\r\n                return change.revertAddTransitionLayoutForInsertStep(state);\r\n            case 'Create transitions for insert step':\r\n                return change.revertAddTransitionLayoutForInsertStep(state);\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n}, initialState);\r\n\r\n//- Utils\r\nexport const getArrowLineType = (startStepId, endStepId) => {\r\n    return (startStepId === 'start' || startStepId === 'end' || endStepId === 'start' || endStepId === 'end') ? 'transition-dotted ' : ' ';\r\n};\r\nexport const calculateTransitionPoint = (stepLayout, side) => {\r\n    if (_.isNil(stepLayout)) {\r\n        return null;\r\n    }\r\n    const RECT_OFFSET = 5;\r\n    let pointX, pointY;\r\n    switch (side) {\r\n        case \"left\":\r\n            pointX = stepLayout.position.x + RECT_OFFSET;\r\n            pointY = stepLayout.position.y + (stepLayout.size.height / 2) + RECT_OFFSET;\r\n            break;\r\n        case \"right\":\r\n            pointX = stepLayout.position.x + stepLayout.size.width + RECT_OFFSET;\r\n            pointY = stepLayout.position.y + (stepLayout.size.height / 2) + RECT_OFFSET;\r\n            break;\r\n        case \"top\":\r\n            pointX = stepLayout.position.x + (stepLayout.size.width / 2) + RECT_OFFSET * 2;\r\n            pointY = stepLayout.position.y + RECT_OFFSET;\r\n            break;\r\n        case \"bottom\":\r\n            pointX = stepLayout.position.x + (stepLayout.size.width / 2) + RECT_OFFSET * 2;\r\n            pointY = stepLayout.position.y + stepLayout.size.height + RECT_OFFSET;\r\n            break;\r\n        default:\r\n            return 'Error';\r\n    }\r\n    return {'x': pointX, 'y': pointY, 'position': side};\r\n};\r\n\r\n// transition layout logic\r\nexport const createRightTopPoints = (startStepLayout, endStepLayout, startPoint, endPoint) => {\r\n    let points = [];\r\n    let x, y;\r\n    let distanceBetweenStepsX, distanceBetweenStepsY;\r\n\r\n    if (startPoint.x + ARROW_OFFSET < endPoint.x) {\r\n        if (startPoint.y + ARROW_OFFSET < endPoint.y) {\r\n            points.push({x: endPoint.x, y: startPoint.y});\r\n        } else {\r\n            if (startPoint.x + ARROW_LINE_OFFSET > endStepLayout.position.x) {\r\n                distanceBetweenStepsX = endPoint.x - startPoint.x;\r\n                x = startPoint.x + distanceBetweenStepsX;\r\n                points.push({x, y: startPoint.y});\r\n\r\n                distanceBetweenStepsY = startStepLayout.position.y - (endStepLayout.position.y + endStepLayout.size.height);\r\n                y = startStepLayout.position.y - distanceBetweenStepsY / 2;\r\n                points.push({x, y});\r\n\r\n                x = endStepLayout.position.x - ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n            } else {\r\n                distanceBetweenStepsX = (endPoint.x - endStepLayout.size.width / 2) - startPoint.x;\r\n                x = startPoint.x + distanceBetweenStepsX / 2;\r\n                points.push({x, y: startPoint.y});\r\n            }\r\n            y = endPoint.y - ARROW_LINE_OFFSET;\r\n            points.push({x, y}, {x: endPoint.x, y});\r\n        }\r\n    } else {\r\n        if (startStepLayout.position.y + endStepLayout.size.height > endPoint.y) {\r\n            if (startPoint.x < endStepLayout.position.x + endStepLayout.size.width) {\r\n                x = endStepLayout.position.x + endStepLayout.size.width + ARROW_LINE_OFFSET;\r\n                points.push({x, y: startPoint.y});\r\n                y = endPoint.y - ARROW_LINE_OFFSET;\r\n            } else {\r\n                x = startPoint.x + ARROW_LINE_OFFSET;\r\n                points.push({x, y: startPoint.y});\r\n\r\n                y = startStepLayout.position.y < endPoint.y ?\r\n                    startStepLayout.position.y - ARROW_LINE_OFFSET :\r\n                    endPoint.y - ARROW_LINE_OFFSET;\r\n            }\r\n        } else {\r\n            x = startPoint.x + ARROW_LINE_OFFSET;\r\n            points.push({x, y: startPoint.y});\r\n\r\n            distanceBetweenStepsY = (endPoint.y - endStepLayout.size.height / 2) - startPoint.y;\r\n            y = distanceBetweenStepsY < startStepLayout.size.height / 2 ?\r\n                startStepLayout.position.y - ARROW_LINE_OFFSET :\r\n                startPoint.y + distanceBetweenStepsY / 2 + startStepLayout.size.height / 2;\r\n        }\r\n        points.push({x, y}, {x: endPoint.x, y});\r\n    }\r\n    return points;\r\n};\r\n\r\nexport const createRightBottomPoints = (startStepLayout, endStepLayout, startPoint, endPoint) => {\r\n    let points = [];\r\n    let x, y;\r\n    let distanceBetweenStepsX, distanceBetweenStepsY;\r\n\r\n    if (startPoint.x < endPoint.x) {\r\n        if (startPoint.y - ARROW_LINE_OFFSET < endPoint.y) {\r\n            distanceBetweenStepsY = endPoint.y + ARROW_LINE_OFFSET - startPoint.y;\r\n            if (startPoint.x + ARROW_LINE_OFFSET < endStepLayout.position.x) {\r\n                if (Math.abs(distanceBetweenStepsY) < 10) {\r\n                    y = endPoint.y + ARROW_LINE_OFFSET - distanceBetweenStepsY;\r\n                } else {\r\n                    distanceBetweenStepsX = endStepLayout.position.x - startPoint.x;\r\n                    x = startPoint.x + distanceBetweenStepsX / 2;\r\n                    points.push({x, y: startPoint.y});\r\n\r\n                    y = endPoint.y + ARROW_LINE_OFFSET;\r\n                    points.push({x, y});\r\n                }\r\n            } else {\r\n                x = startPoint.x + ARROW_LINE_OFFSET;\r\n                points.push({x, y: startPoint.y});\r\n\r\n                distanceBetweenStepsY = endStepLayout.position.y - (startStepLayout.position.y + startStepLayout.size.height);\r\n                y = endStepLayout.position.y - distanceBetweenStepsY / 2;\r\n                points.push({x, y});\r\n\r\n                x = endStepLayout.position.x - ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n\r\n                y = endPoint.y + ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n            }\r\n        } else {\r\n            y = startPoint.y;\r\n        }\r\n    } else {\r\n        x = startPoint.x + ARROW_LINE_OFFSET;\r\n        points.push({x, y: startPoint.y});\r\n        if (endStepLayout.position.y + endStepLayout.size.height + ARROW_LINE_OFFSET > startStepLayout.position.y) {\r\n            if (endStepLayout.position.x + endStepLayout.size.width > startPoint.x) {\r\n                distanceBetweenStepsY = endStepLayout.position.y - (startStepLayout.position.y + startStepLayout.size.height);\r\n                y = startStepLayout.position.y + startStepLayout.size.height + distanceBetweenStepsY / 2;\r\n                points.push({x, y});\r\n\r\n                x = endStepLayout.position.x - ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n                y = endPoint.y + ARROW_LINE_OFFSET;\r\n            } else {\r\n                distanceBetweenStepsY = startStepLayout.position.y - (endStepLayout.position.y + endStepLayout.size.height);\r\n                y = ((distanceBetweenStepsY < endStepLayout.size.height) &&\r\n                    (startStepLayout.position.y + startStepLayout.size.height > endStepLayout.position.y + endStepLayout.size.height)) ?\r\n                    startPoint.y + startStepLayout.size.height + ARROW_LINE_OFFSET :\r\n                    endPoint.y + ARROW_LINE_OFFSET;\r\n            }\r\n        } else {\r\n            let distanceBetweenSteps = startStepLayout.position.y - endPoint.y;\r\n            y = startStepLayout.position.y - distanceBetweenSteps / 2;\r\n        }\r\n        points.push({x, y});\r\n    }\r\n    points.push({x: endPoint.x, y});\r\n    return points;\r\n};\r\n\r\nexport const createRightLeftPoints = (startStepLayout, endStepLayout, startPoint, endPoint) => {\r\n    let points = [];\r\n    let x, y;\r\n    let distanceBetweenStepsX, distanceBetweenStepsY;\r\n\r\n    if (startPoint.x + ARROW_LINE_OFFSET < endPoint.x) {\r\n        distanceBetweenStepsY = endPoint.y - startPoint.y;\r\n        if (Math.abs(distanceBetweenStepsY) < 5) {\r\n            x = endPoint.x;\r\n        } else {\r\n            distanceBetweenStepsX = endPoint.x - startPoint.x;\r\n            x = startPoint.x + distanceBetweenStepsX / 2;\r\n            points.push({x, y: startPoint.y});\r\n        }\r\n    } else {\r\n        x = startPoint.x + ARROW_LINE_OFFSET;\r\n        points.push({x, y: startPoint.y});\r\n        if (startStepLayout.position.y + startStepLayout.size.height > endStepLayout.position.y + endStepLayout.size.height) {\r\n            distanceBetweenStepsY = startPoint.y - (endPoint.y + endStepLayout.size.height / 2 - startStepLayout.size.height / 2);\r\n\r\n            y = distanceBetweenStepsY < endStepLayout.size.height + ARROW_LINE_OFFSET ?\r\n                endPoint.y - endStepLayout.size.height :\r\n                startPoint.y - distanceBetweenStepsY / 2;\r\n        } else {\r\n            if (endStepLayout.position.y - ARROW_LINE_OFFSET > startStepLayout.position.y + startStepLayout.size.height) {\r\n                distanceBetweenStepsY = endPoint.y - (startPoint.y + startStepLayout.size.height / 2 - endStepLayout.size.height / 2);\r\n                y = startPoint.y + distanceBetweenStepsY / 2;\r\n            } else {\r\n                y = startStepLayout.position.y - ARROW_LINE_OFFSET;\r\n            }\r\n        }\r\n        points.push({x, y});\r\n        x = endPoint.x - ARROW_LINE_OFFSET;\r\n        points.push({x, y});\r\n    }\r\n    points.push({x, y: endPoint.y});\r\n    return points;\r\n};\r\n\r\nexport const createRightRightPoints = (startStepLayout, endStepLayout, startPoint, endPoint) => {\r\n    let points = [];\r\n    let x, y;\r\n    let distanceBetweenStepsY;\r\n\r\n    if (startPoint.x < endPoint.x) {\r\n        distanceBetweenStepsY = endStepLayout.position.y + startStepLayout.size.height - startStepLayout.position.y;\r\n        if ((endStepLayout.position.y < startStepLayout.position.y + startStepLayout.size.height) &&\r\n            (endStepLayout.position.y + startStepLayout.size.height > startStepLayout.position.y) && distanceBetweenStepsY > 5) {\r\n            x = startPoint.x + ARROW_LINE_OFFSET;\r\n            points.push({x, y: startPoint.y});\r\n\r\n            y = startPoint.y + distanceBetweenStepsY;\r\n            points.push({x, y});\r\n\r\n            x = endPoint.x + ARROW_LINE_OFFSET;\r\n            points.push({x, y});\r\n        } else {\r\n            x = endPoint.x + ARROW_LINE_OFFSET;\r\n            points.push({x, y: startPoint.y});\r\n        }\r\n    } else {\r\n        x = startPoint.x + ARROW_LINE_OFFSET;\r\n        points.push({x, y: startPoint.y});\r\n        if ((endStepLayout.position.y < startStepLayout.position.y + startStepLayout.size.height) &&\r\n            (endStepLayout.position.y + startStepLayout.size.height > startStepLayout.position.y)) {\r\n\r\n            y = startPoint.y - startStepLayout.size.height;\r\n            points.push({x, y});\r\n\r\n            x = endPoint.x + ARROW_LINE_OFFSET;\r\n            points.push({x, y});\r\n        }\r\n    }\r\n    points.push({x, y: endPoint.y});\r\n    return points;\r\n};\r\n\r\nexport const createBottomTopPoints = (startStepLayout, endStepLayout, startPoint, endPoint) => {\r\n    let points = [];\r\n    let x, y;\r\n    let distanceBetweenStepsX, distanceBetweenStepsY;\r\n\r\n    if (startPoint.y < endPoint.y) {\r\n        distanceBetweenStepsY = endPoint.y - startPoint.y;\r\n        if (distanceBetweenStepsY < startStepLayout.size.height / 2) {\r\n            y = startPoint.y + ARROW_LINE_OFFSET;\r\n            if (startPoint.x > endPoint.x) {\r\n                distanceBetweenStepsX = (endStepLayout.position.x + endStepLayout.size.width) - startStepLayout.position.x;\r\n                points.push({x: startPoint.x, y});\r\n                x = endStepLayout.position.x + endStepLayout.size.width - distanceBetweenStepsX / 2;\r\n            } else {\r\n                distanceBetweenStepsX = endStepLayout.position.x - (startStepLayout.position.x + startStepLayout.size.width);\r\n                points.push({x: startPoint.x, y});\r\n                x = startStepLayout.position.x + startStepLayout.size.width + distanceBetweenStepsX / 2;\r\n            }\r\n            points.push({x, y});\r\n            y = endPoint.y - ARROW_LINE_OFFSET;\r\n            points.push({x, y});\r\n            points.push({x: endPoint.x, y});\r\n        } else {\r\n            distanceBetweenStepsX = endPoint.x - startPoint.x;\r\n            if (Math.abs(distanceBetweenStepsX) > 5) {\r\n                y = startPoint.y + distanceBetweenStepsY / 2;\r\n                x = startPoint.x;\r\n                points.push({x, y});\r\n                points.push({x: endPoint.x, y});\r\n            }\r\n        }\r\n    } else {\r\n        y = startPoint.y + ARROW_LINE_OFFSET;\r\n        points.push({x: startPoint.x, y});\r\n        if (startStepLayout.position.x + startStepLayout.size.width + ARROW_LINE_OFFSET < endStepLayout.position.x) {\r\n            distanceBetweenStepsX = endStepLayout.position.x - (startStepLayout.position.x + startStepLayout.size.width);\r\n            x = startStepLayout.position.x + startStepLayout.size.width + distanceBetweenStepsX / 2;\r\n            points.push({x, y});\r\n            y = endPoint.y - ARROW_LINE_OFFSET;\r\n        } else {\r\n            if ((endStepLayout.position.x + endStepLayout.size.width) >= startStepLayout.position.x + startStepLayout.size.width) {\r\n                x = endStepLayout.position.x + endStepLayout.size.width + ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n                y = endPoint.y - ARROW_LINE_OFFSET;\r\n            } else if (endStepLayout.position.x + endStepLayout.size.width + ARROW_LINE_OFFSET < startStepLayout.position.x) {\r\n                distanceBetweenStepsX = -(startStepLayout.position.x - (endStepLayout.position.x + endStepLayout.size.width));\r\n                x = endStepLayout.position.x + endStepLayout.size.width - distanceBetweenStepsX / 2;\r\n                points.push({x, y});\r\n                y = endPoint.y - ARROW_LINE_OFFSET;\r\n            } else {\r\n                x = startStepLayout.position.x + startStepLayout.size.width + ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n                y = endStepLayout.position.y - ARROW_LINE_OFFSET;\r\n            }\r\n        }\r\n        points.push({x, y});\r\n        points.push({x: endPoint.x, y});\r\n    }\r\n\r\n    return points;\r\n};\r\n\r\nexport const createBottomRightPoints = (startStepLayout, endStepLayout, startPoint, endPoint) => {\r\n    let points = [];\r\n    let x, y;\r\n    let distanceBetweenStepsX, distanceBetweenStepsY;\r\n\r\n    if (startPoint.y + ARROW_LINE_OFFSET > endStepLayout.position.y) {\r\n        if (startStepLayout.position.x - ARROW_LINE_OFFSET > endPoint.x) {\r\n            y = startPoint.y + ARROW_LINE_OFFSET;\r\n            distanceBetweenStepsY = y - endPoint.y;\r\n            if (Math.abs(distanceBetweenStepsY) < 10) {\r\n                points.push({x: startPoint.x, y: y - distanceBetweenStepsY});\r\n                x = endPoint.x;\r\n            } else {\r\n                points.push({x: startPoint.x, y});\r\n                distanceBetweenStepsX = startStepLayout.position.x - endPoint.x;\r\n                x = endPoint.x + distanceBetweenStepsX / 2;\r\n                points.push({x, y});\r\n            }\r\n        } else if (endPoint.x < startStepLayout.position.x + startStepLayout.size.width && endPoint.y < startPoint.y) {\r\n            y = startPoint.y + ARROW_LINE_OFFSET;\r\n            points.push({x: startPoint.x, y});\r\n\r\n            x = startStepLayout.position.x + startStepLayout.size.width + ARROW_LINE_OFFSET;\r\n            points.push({x, y});\r\n        } else {\r\n            y = endStepLayout.position.y + ARROW_LINE_OFFSET < startPoint.y ?\r\n                startPoint.y + ARROW_LINE_OFFSET :\r\n                endPoint.x - ARROW_LINE_OFFSET < startPoint.x ?\r\n                    startPoint.y + ARROW_LINE_OFFSET :\r\n                    endStepLayout.position.y + endStepLayout.size.height + ARROW_LINE_OFFSET;\r\n\r\n            distanceBetweenStepsY = endPoint.y - y;\r\n            if (Math.abs(distanceBetweenStepsY) < 10) {\r\n                x = startPoint.x;\r\n            } else {\r\n                points.push({x: startPoint.x, y});\r\n                x = endPoint.x + ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n            }\r\n        }\r\n    } else {\r\n        if (endPoint.x + ARROW_LINE_OFFSET > startPoint.x) {\r\n            distanceBetweenStepsX = startPoint.x - (endPoint.x + ARROW_LINE_OFFSET);\r\n            if (Math.abs(distanceBetweenStepsX) < 10) {\r\n                x = startPoint.x;\r\n            } else {\r\n                distanceBetweenStepsY = endStepLayout.position.y - startPoint.y;\r\n                y = startPoint.y + distanceBetweenStepsY / 2;\r\n                points.push({x: startPoint.x, y});\r\n\r\n                x = endPoint.x + ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n            }\r\n        } else {\r\n            x = startPoint.x;\r\n        }\r\n    }\r\n    points.push({x, y: endPoint.y});\r\n    return points;\r\n};\r\n\r\nexport const createBottomLeftPoints = (startStepLayout, endStepLayout, startPoint, endPoint) => {\r\n    let points = [];\r\n    let x, y;\r\n    let distanceBetweenStepsX, distanceBetweenStepsY;\r\n\r\n    if (startPoint.y + ARROW_LINE_OFFSET > endPoint.y) {\r\n        if (startPoint.x < endPoint.x) {\r\n            distanceBetweenStepsX = endPoint.x - (startStepLayout.position.x + startStepLayout.size.width);\r\n            if (startPoint.y < endStepLayout.position.y + endStepLayout.size.height) {\r\n                if (startPoint.y + ARROW_LINE_OFFSET > endPoint.y && distanceBetweenStepsX < 0) {\r\n                    x = startPoint.x;\r\n                } else if (distanceBetweenStepsX < ARROW_OFFSET) {\r\n                    x = startPoint.x;\r\n                } else {\r\n                    y = endStepLayout.position.y + endStepLayout.size.height + ARROW_LINE_OFFSET;\r\n                    points.push({x: startPoint.x, y});\r\n                    x = endPoint.x - distanceBetweenStepsX / 2;\r\n                    points.push({x, y});\r\n                }\r\n            } else if (distanceBetweenStepsX < ARROW_LINE_OFFSET) {\r\n                if (startStepLayout.position.y < endPoint.y) {\r\n                    x = startPoint.x;\r\n                } else {\r\n                    y = startPoint.y + ARROW_LINE_OFFSET;\r\n                    points.push({x: startPoint.x, y});\r\n\r\n                    x = startStepLayout.position.x + startStepLayout.size.width + ARROW_LINE_OFFSET;\r\n                    points.push({x, y});\r\n\r\n                    distanceBetweenStepsY = startStepLayout.position.y - (endStepLayout.position.y + endStepLayout.size.height);\r\n                    y = endStepLayout.position.y + endStepLayout.size.height + distanceBetweenStepsY / 2;\r\n                    points.push({x, y});\r\n\r\n                    x = endPoint.x - ARROW_LINE_OFFSET;\r\n                    points.push({x, y});\r\n                }\r\n            } else {\r\n                y = startPoint.y + ARROW_LINE_OFFSET;\r\n                points.push({x: startPoint.x, y});\r\n\r\n                x = endPoint.x - distanceBetweenStepsX / 2;\r\n                points.push({x, y});\r\n            }\r\n        } else {\r\n            if (startPoint.y < endStepLayout.position.y + endStepLayout.size.height) {\r\n                y = endStepLayout.position.y + endStepLayout.size.height + ARROW_LINE_OFFSET;\r\n                points.push({x: startPoint.x, y});\r\n                x = endPoint.x - ARROW_LINE_OFFSET;\r\n            } else {\r\n                y = startPoint.y + ARROW_LINE_OFFSET;\r\n                points.push({x: startPoint.x, y});\r\n                x = endPoint.x < startStepLayout.position.x ?\r\n                    endPoint.x - ARROW_LINE_OFFSET :\r\n                    startStepLayout.position.x - ARROW_LINE_OFFSET;\r\n            }\r\n            points.push({x, y});\r\n        }\r\n    } else {\r\n        if (startPoint.x + ARROW_LINE_OFFSET < endPoint.x) {\r\n            x = startPoint.x;\r\n        } else {\r\n            distanceBetweenStepsX = startPoint.x - (endPoint.x - ARROW_LINE_OFFSET);\r\n            if (Math.abs(distanceBetweenStepsX) < 10) {\r\n                x = endPoint.x - ARROW_LINE_OFFSET + distanceBetweenStepsX;\r\n            } else {\r\n                distanceBetweenStepsY = endStepLayout.position.y - startPoint.y;\r\n                y = startPoint.y + distanceBetweenStepsY / 2;\r\n                points.push({x: startPoint.x, y});\r\n\r\n                x = endPoint.x - ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n            }\r\n        }\r\n    }\r\n    points.push({x, y: endPoint.y});\r\n    return points;\r\n};\r\n\r\nexport const createBottomBottomPoints = (startStepLayout, endStepLayout, startPoint, endPoint) => {\r\n    let points = [];\r\n    let x, y;\r\n    let distanceBetweenStepsX, distanceBetweenStepsY;\r\n\r\n    if (startPoint.y < endPoint.y) {\r\n        if ((startStepLayout.position.x + startStepLayout.size.width > endPoint.x - ARROW_LINE_OFFSET) &&\r\n            (startPoint.x <= endPoint.x)) {\r\n            distanceBetweenStepsY = endStepLayout.position.y - startPoint.y;\r\n            if (distanceBetweenStepsY < ARROW_LINE_OFFSET) {\r\n                distanceBetweenStepsY = ARROW_LINE_OFFSET * 2;\r\n            }\r\n            y = startPoint.y + distanceBetweenStepsY / 2;\r\n            points.push({x: startPoint.x, y});\r\n\r\n            x = endStepLayout.position.x - ARROW_LINE_OFFSET;\r\n            points.push({x, y});\r\n            y = endPoint.y + ARROW_LINE_OFFSET;\r\n        } else {\r\n            if ((endStepLayout.position.x + endStepLayout.size.width > startPoint.x - ARROW_LINE_OFFSET) &&\r\n                (startPoint.x > endPoint.x)) {\r\n                distanceBetweenStepsY = endStepLayout.position.y - startPoint.y;\r\n                if (distanceBetweenStepsY < ARROW_LINE_OFFSET) {\r\n                    distanceBetweenStepsY = ARROW_LINE_OFFSET * 2;\r\n                }\r\n                y = startPoint.y + distanceBetweenStepsY / 2;\r\n                points.push({x: startPoint.x, y});\r\n\r\n                x = endStepLayout.position.x + endStepLayout.size.width + ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n                y = endPoint.y + ARROW_LINE_OFFSET;\r\n            } else {\r\n                y = endPoint.y + ARROW_LINE_OFFSET;\r\n                x = startPoint.x;\r\n            }\r\n        }\r\n        points.push({x, y});\r\n    } else {\r\n        y = startPoint.y + ARROW_LINE_OFFSET;\r\n        if ((startStepLayout.position.x + startStepLayout.size.width + ARROW_LINE_OFFSET > endPoint.x) &&\r\n            (endPoint.x >= startPoint.x)) {\r\n            points.push({x: startPoint.x, y});\r\n            x = startStepLayout.position.x + startStepLayout.size.width + ARROW_LINE_OFFSET;\r\n            distanceBetweenStepsX = x - endPoint.x;\r\n            if (Math.abs(distanceBetweenStepsX) < 10) {\r\n                x = x - distanceBetweenStepsX;\r\n                points.push({x, y});\r\n                y = endPoint.y;\r\n            } else {\r\n                x = startStepLayout.position.x + startStepLayout.size.width + ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n                distanceBetweenStepsY = startStepLayout.position.y - endPoint.y;\r\n                if (distanceBetweenStepsY < ARROW_LINE_OFFSET) {\r\n                    distanceBetweenStepsY = ARROW_LINE_OFFSET * 2;\r\n                }\r\n                y = endPoint.y + distanceBetweenStepsY / 2;\r\n                points.push({x, y});\r\n            }\r\n        } else {\r\n            if (endPoint.x + ARROW_LINE_OFFSET > startStepLayout.position.x &&\r\n                endPoint.x + ARROW_LINE_OFFSET - ARROW_LINE_OFFSET <= startPoint.x) {\r\n                points.push({x: startPoint.x, y});\r\n\r\n                x = startStepLayout.position.x - ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n                distanceBetweenStepsY = startStepLayout.position.y - endPoint.y;\r\n                if (distanceBetweenStepsY < ARROW_LINE_OFFSET) {\r\n                    distanceBetweenStepsY = ARROW_LINE_OFFSET * 2;\r\n                }\r\n                y = endPoint.y + distanceBetweenStepsY / 2;\r\n            } else {\r\n                x = startPoint.x;\r\n            }\r\n            points.push({x, y});\r\n        }\r\n    }\r\n    points.push({x: endPoint.x, y});\r\n    return points;\r\n};\r\n\r\nexport const createLeftTopPoints = (startStepLayout, endStepLayout, startPoint, endPoint) => {\r\n    let points = [];\r\n    let x, y;\r\n    let distanceBetweenStepsX, distanceBetweenStepsY;\r\n\r\n    if (startPoint.y + ARROW_OFFSET > endStepLayout.position.y) {\r\n        distanceBetweenStepsX = startPoint.x - (endStepLayout.position.x + endStepLayout.size.width);\r\n        distanceBetweenStepsY = startStepLayout.position.y - (endStepLayout.position.y + endStepLayout.size.height);\r\n        if (startStepLayout.position.x + startStepLayout.size.width / 2 > endStepLayout.position.x + endStepLayout.size.width &&\r\n            distanceBetweenStepsX < ARROW_LINE_OFFSET && distanceBetweenStepsY > ARROW_LINE_OFFSET) {\r\n            x = startPoint.x - ARROW_LINE_OFFSET;\r\n            points.push({x, y: startPoint.y});\r\n\r\n            y = endStepLayout.position.y + endStepLayout.size.height + distanceBetweenStepsY / 2;\r\n            points.push({x, y});\r\n\r\n            x = endStepLayout.position.x + endStepLayout.size.width + ARROW_LINE_OFFSET;\r\n            points.push({x, y});\r\n            y = endPoint.y - ARROW_LINE_OFFSET;\r\n        } else {\r\n            if (endStepLayout.position.x + endStepLayout.size.width + ARROW_LINE_OFFSET < startPoint.x) {\r\n                x = startPoint.x - distanceBetweenStepsX / 2;\r\n                points.push({x, y: startPoint.y});\r\n                y = endPoint.y - ARROW_LINE_OFFSET;\r\n            } else if (startPoint.x < endStepLayout.position.x) {\r\n                x = startPoint.x - ARROW_LINE_OFFSET;\r\n                points.push({x, y: startPoint.y});\r\n\r\n                y = startStepLayout.position.y < endPoint.y ?\r\n                    startStepLayout.position.y - ARROW_LINE_OFFSET :\r\n                    endPoint.y - ARROW_LINE_OFFSET;\r\n            } else {\r\n                x = endStepLayout.position.x - ARROW_LINE_OFFSET;\r\n                points.push({x, y: startPoint.y});\r\n                y = endPoint.y - ARROW_LINE_OFFSET;\r\n            }\r\n        }\r\n        points.push({x, y});\r\n    } else {\r\n        if (endPoint.x + ARROW_LINE_OFFSET > startPoint.x) {\r\n            if (startStepLayout.position.x + startStepLayout.size.width + ARROW_LINE_OFFSET < endPoint.x &&\r\n                startStepLayout.position.y + startStepLayout.size.height + ARROW_LINE_OFFSET > endPoint.y) {\r\n                x = startPoint.x - ARROW_LINE_OFFSET;\r\n                points.push({x, y: startPoint.y});\r\n\r\n                y = startStepLayout.position.y - ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n            } else {\r\n                distanceBetweenStepsY = endPoint.y - (startStepLayout.position.y + startStepLayout.size.height);\r\n                if (distanceBetweenStepsY < ARROW_LINE_OFFSET) {\r\n                    y = startPoint.y;\r\n                } else {\r\n                    x = startPoint.x - ARROW_LINE_OFFSET;\r\n                    distanceBetweenStepsX = x - endPoint.x;\r\n                    if (Math.abs(distanceBetweenStepsX) < 10) {\r\n                        y = startPoint.y;\r\n                    } else {\r\n                        points.push({x, y: startPoint.y});\r\n                        y = endPoint.y - distanceBetweenStepsY / 2;\r\n                        points.push({x, y});\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            y = startPoint.y;\r\n        }\r\n    }\r\n    points.push({x: endPoint.x, y});\r\n    return points;\r\n};\r\n\r\nexport const createLeftBottomPoints = (startStepLayout, endStepLayout, startPoint, endPoint) => {\r\n    let points = [];\r\n    let x, y;\r\n    let distanceBetweenStepsX, distanceBetweenStepsY;\r\n\r\n    if (startPoint.y > endStepLayout.position.y + endStepLayout.size.height) {\r\n        if (endPoint.x > startPoint.x) {\r\n            distanceBetweenStepsY = startStepLayout.position.y - endPoint.y;\r\n            x = startPoint.x - ARROW_LINE_OFFSET;\r\n            points.push({x, y: startPoint.y});\r\n\r\n            y = distanceBetweenStepsY < ARROW_LINE_OFFSET ?\r\n                startStepLayout.position.y + startStepLayout.size.height + ARROW_LINE_OFFSET :\r\n                endPoint.y + distanceBetweenStepsY / 2;\r\n            points.push({x, y});\r\n        } else {\r\n            y = startPoint.y;\r\n        }\r\n    } else {\r\n        if (endStepLayout.position.x + endStepLayout.size.width + ARROW_LINE_OFFSET > startPoint.x) {\r\n            x = endStepLayout.position.x > startPoint.x ?\r\n                endStepLayout.position.x + endStepLayout.size.width < startPoint.x ?\r\n                    endStepLayout.position.x - ARROW_LINE_OFFSET :\r\n                    startPoint.x - ARROW_LINE_OFFSET :\r\n                endStepLayout.position.x - ARROW_LINE_OFFSET;\r\n        } else {\r\n            distanceBetweenStepsX = startPoint.x - (endStepLayout.position.x + endStepLayout.size.width);\r\n            x = startPoint.x - distanceBetweenStepsX / 2;\r\n        }\r\n        points.push({x, y: startPoint.y});\r\n        y = endPoint.y + ARROW_LINE_OFFSET;\r\n        points.push({x, y});\r\n    }\r\n    points.push({x: endPoint.x, y});\r\n    return points;\r\n};\r\n\r\nexport const createLeftLeftPoints = (startStepLayout, endStepLayout, startPoint, endPoint) => {\r\n    let points = [];\r\n    let x, y;\r\n    let distanceBetweenStepsX, distanceBetweenStepsY;\r\n\r\n    if (startPoint.y + ARROW_LINE_OFFSET < endStepLayout.position.y) {\r\n        x = endPoint.x > startPoint.x + ARROW_LINE_OFFSET ?\r\n            startPoint.x - ARROW_LINE_OFFSET :\r\n            endPoint.x - ARROW_LINE_OFFSET;\r\n\r\n        points.push({x, y: startPoint.y});\r\n    } else {\r\n        if (endStepLayout.position.y + endStepLayout.size.height + ARROW_LINE_OFFSET < startPoint.y) {\r\n            x = endPoint.x + ARROW_LINE_OFFSET > startPoint.x ?\r\n                startPoint.x - ARROW_LINE_OFFSET :\r\n                endPoint.x - ARROW_LINE_OFFSET;\r\n\r\n            points.push({x, y: startPoint.y});\r\n        } else if (endPoint.y < startPoint.y) {\r\n            if (startStepLayout.position.x + startStepLayout.size.width + ARROW_LINE_OFFSET < endPoint.x) {\r\n                x = startPoint.x - ARROW_LINE_OFFSET;\r\n                points.push({x, y: startPoint.y});\r\n\r\n                y = startStepLayout.position.y - ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n\r\n                distanceBetweenStepsX = endPoint.x - (startStepLayout.position.x + startStepLayout.size.width);\r\n                x = endPoint.x - distanceBetweenStepsX / 2;\r\n                points.push({x, y});\r\n            } else if (endStepLayout.position.x + endStepLayout.size.width > startPoint.x) {\r\n                if (endPoint.x > startPoint.x) {\r\n                    x = startPoint.x;\r\n                } else {\r\n                    x = endPoint.x - ARROW_LINE_OFFSET;\r\n                    points.push({x, y: startPoint.y});\r\n                }\r\n            } else {\r\n                y = endStepLayout.position.y + endStepLayout.size.height + ARROW_LINE_OFFSET;\r\n                distanceBetweenStepsY = startPoint.y - y;\r\n                if (Math.abs(distanceBetweenStepsY) < 10) {\r\n                    y = y + distanceBetweenStepsY;\r\n                } else {\r\n                    distanceBetweenStepsX = startPoint.x - (endStepLayout.position.x + endStepLayout.size.width);\r\n                    x = startPoint.x - distanceBetweenStepsX / 2;\r\n                    points.push({x, y: startPoint.y});\r\n                    points.push({x, y});\r\n                }\r\n                x = endPoint.x - ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n            }\r\n        } else if (startStepLayout.position.x + startStepLayout.size.width + ARROW_LINE_OFFSET < endPoint.x) {\r\n            x = startPoint.x - ARROW_LINE_OFFSET;\r\n            points.push({x, y: startPoint.y});\r\n            y = startStepLayout.position.y + startStepLayout.size.height + ARROW_LINE_OFFSET;\r\n\r\n            distanceBetweenStepsY = endPoint.y - (y);\r\n            if (Math.abs(distanceBetweenStepsY) < 10) {\r\n                y = y + distanceBetweenStepsY;\r\n                points.push({x, y});\r\n                x = startPoint.x;\r\n            } else {\r\n                points.push({x, y});\r\n                distanceBetweenStepsX = endPoint.x - (startStepLayout.position.x + startStepLayout.size.width);\r\n                x = endPoint.x - distanceBetweenStepsX / 2;\r\n                points.push({x, y});\r\n            }\r\n        } else if (endStepLayout.position.x + endStepLayout.size.width > startPoint.x) {\r\n            if (endPoint.x > startPoint.x) {\r\n                x = startPoint.x;\r\n            } else {\r\n                x = endPoint.x - ARROW_LINE_OFFSET;\r\n                points.push({x, y: startPoint.y});\r\n            }\r\n        } else {\r\n            y = endStepLayout.position.y - ARROW_LINE_OFFSET;\r\n            distanceBetweenStepsY = startPoint.y - y;\r\n            if (Math.abs(distanceBetweenStepsY) < 10) {\r\n                y = y + distanceBetweenStepsY;\r\n            } else {\r\n                distanceBetweenStepsX = startPoint.x - (endStepLayout.position.x + endStepLayout.size.width);\r\n                x = startPoint.x - distanceBetweenStepsX / 2;\r\n                points.push({x, y: startPoint.y}, {x, y});\r\n            }\r\n            x = endPoint.x - ARROW_LINE_OFFSET;\r\n            points.push({x, y});\r\n        }\r\n    }\r\n    points.push({x, y: endPoint.y});\r\n    return points;\r\n};\r\n\r\nexport const createLeftRightPoints = (startStepLayout, endStepLayout, startPoint, endPoint) => {\r\n    let points = [];\r\n    let x, y;\r\n    let distanceBetweenStepsX, distanceBetweenStepsY;\r\n\r\n    if (startStepLayout.position.x + ARROW_OFFSET > endStepLayout.position.x) {\r\n        distanceBetweenStepsX = startPoint.x - endPoint.x;\r\n        if (distanceBetweenStepsX > ARROW_LINE_OFFSET) {\r\n            distanceBetweenStepsY = startPoint.y - endPoint.y;\r\n            if (Math.abs(distanceBetweenStepsY) < 5) {\r\n                x = endPoint.x;\r\n            } else {\r\n                x = startPoint.x - distanceBetweenStepsX / 2;\r\n                points.push({x, y: startPoint.y});\r\n            }\r\n        } else {\r\n            let distanceBetweenStepsY = startStepLayout.position.y - (endStepLayout.position.y + endStepLayout.size.height);\r\n            if (distanceBetweenStepsY < ARROW_LINE_OFFSET) {\r\n                if (endPoint.x < startStepLayout.position.x) {\r\n                    x = startPoint.x;\r\n                } else {\r\n                    distanceBetweenStepsY = endStepLayout.position.y - (startStepLayout.position.y + startStepLayout.size.height);\r\n                    x = endStepLayout.position.x - ARROW_LINE_OFFSET;\r\n                    points.push({x, y: startPoint.y});\r\n\r\n                    y = startStepLayout.position.y + startStepLayout.size.height < endStepLayout.position.y &&\r\n                    distanceBetweenStepsY < ARROW_LINE_OFFSET ?\r\n                        endStepLayout.position.y + endStepLayout.size.height + ARROW_LINE_OFFSET :\r\n                        endStepLayout.position.y - ARROW_LINE_OFFSET;\r\n\r\n                    points.push({x, y});\r\n                    x = endPoint.x + ARROW_LINE_OFFSET;\r\n                    points.push({x, y});\r\n                }\r\n            } else {\r\n                distanceBetweenStepsY = startStepLayout.position.y - (endStepLayout.position.y + endStepLayout.size.height);\r\n                x = startPoint.x - ARROW_LINE_OFFSET;\r\n                points.push({x, y: startPoint.y});\r\n\r\n                y = distanceBetweenStepsY < ARROW_LINE_OFFSET ?\r\n                    endStepLayout.position.y - ARROW_LINE_OFFSET :\r\n                    startStepLayout.position.y - distanceBetweenStepsY / 2;\r\n\r\n                points.push({x, y});\r\n                x = endPoint.x + ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n            }\r\n        }\r\n    } else {\r\n        x = startPoint.x - ARROW_LINE_OFFSET;\r\n        points.push({x, y: startPoint.y});\r\n\r\n        y = startStepLayout.position.y < endStepLayout.position.y ?\r\n            startStepLayout.position.y - ARROW_LINE_OFFSET :\r\n            endStepLayout.position.y - ARROW_LINE_OFFSET;\r\n\r\n        points.push({x, y});\r\n        x = endPoint.x + ARROW_LINE_OFFSET;\r\n        points.push({x, y});\r\n    }\r\n    points.push({x, y: endPoint.y});\r\n    return points;\r\n};\r\n\r\nexport const createTopTopPoints = (startStepLayout, endStepLayout, startPoint, endPoint) => {\r\n    let points = [];\r\n    let x, y;\r\n    let distanceBetweenStepsX, distanceBetweenStepsY;\r\n\r\n    if (startPoint.x < endPoint.x) {\r\n        if (startPoint.y > endPoint.y + ARROW_OFFSET) {\r\n            if (endStepLayout.position.x - ARROW_LINE_OFFSET < startPoint.x) {\r\n                distanceBetweenStepsY = startPoint.y - (endStepLayout.position.y + endStepLayout.size.height);\r\n                y = startPoint.y - distanceBetweenStepsY / 2;\r\n                points.push({x: startPoint.x, y});\r\n\r\n                x = endStepLayout.position.x + endStepLayout.size.width + ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n            } else {\r\n                x = startPoint.x;\r\n            }\r\n            y = endPoint.y - ARROW_LINE_OFFSET;\r\n            points.push({x, y});\r\n        } else if (startStepLayout.position.x + startStepLayout.size.width > endPoint.x - ARROW_LINE_OFFSET) {\r\n            distanceBetweenStepsY = endPoint.y - (startStepLayout.position.y + startStepLayout.size.height);\r\n            if (distanceBetweenStepsY < ARROW_OFFSET) {\r\n                y = startPoint.y;\r\n            } else {\r\n                y = startPoint.y - ARROW_LINE_OFFSET;\r\n                points.push({x: startPoint.x, y});\r\n\r\n                x = startStepLayout.position.x + startStepLayout.size.width + ARROW_LINE_OFFSET;\r\n                distanceBetweenStepsX = x - endPoint.x;\r\n                if (Math.abs(distanceBetweenStepsX) < 10) {\r\n                    y = startPoint.y - ARROW_LINE_OFFSET;\r\n                } else {\r\n                    points.push({x, y});\r\n                    y = endPoint.y - distanceBetweenStepsY / 2;\r\n                    points.push({x, y});\r\n                }\r\n            }\r\n        } else {\r\n            y = startPoint.y - ARROW_LINE_OFFSET;\r\n            points.push({x: startPoint.x, y});\r\n        }\r\n    } else {\r\n        if (startPoint.y > endPoint.y + ARROW_OFFSET) {\r\n            if (endStepLayout.position.x + endStepLayout.size.width + ARROW_LINE_OFFSET > startPoint.x) {\r\n                distanceBetweenStepsY = startPoint.y - (endStepLayout.position.y + endStepLayout.size.height);\r\n                y = startPoint.y - distanceBetweenStepsY / 2;\r\n                points.push({x: startPoint.x, y});\r\n\r\n                x = endStepLayout.position.x - ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n                y = endPoint.y - ARROW_LINE_OFFSET;\r\n            } else {\r\n                y = endPoint.y - ARROW_LINE_OFFSET;\r\n                x = startPoint.x;\r\n            }\r\n            points.push({x, y});\r\n        } else if (endPoint.x + ARROW_LINE_OFFSET > startStepLayout.position.x) {\r\n            distanceBetweenStepsY = endPoint.y - (startStepLayout.position.y + startStepLayout.size.height);\r\n            if (distanceBetweenStepsY < ARROW_OFFSET) {\r\n                y = startPoint.y;\r\n            } else {\r\n                y = startPoint.y - ARROW_LINE_OFFSET;\r\n                points.push({x: startPoint.x, y});\r\n\r\n                x = startStepLayout.position.x - ARROW_LINE_OFFSET;\r\n                distanceBetweenStepsX = x - endPoint.x;\r\n                if (Math.abs(distanceBetweenStepsX) < 10) {\r\n                    y = startPoint.y - ARROW_LINE_OFFSET;\r\n                } else {\r\n                    points.push({x, y});\r\n                    y = endPoint.y - distanceBetweenStepsY / 2;\r\n                    points.push({x, y});\r\n                }\r\n            }\r\n        } else {\r\n            y = startPoint.y - ARROW_LINE_OFFSET;\r\n            points.push({x: startPoint.x, y});\r\n        }\r\n    }\r\n    points.push({x: endPoint.x, y});\r\n    return points;\r\n};\r\n\r\nexport const createTopLeftPoints = (startStepLayout, endStepLayout, startPoint, endPoint) => {\r\n    let points = [];\r\n    let x, y;\r\n    let distanceBetweenStepsX, distanceBetweenStepsY;\r\n\r\n    if (startPoint.x < endPoint.x) {\r\n        if (startPoint.y > endStepLayout.position.y + endStepLayout.size.height) {\r\n            x = startPoint.x;\r\n        } else {\r\n            distanceBetweenStepsY = startPoint.y - ARROW_LINE_OFFSET - endPoint.y;\r\n            y = startPoint.y - ARROW_LINE_OFFSET;\r\n            if (Math.abs(distanceBetweenStepsY) < 10) {\r\n                x = startPoint.x;\r\n            } else {\r\n                distanceBetweenStepsX = endPoint.x - (startStepLayout.position.x + startStepLayout.size.width);\r\n                if (distanceBetweenStepsX > ARROW_LINE_OFFSET) {\r\n                    points.push({x: startPoint.x, y});\r\n                    x = endPoint.x - distanceBetweenStepsX / 2;\r\n                    points.push({x, y});\r\n                } else {\r\n                    distanceBetweenStepsY = endStepLayout.position.y - (startStepLayout.position.y + startStepLayout.size.height);\r\n                    if (distanceBetweenStepsY < ARROW_LINE_OFFSET) {\r\n                        if (endPoint.y < startStepLayout.position.y) {\r\n                            x = startPoint.x;\r\n                        } else {\r\n                            y = startStepLayout.position.y - ARROW_LINE_OFFSET;\r\n                            points.push({x: startPoint.x, y});\r\n\r\n                            x = startStepLayout.position.x - ARROW_LINE_OFFSET;\r\n                            points.push({x, y});\r\n                        }\r\n                    } else {\r\n                        y = startPoint.y - ARROW_LINE_OFFSET;\r\n                        points.push({x: startPoint.x, y});\r\n\r\n                        x = startStepLayout.position.x + startStepLayout.size.width + ARROW_LINE_OFFSET;\r\n                        points.push({x, y});\r\n\r\n                        y = endStepLayout.position.y - distanceBetweenStepsY / 2;\r\n                        points.push({x, y});\r\n\r\n                        x = endPoint.x - ARROW_LINE_OFFSET;\r\n                        points.push({x, y});\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        if (startPoint.y > endStepLayout.position.y + endStepLayout.size.height + ARROW_OFFSET) {\r\n            distanceBetweenStepsY = startPoint.y - (endStepLayout.position.y + endStepLayout.size.height);\r\n            y = startPoint.y - distanceBetweenStepsY / 2;\r\n            points.push({x: startPoint.x, y});\r\n            x = endPoint.x - ARROW_LINE_OFFSET;\r\n        } else {\r\n            if (startStepLayout.position.y < endStepLayout.position.y + ARROW_LINE_OFFSET) {\r\n                y = startStepLayout.position.y - ARROW_LINE_OFFSET;\r\n                points.push({x: startPoint.x, y});\r\n\r\n                x = endPoint.x + ARROW_LINE_OFFSET > startStepLayout.position.x ?\r\n                    startStepLayout.position.x - ARROW_LINE_OFFSET :\r\n                    endPoint.x - ARROW_LINE_OFFSET;\r\n            } else {\r\n                y = endStepLayout.position.y - ARROW_LINE_OFFSET;\r\n                points.push({x: startPoint.x, y});\r\n                x = endPoint.x - ARROW_LINE_OFFSET;\r\n            }\r\n        }\r\n        points.push({x, y});\r\n    }\r\n    points.push({x, y: endPoint.y});\r\n    return points;\r\n};\r\n\r\nexport const createTopBottomPoints = (startStepLayout, endStepLayout, startPoint, endPoint) => {\r\n    let points = [];\r\n    let x, y;\r\n    let distanceBetweenStepsX, distanceBetweenStepsY;\r\n\r\n    if (startPoint.x < endPoint.x) {\r\n        if (endStepLayout.position.y + endStepLayout.size.height + ARROW_LINE_OFFSET < startStepLayout.position.y) {\r\n            distanceBetweenStepsX = startPoint.x - endPoint.x;\r\n            if (Math.abs(distanceBetweenStepsX) > 5) {\r\n                distanceBetweenStepsY = startStepLayout.position.y - (endStepLayout.position.y + endStepLayout.size.height);\r\n                y = startPoint.y - distanceBetweenStepsY / 2;\r\n                x = startPoint.x;\r\n                points.push({x, y});\r\n                points.push({x: endPoint.x, y});\r\n            }\r\n        } else {\r\n            if (startStepLayout.position.x + startStepLayout.size.width + ARROW_LINE_OFFSET < endStepLayout.position.x) {\r\n                y = startPoint.y - ARROW_LINE_OFFSET;\r\n                points.push({x: startPoint.x, y});\r\n\r\n                distanceBetweenStepsX = endStepLayout.position.x - (startStepLayout.position.x + startStepLayout.size.width);\r\n                x = startStepLayout.position.x + startStepLayout.size.width + distanceBetweenStepsX / 2;\r\n            } else {\r\n                if (endStepLayout.position.x + endStepLayout.size.width - ARROW_LINE_OFFSET < startStepLayout.position.x + startStepLayout.size.width) {\r\n                    y = startPoint.y - ARROW_LINE_OFFSET;\r\n                    points.push({x: startPoint.x, y});\r\n                    x = startStepLayout.position.x + startStepLayout.size.width + ARROW_LINE_OFFSET;\r\n                } else {\r\n                    y = endStepLayout.position.y > startStepLayout.position.y ?\r\n                        startPoint.y - ARROW_LINE_OFFSET :\r\n                        endStepLayout.position.y - ARROW_LINE_OFFSET;\r\n\r\n                    points.push({x: startPoint.x, y});\r\n                    x = endStepLayout.position.x + endStepLayout.size.width + ARROW_LINE_OFFSET;\r\n                }\r\n            }\r\n            points.push({x, y});\r\n            y = endPoint.y + ARROW_LINE_OFFSET;\r\n            points.push({x, y});\r\n            points.push({x: endPoint.x, y});\r\n        }\r\n    } else {\r\n        if (endStepLayout.position.y + endStepLayout.size.height + ARROW_LINE_OFFSET < startStepLayout.position.y) {\r\n            distanceBetweenStepsX = startPoint.x - endPoint.x;\r\n            if (Math.abs(distanceBetweenStepsX) > 5) {\r\n                distanceBetweenStepsY = startStepLayout.position.y - (endStepLayout.position.y + endStepLayout.size.height);\r\n                y = startPoint.y - distanceBetweenStepsY / 2;\r\n                x = startPoint.x;\r\n                points.push({x, y});\r\n                points.push({x: endPoint.x, y});\r\n            }\r\n        } else {\r\n            if (endStepLayout.position.x + endStepLayout.size.width + ARROW_LINE_OFFSET < startStepLayout.position.x) {\r\n                y = startPoint.y - ARROW_LINE_OFFSET;\r\n                points.push({x: startPoint.x, y});\r\n\r\n                distanceBetweenStepsX = startStepLayout.position.x - (endStepLayout.position.x + endStepLayout.size.width);\r\n                x = startStepLayout.position.x - distanceBetweenStepsX / 2;\r\n            } else {\r\n                if (endStepLayout.position.x + ARROW_LINE_OFFSET > startStepLayout.position.x) {\r\n                    y = startPoint.y - ARROW_LINE_OFFSET;\r\n                    points.push({x: startPoint.x, y});\r\n                    x = startStepLayout.position.x - ARROW_LINE_OFFSET;\r\n                } else {\r\n                    endStepLayout.position.y < startStepLayout.position.y ?\r\n                        y = endStepLayout.position.y - ARROW_LINE_OFFSET :\r\n                        y = startPoint.y - ARROW_LINE_OFFSET;\r\n\r\n                    points.push({x: startPoint.x, y});\r\n                    x = endStepLayout.position.x - ARROW_LINE_OFFSET;\r\n                }\r\n            }\r\n            points.push({x, y});\r\n            y = endPoint.y + ARROW_LINE_OFFSET;\r\n            points.push({x, y});\r\n            points.push({x: endPoint.x, y});\r\n        }\r\n    }\r\n    return points;\r\n};\r\n\r\nexport const createTopRightPoints = (startStepLayout, endStepLayout, startPoint, endPoint) => {\r\n    let points = [];\r\n    let x, y;\r\n    let distanceBetweenStepsX, distanceBetweenStepsY;\r\n\r\n    if (startPoint.x - ARROW_LINE_OFFSET < endPoint.x) {\r\n        if (endStepLayout.position.y + ARROW_LINE_OFFSET > startPoint.y) {\r\n            y = startPoint.y - ARROW_LINE_OFFSET;\r\n            points.push({x: startPoint.x, y});\r\n\r\n            x = endPoint.x + ARROW_LINE_OFFSET < startStepLayout.position.x + startStepLayout.size.width ?\r\n                startStepLayout.position.x + startStepLayout.size.width + ARROW_LINE_OFFSET :\r\n                endPoint.x + ARROW_LINE_OFFSET;\r\n            points.push({x, y});\r\n        } else {\r\n            distanceBetweenStepsY = startPoint.y - (endStepLayout.position.y + endStepLayout.size.height);\r\n            y = distanceBetweenStepsY > ARROW_LINE_OFFSET ?\r\n                startPoint.y - distanceBetweenStepsY / 2 :\r\n                endStepLayout.position.y - ARROW_LINE_OFFSET;\r\n\r\n            distanceBetweenStepsX = startPoint.x - (endPoint.x + ARROW_LINE_OFFSET);\r\n            if (Math.abs(distanceBetweenStepsX) < 10) {\r\n                x = startPoint.x;\r\n            } else {\r\n                points.push({x: startPoint.x, y});\r\n                x = endPoint.x + ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n            }\r\n        }\r\n    } else {\r\n        if (endPoint.y + ARROW_LINE_OFFSET <= startPoint.y) {\r\n            x = startPoint.x;\r\n        } else if (endPoint.x + ARROW_LINE_OFFSET < startStepLayout.position.x) {\r\n            y = startPoint.y - ARROW_LINE_OFFSET;\r\n            distanceBetweenStepsY = y - endPoint.y;\r\n            if (Math.abs(distanceBetweenStepsY) < 10) {\r\n                x = startPoint.x;\r\n            } else {\r\n                points.push({x: startPoint.x, y});\r\n                distanceBetweenStepsX = startStepLayout.position.x - endPoint.x;\r\n                x = endPoint.x + distanceBetweenStepsX / 2;\r\n                points.push({x, y});\r\n            }\r\n        } else if (endPoint.y > startStepLayout.position.y + startStepLayout.size.height) {\r\n            distanceBetweenStepsY = endStepLayout.position.y - (startStepLayout.position.y + startStepLayout.size.height);\r\n            if (distanceBetweenStepsY < ARROW_OFFSET) {\r\n                x = startPoint.x;\r\n            } else {\r\n                y = startPoint.y - ARROW_LINE_OFFSET;\r\n                points.push({x: startPoint.x, y});\r\n\r\n                x = startStepLayout.position.x - ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n\r\n                y = endStepLayout.position.y - distanceBetweenStepsY / 2;\r\n                points.push({x, y});\r\n\r\n                x = endPoint.x + ARROW_LINE_OFFSET;\r\n                points.push({x, y});\r\n            }\r\n        } else {\r\n            x = startPoint.x;\r\n        }\r\n    }\r\n    points.push({x, y: endPoint.y});\r\n    return points;\r\n};\r\n\r\n//- Selectors\r\nexport const getTransitionsLayout = state => state.transitionsLayout;\r\n\r\nexport const getTransitionLayoutById = (state, id) =>\r\n    _.find(getTransitionsLayout(state), (layout, transitionId) => transitionId === id);","import {createAction, handleActions} from 'redux-actions';\r\nimport {createSelector} from 'reselect';\r\nimport _ from 'lodash';\r\nimport {getSelectedStep, getStepTypeById, highlightStep} from \"./steps\";\r\nimport React from 'react';\r\nimport {Translate} from 'react-localize-redux';\r\nimport {translatedReportLabels} from '../../dictionary'\r\nimport * as MainPoints from \"./transitionsLayout\";\r\nimport {calculateTransitionPoint} from \"./transitionsLayout\";\r\n\r\nexport const selectTransition = createAction(\"TRANSITION_SELECT\", id => id);\r\nexport const highlightTransition = createAction(\"TRANSITION_HIGHLIGHT\", id => id);\r\nexport const checkIsTransitionIntersectedByStep = createAction(\"TRANSITIONS_INTERSECT\", (position, stepsLayout, transitionsLayout) => ({\r\n    position,\r\n    stepsLayout,\r\n    transitionsLayout\r\n}));\r\nexport const checkIsTransitionImposed = (position) => (dispatch, getState) => {\r\n    dispatch(checkIsTransitionIntersectedByStep(position, getState().stepsLayout, getState().transitionsLayout, getState()))\r\n};\r\n\r\n\r\nexport const highlightElement = (id, elementType) => (dispatch, getState) => {\r\n    if (_.isNil(id)) {\r\n        dispatch(highlightTransition(null));\r\n        dispatch(highlightStep(null));\r\n    }\r\n\r\n    switch (elementType) {\r\n        case 'transition':\r\n            let transition = getTransitionById(getState(), id);\r\n            dispatch(highlightStep(transition.startStepId));\r\n            dispatch(highlightTransition(id));\r\n            dispatch(highlightStep(transition.endStepId));\r\n            break;\r\n        case 'step':\r\n            let allTransitions = getTransitionsByStartStepId(getState(), id);\r\n            _.mapValues(allTransitions, transition => dispatch(highlightTransition(transition.id)));\r\n            dispatch(highlightStep(id));\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n};\r\n\r\nexport const reportsLabels = {\r\n    'txt_report': 'Text',\r\n    'xml_report': 'XML',\r\n    'overview_report': 'PDF overview',\r\n    'mask_report': 'PDF mask',\r\n    'comment_report': 'Comment',\r\n    'layer_report': 'Layer',\r\n    'compare_report': 'Compare',\r\n    'inventory_report': 'Inventory'\r\n};\r\n\r\nexport const typeLabels = {\r\n    'on_success': 'success',\r\n    'on_failure': 'failure',\r\n    'on_error': 'error',\r\n    'on_warning': 'warning',\r\n    'on_hit': 'hit',\r\n    'on_info': 'info',\r\n    'else': 'else',\r\n    'if_disabled': 'disabled'\r\n};\r\n\r\nconst availableReportsByStartStepType = {\r\n    'processplan': [],\r\n    'profile': ['txt_report', 'xml_report', 'overview_report', 'mask_report', 'comment_report', 'layer_report', 'compare_report', 'inventory_report'],\r\n    'check': ['txt_report', 'xml_report', 'overview_report', 'mask_report', 'comment_report', 'layer_report', 'compare_report', 'inventory_report'],\r\n    'fixup': ['txt_report', 'xml_report', 'overview_report', 'mask_report', 'comment_report', 'layer_report', 'compare_report', 'inventory_report'],\r\n    'action': ['compare_report', 'inventory_report'],\r\n    'variable': ['compare_report', 'inventory_report'],\r\n    'filepickup': [],\r\n    'pdfcopy': [],\r\n    'quickcheck': [],\r\n    'addfiles': [],\r\n    'rename': []\r\n};\r\n\r\nconst availableTransitionTypesByStartStepType = {\r\n    \"processplan\": [\"on_error\", \"else\", \"if_disabled\"],\r\n    \"profile\": [\"on_error\", \"on_warning\", \"on_info\", \"on_success\", \"if_disabled\"],\r\n    \"check\": [\"on_hit\", \"on_success\", \"if_disabled\"],\r\n    \"fixup\": [\"on_success\", \"on_failure\", \"if_disabled\"],\r\n    \"action\": [\"on_success\", \"on_failure\", \"if_disabled\"],\r\n    \"variable\": [\"on_success\", \"on_failure\", \"if_disabled\"],\r\n    \"filepickup\": [\"on_success\", \"on_failure\", \"if_disabled\"],\r\n    \"pdfcopy\": [\"on_success\", \"on_failure\", \"if_disabled\"],\r\n    \"quickcheck\": [\"on_success\", \"on_failure\", \"if_disabled\"],\r\n    \"addfiles\": [\"on_success\", \"on_failure\", \"if_disabled\"],\r\n    \"rename\": [\"on_success\", \"on_failure\", \"if_disabled\"],\r\n};\r\n\r\n//- State\r\nconst initialState = {};\r\n\r\n//- Reducers\r\nexport default handleActions({\r\n    PROCESS_PLAN_LOAD: (state, action) => {\r\n        return action.payload.transitions;\r\n    },\r\n    TRANSITION_SELECT: (state, action) => {\r\n        if (_.isNil(action.payload)) {\r\n            return _.mapValues(state, step => ({...step, selected: false}));\r\n        }\r\n        return _.mapValues(state, (transition, id) => {\r\n            if (id === action.payload) {\r\n                return {...transition, selected: true};\r\n            } else {\r\n                return transition.selected ? {...transition, selected: false} : transition;\r\n            }\r\n        });\r\n    },\r\n    CHANGE_APPLY: (state, {payload: change}) => {\r\n        switch (change.description) {\r\n            case 'Add transition':\r\n                return change.applyAddTransition(state);\r\n            case 'Change transition position':\r\n                return change.applyTransitionPositionChange(state);\r\n            case 'Remove step':\r\n                return change.applyRemoveTransitionConnected(state);\r\n            case 'Remove transition':\r\n                return change.applyRemoveTransition(state);\r\n            case 'Insert new step into transition':\r\n                return change.applyAddTransitionForInsertStep(state);\r\n            case 'Create transitions for insert step':\r\n                return change.applyAddTransitionForInsertStep(state);\r\n            case 'Generate auto layout':\r\n                return change.applyLayoutAutoGenerationForTransitions(state);\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    CHANGE_REVERT: (state, {payload: change}) => {\r\n        switch (change.description) {\r\n            case 'Add transition':\r\n                return change.revertAddTransition(state);\r\n            case 'Change transition position':\r\n                return change.revertTransitionPositionChange(state);\r\n            case 'Remove step':\r\n                return change.revertRemoveTransitionConected(state);\r\n            case 'Remove transition':\r\n                return change.revertRemoveTransition(state);\r\n            case 'Insert new step into transition':\r\n                return change.revertAddTransitionForInsertStep(state);\r\n            case 'Create transitions for insert step':\r\n                return change.revertAddTransitionForInsertStep(state);\r\n            case 'Generate auto layout':\r\n                return change.revertLayoutAutoGenerationForTransitions(state);\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    TRANSITION_HIGHLIGHT: (state, action) => {\r\n        if (_.isNil(action.payload)) {\r\n            return _.mapValues(state, transition => ({...transition, highlighted: false}))\r\n        }\r\n\r\n        return _.mapValues(state, transition => transition.id === action.payload ? {\r\n            ...transition,\r\n            highlighted: true\r\n        } : transition);\r\n    },\r\n    TRANSITIONS_INTERSECT: (state, action) => {\r\n        let position = action.payload.position;\r\n        let stepsLayout = action.payload.stepsLayout;\r\n        let transitionsLayout = action.payload.transitionsLayout;\r\n        let transitions = state;\r\n        let intersectedTransition = null;\r\n        let yStart, yEnd, xStart, xEnd;\r\n\r\n        _.forEach(transitions, (transition) => {\r\n            let points = calculateNativeTransitionPoints(stepsLayout[transition.startStepId], stepsLayout[transition.endStepId], transitionsLayout[transition.id]);\r\n            _.forEach(points, (arrow, index) => {\r\n                if (index === points.length - 1) {\r\n                    yStart = points[index].y < points[index - 1].y ? points[index].y : points[index - 1].y;\r\n                    yEnd = points[index].y < points[index - 1].y ? points[index - 1].y : points[index].y;\r\n                    xStart = points[index].x < points[index - 1].x ? points[index].x : points[index - 1].x;\r\n                    xEnd = points[index].x < points[index - 1].x ? points[index - 1].x : points[index].x;\r\n                } else {\r\n                    yStart = points[index].y < points[index + 1].y ? points[index].y : points[index + 1].y;\r\n                    yEnd = points[index].y < points[index + 1].y ? points[index + 1].y : points[index].y;\r\n                    xStart = points[index].x < points[index + 1].x ? points[index].x : points[index + 1].x;\r\n                    xEnd = points[index].x < points[index + 1].x ? points[index + 1].x : points[index].x;\r\n                }\r\n                if ((Math.abs(yEnd - yStart) <= 5) && yStart - 2 <= position.y && position.y <= yStart + 2 &&\r\n                    xStart - 2 <= position.x && position.x <= xEnd + 2) {\r\n                    intersectedTransition = transition;\r\n                } else if ((Math.abs(xEnd - xStart) <= 5) && xStart - 2 <= position.x && position.x <= xStart + 2 &&\r\n                    yStart - 2 <= position.y && position.y <= yEnd + 2) {\r\n                    intersectedTransition = transition;\r\n                }\r\n            });\r\n        });\r\n        if (_.isNull(intersectedTransition)) {\r\n            _.map(transitions, transition => transition.intersected = false);\r\n            return transitions\r\n        } else {\r\n            return {\r\n                ...transitions, [intersectedTransition.id]: {\r\n                    id: intersectedTransition.id,\r\n                    startStepId: intersectedTransition.startStepId,\r\n                    endStepId: intersectedTransition.endStepId,\r\n                    selected: false,\r\n                    highlighted: false,\r\n                    intersected: true\r\n                }\r\n            }\r\n        }\r\n    }\r\n}, initialState);\r\n\r\n//- Utils\r\n\r\nexport const calculateNativeTransitionPoints = (startStepLayout, endStepLayout, transitionLayout) => {\r\n    if (_.isNil(startStepLayout)) {\r\n        return null;\r\n    }\r\n\r\n    let points = [];\r\n\r\n    // Calculate start and end points\r\n    let startPoint = calculateTransitionPoint(startStepLayout, transitionLayout.start.position);\r\n    let endPoint = calculateTransitionPoint(endStepLayout, transitionLayout.end.position);\r\n    let mainPoints;\r\n    points.push(startPoint);\r\n\r\n    switch (transitionLayout.start.position) {\r\n        case 'right':\r\n            switch (transitionLayout.end.position) {\r\n                case 'top':\r\n                    mainPoints = MainPoints.createRightTopPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    break;\r\n                case 'left':\r\n                    mainPoints = MainPoints.createRightLeftPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    break;\r\n                case 'right':\r\n                    mainPoints = MainPoints.createRightRightPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    break;\r\n                case 'bottom':\r\n                    mainPoints = MainPoints.createRightBottomPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            break;\r\n        case 'bottom':\r\n            switch (transitionLayout.end.position) {\r\n                case 'top':\r\n                    mainPoints = MainPoints.createBottomTopPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    break;\r\n                case 'bottom':\r\n                    mainPoints = MainPoints.createBottomBottomPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    break;\r\n                case 'right':\r\n                    mainPoints = MainPoints.createBottomRightPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    break;\r\n                case 'left':\r\n                    mainPoints = MainPoints.createBottomLeftPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            break;\r\n        case 'left':\r\n            switch (transitionLayout.end.position) {\r\n                case 'top':\r\n                    mainPoints = MainPoints.createLeftTopPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    break;\r\n                case 'bottom':\r\n                    mainPoints = MainPoints.createLeftBottomPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    break;\r\n                case 'left':\r\n                    mainPoints = MainPoints.createLeftLeftPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    break;\r\n                case 'right':\r\n                    mainPoints = MainPoints.createLeftRightPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            break;\r\n        case 'top':\r\n            switch (transitionLayout.end.position) {\r\n                case 'top':\r\n                    mainPoints = MainPoints.createTopTopPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    break;\r\n                case 'left':\r\n                    mainPoints = MainPoints.createTopLeftPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    break;\r\n                case 'bottom':\r\n                    mainPoints = MainPoints.createTopBottomPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    break;\r\n                case 'right':\r\n                    mainPoints = MainPoints.createTopRightPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    points.push(endPoint);\r\n    return points;\r\n};\r\n\r\n//- Selectors\r\nexport const getTransitions = state => state.transitions;\r\n\r\nexport const getTransitionById = (state, id) =>\r\n    _.find(getTransitions(state), transition => transition.id === id);\r\n\r\nexport const getTransitionIds = createSelector(\r\n    getTransitions,\r\n    transitions => Object.keys(transitions)\r\n);\r\n\r\nexport const getSelectedTransition = createSelector(\r\n    getTransitions,\r\n    transitions => _.find(transitions, transition => transition.selected === true)\r\n);\r\n\r\nexport const getSelectedTransitionId = createSelector(\r\n    getSelectedTransition,\r\n    selectedTransition => selectedTransition ? selectedTransition.id : null\r\n);\r\n\r\nexport const getTransitionStartStepId = (transitions, transitionId) => {\r\n    let transition = _.find(transitions, transition => transitionId === transition.id);\r\n    return transition ? transition.startStepId : null;\r\n};\r\n\r\nexport const getAvailableTransitionReports = (state, transitionId) => {\r\n    let stepId = getTransitionStartStepId(getTransitions(state), transitionId);\r\n    if (_.isNil(stepId)) {\r\n        return null;\r\n    }\r\n    let availableReports = availableReportsByStartStepType[getStepTypeById(state, stepId)];\r\n    return _.map(availableReports, report => ({\r\n        label: <Translate id={translatedReportLabels[report]}/>,\r\n        value: report\r\n    }));\r\n};\r\n\r\nexport const getAvailableTransitionTypes = (state, transitionId) => {\r\n    let stepId = getTransitionStartStepId(getTransitions(state), transitionId);\r\n    if (_.isNil(stepId)) {\r\n        return null;\r\n    }\r\n    let availableTypes = availableTransitionTypesByStartStepType[getStepTypeById(state, stepId)];\r\n    return _.map(availableTypes, report => ({label: typeLabels[report], value: report}));\r\n};\r\n\r\nexport const getTransitionsByStartStepId = (state, startStepId) =>\r\n    _.pickBy(getTransitions(state), transition => transition.startStepId === startStepId);\r\n\r\nexport const getTransitionsByEndStepId = (state, endStepId) =>\r\n    _.pickBy(getTransitions(state), transition => transition.endStepId === endStepId);\r\n\r\nexport const isTransitionHighlighted = (state, id) => {\r\n    let selectedStep = getSelectedStep(state);\r\n    let transition = getTransitionById(state, id);\r\n    return (!_.isNil(selectedStep) && !_.isNil(transition) && (selectedStep.id === transition.startStepId)) || (!_.isNil(transition) && transition.selected);\r\n};\r\n\r\nexport const getStepDependenceFromTransitions = (state, id) => {\r\n    let transitions = getTransitions(state);\r\n    let isDependent = false;\r\n    _.forEach(transitions, transition => {\r\n        if (transition.startStepId === id || transition.endStepId === id) {\r\n            isDependent = true\r\n        }\r\n    });\r\n    return isDependent\r\n};\r\n\r\nexport const getIdOfIntersectedTransition = (state) => {\r\n    let intersectedTransition = _.find(getTransitions(state), transition => transition.intersected === true);\r\n    if (!_.isUndefined(intersectedTransition)) {\r\n        return intersectedTransition.id\r\n    }\r\n};\r\n\r\nexport const isExistImposedTransition = (state) => {\r\n    return !_.isUndefined(_.find(getTransitions(state), transition => transition.intersected === true));\r\n};","import {createAction, handleActions} from 'redux-actions';\r\nimport _ from 'lodash';\r\n\r\n//- Actions\r\nexport const applyChange = createAction('CHANGE_APPLY', change => change);\r\nexport const revertChange = createAction('CHANGE_REVERT', change => change);\r\n\r\nexport const undo = () => (dispatch, getState) => {\r\n    let undoStack = getUndoStack(getState());\r\n    if(undoStack.length > 0) {\r\n        dispatch(revertChange(undoStack[undoStack.length - 1]));\r\n    }\r\n};\r\n\r\nexport const redo = () => (dispatch, getState) => {\r\n    let redoStack = getRedoStack(getState());\r\n    if(redoStack.length > 0) {\r\n        dispatch(applyChange(redoStack[redoStack.length - 1]));\r\n    }\r\n};\r\n\r\n//- State\r\nconst initialState = {\r\n    undoStack: [],\r\n    redoStack: []\r\n};\r\n\r\n//- Reducer\r\nexport default handleActions({\r\n    CHANGE_APPLY: (changeStack, {payload: change}) => {\r\n        change.isRedo = true;\r\n        let undoStack = [...changeStack.undoStack, change];\r\n        let redoStack = [];\r\n        if (change.isRedo) {\r\n            redoStack = _.slice(changeStack.redoStack, 0, changeStack.redoStack.length - 1);\r\n        }\r\n        return {undoStack, redoStack};\r\n    },\r\n    CHANGE_REVERT: (changeStack, {payload: change}) => {\r\n        let undoStack = _.slice(changeStack.undoStack, 0, changeStack.undoStack.length - 1);\r\n        let redoStack = [...changeStack.redoStack, change];\r\n        return {undoStack, redoStack};\r\n    }\r\n}, initialState);\r\n\r\n//- Selectors\r\nexport const getUndoStack = state => state.changeStack.undoStack;\r\nexport const getRedoStack = state => state.changeStack.redoStack;","export class Change {\r\n    constructor(description) {\r\n        this.description = description;\r\n        this.isRedo = false;\r\n    }\r\n\r\n    applyStepsLayout(stepsLayout) {\r\n        return stepsLayout;\r\n    }\r\n    revertStepsLayout(stepsLayout) {\r\n        return stepsLayout;\r\n    }\r\n    applyRemoveStep(steps) {\r\n        return steps;\r\n    }\r\n    applyRemoveStepLayout(stepsLayout) {\r\n        return stepsLayout;\r\n    }\r\n    applyRemoveTransition(transitions) {\r\n        return  transitions;\r\n    }\r\n    revertRemoveStep(stepsLayout) {\r\n        return stepsLayout;\r\n    }\r\n    revertRemoveStepLayout(stepsLayout) {\r\n        return stepsLayout;\r\n    }\r\n    revertRemoveTransition(transitions) {\r\n        return  transitions;\r\n    }\r\n\r\n    applyAddStep(steps) {\r\n        return steps;\r\n    }\r\n    applyAddStepLayout(stepsLayout) {\r\n        return stepsLayout;\r\n    }\r\n    revertAddStep(steps) {\r\n        return steps;\r\n    }\r\n    revertAddStepLayout(stepProperty) {\r\n        return stepProperty;\r\n    }\r\n    applyAddStepProperty(stepProperty) {\r\n        return stepProperty;\r\n    }\r\n    revertAddStepProperty(stepProperty) {\r\n        return stepProperty;\r\n    }\r\n\r\n    applyStepPropertyChange(stepsProperties) {\r\n        return stepsProperties;\r\n    }\r\n    revertStepPropertyChange(stepsProperties) {\r\n        return stepsProperties;\r\n    }\r\n\r\n    applyProcessPlanNameChange(processPlan) {\r\n        return processPlan;\r\n    }\r\n    revertProcessPlanNameChange(processPlan) {\r\n        return processPlan;\r\n    }\r\n\r\n    applyProcessPlanPasswordChange(processPlan) {\r\n        return processPlan;\r\n    }\r\n    revertProcessPlanPasswordChange(processPlan) {\r\n        return processPlan;\r\n    }\r\n\r\n    applyProcessPlanEmailChange(processPlan) {\r\n        return processPlan;\r\n    }\r\n    revertProcessPlanEmailChange(processPlan) {\r\n        return processPlan;\r\n    }\r\n\r\n    applyProcessPlanCommentChange(processPlan) {\r\n        return processPlan;\r\n    }\r\n    revertProcessPlanCommentChange(processPlan) {\r\n        return processPlan;\r\n    }\r\n    applyRemoveTransitionProperty(transitionProperties) {\r\n        return transitionProperties;\r\n    }\r\n    revertRemoveTransitionProperty(transitionProperties) {\r\n        return transitionProperties;\r\n    }\r\n\r\n    applyTransitionPropertyChange(transitionProperties) {\r\n        return transitionProperties;\r\n    }\r\n    revertTransitionPropertyChange(transitionProperties) {\r\n        return transitionProperties;\r\n    }\r\n\r\n}","import {Change} from './Change';\r\nimport _ from 'lodash';\r\n\r\nexport class ChangeStepProperty extends Change {\r\n    constructor(stepId, name, value) {\r\n        super('Change step property');\r\n        this.stepId = stepId;\r\n        this.name = name;\r\n        this.value = value;\r\n\r\n        this.currentValue = null;\r\n    }\r\n\r\n    applyStepPropertyChange(stepsProperties) {\r\n        return _.map(stepsProperties, step => {\r\n            if (step.stepId === this.stepId && step.name === this.name) {\r\n                this.currentValue = step.value;\r\n                return {...step, value: this.value};\r\n            } else {\r\n                return step;\r\n            }\r\n        });\r\n    }\r\n    revertStepPropertyChange(stepsProperties) {\r\n        return _.map(stepsProperties, step => {\r\n            if (step.stepId === this.stepId && step.name === this.name) {\r\n                return {...step, value: this.currentValue};\r\n            } else {\r\n                return step;\r\n            }\r\n        });\r\n    }\r\n\r\n    applyUpdateConnection(connections) {\r\n        return !_.isUndefined(_.find(connections, connection => connection.startStepId === this.stepId)) ?\r\n            _.map(connections, connection => {\r\n                if (connection.startStepId === this.stepId) {\r\n                    return {...connection, endStepId: this.value};\r\n                } else {\r\n                    return connection;\r\n                }\r\n            }) : connections\r\n    }\r\n\r\n    revertUpdateConnection(connections) {\r\n        return !_.isUndefined(_.find(connections, connection => connection.startStepId === this.stepId)) ?\r\n            _.map(connections, connection => {\r\n                if (connection.startStepId === this.stepId) {\r\n                    return {...connection, endStepId: this.currentValue};\r\n                } else {\r\n                    return connection;\r\n                }\r\n            }) : connections\r\n    }\r\n}","import {createAction, handleActions} from 'redux-actions';\r\nimport _ from 'lodash';\r\n\r\nconst VIEWPORT_OFFSET = 60;\r\n\r\n//- Actions\r\nexport const updateStepsLayoutPosition = createAction(\"STEPS_LAYOUT_POSITION_UPDATE\", (id, position) => ({id, position}));\r\nexport const updateStepsLayoutSize = createAction(\"STEPS_LAYOUT_SIZE_UPDATE\", (id, size) => ({id, size}));\r\nexport const moveStep = createAction(\"STEP_MOVE\", (id, direction) => ({id, direction}));\r\n\r\n//- State\r\nconst initialState = {};\r\nconst DELTA = 5;\r\n\r\nexport const DELTA_BY_DIRECTION = {\r\n    left: {deltaX: -DELTA, deltaY: 0},\r\n    top: {deltaX: 0, deltaY: -DELTA},\r\n    right: {deltaX: DELTA, deltaY: 0},\r\n    bottom: {deltaX: 0, deltaY: DELTA}\r\n};\r\n\r\n//- Reducers\r\nexport default handleActions({\r\n    PROCESS_PLAN_LOAD: (state, action) => {\r\n        return action.payload.stepsLayout;\r\n    },\r\n    STEPS_LAYOUT_POSITION_UPDATE: (state, action) => {\r\n        return _.mapValues(state, (stepLayout, id) => {\r\n            if (id === action.payload.id) {\r\n                let scaledPosition = {\r\n                    x: action.payload.position.x ,\r\n                    y: action.payload.position.y\r\n                };\r\n                return {...stepLayout,  position: scaledPosition};\r\n            }\r\n            return stepLayout;\r\n        });\r\n    },\r\n    STEPS_LAYOUT_SIZE_UPDATE: (state, action) => {\r\n        return _.mapValues(state, (stepLayout, id) => {\r\n            if (id === action.payload.id) {\r\n                return {...stepLayout, size: action.payload.size};\r\n            }\r\n            return stepLayout;\r\n        });\r\n    },\r\n    CHANGE_APPLY: (state, {payload: change} ) => {\r\n        switch(change.description) {\r\n            case 'Move step':\r\n                return change.applyStepsLayout(state);\r\n            case 'Remove step':\r\n                return change.applyRemoveStepLayout(state);\r\n            case 'Add step':\r\n                return change.applyAddStepLayout(state);\r\n            case 'Insert new step into transition':\r\n                return change.applyInsertStepLayout(state);\r\n            case 'Generate auto layout':\r\n                return change.applyLayoutAutoGenerationForStepsLayout(state);\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    CHANGE_REVERT: (state, {payload: change} ) => {\r\n        switch(change.description) {\r\n            case 'Move step':\r\n                return change.revertStepsLayout(state);\r\n            case 'Remove step':\r\n                return change.revertRemoveStepLayout(state);\r\n            case 'Add step':\r\n                return change.revertAddStepLayout(state);\r\n            case 'Insert new step into transition':\r\n                return change.revertInsertStepLayout(state);\r\n            case 'Generate auto layout':\r\n                return change.revertLayoutAutoGenerationForStepsLayout(state);\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    STEP_MOVE: (state, action) => {\r\n        let deltaX = action.payload.direction.length > 0 ? DELTA_BY_DIRECTION[action.payload.direction[0]].deltaX : 0;\r\n        deltaX += action.payload.direction.length > 1 ? DELTA_BY_DIRECTION[action.payload.direction[1]].deltaX : 0;\r\n\r\n        let deltaY = action.payload.direction.length > 0 ? DELTA_BY_DIRECTION[action.payload.direction[0]].deltaY : 0;\r\n        deltaY += action.payload.direction.length > 1 ? DELTA_BY_DIRECTION[action.payload.direction[1]].deltaY : 0;\r\n        return _.mapValues(state, (layout, id) => id === action.payload.id ? {...layout, position: {x: layout.position.x + deltaX, y: layout.position.y + deltaY}} : layout);\r\n    }\r\n}, initialState);\r\n\r\n//- Selectors\r\nexport const getStepsLayout = state => state.stepsLayout;\r\n\r\nexport const getStepPositionById = (state, id) => {\r\n    return _.find(getStepsLayout(state), (layout, stepId) => stepId === id).position;\r\n};\r\n\r\nexport const getStepLayoutById = (state, id) => {\r\n    return _.find(getStepsLayout(state), (layout, stepId) => stepId === id);\r\n};\r\n\r\nexport const getMaxStepPositionX = (stepsLayout) => {\r\n    let firstStepKey = Object.keys(stepsLayout)[0];\r\n    let maxStepPositionX = _.get(stepsLayout, firstStepKey + '.position.x') +\r\n                           _.get(stepsLayout, firstStepKey + '.size.width');\r\n    for (let id in stepsLayout) {\r\n        if (maxStepPositionX < stepsLayout[id].position.x + stepsLayout[id].size.width) {\r\n            maxStepPositionX = stepsLayout[id].position.x + stepsLayout[id].size.width;\r\n        }\r\n    }\r\n    return maxStepPositionX + VIEWPORT_OFFSET;\r\n};\r\n\r\nexport const getMaxStepPositionY = (stepsLayout) => {\r\n    let firstStepKey = Object.keys(stepsLayout)[0];\r\n    let maxStepPositionY = _.get(stepsLayout, firstStepKey + '.position.y') +\r\n                           _.get(stepsLayout, firstStepKey + '.size.height');\r\n    for (let id in stepsLayout) {\r\n        if (maxStepPositionY < stepsLayout[id].position.y + stepsLayout[id].size.height) {\r\n            maxStepPositionY = stepsLayout[id].position.y + stepsLayout[id].size.height;\r\n        }\r\n    }\r\n    return maxStepPositionY + VIEWPORT_OFFSET;\r\n};\r\n\r\nexport const getMinStepPositionX = (stepsLayout) => {\r\n    let firstStepKey = Object.keys(stepsLayout)[0];\r\n    let minStepPositionX = _.get(stepsLayout, firstStepKey + '.position.x');\r\n    for (let id in stepsLayout) {\r\n        if (minStepPositionX > stepsLayout[id].position.x ) {\r\n            minStepPositionX = stepsLayout[id].position.x;\r\n        }\r\n    }\r\n    return minStepPositionX - VIEWPORT_OFFSET;\r\n};\r\n\r\nexport const getMinStepPositionY = (stepsLayout) => {\r\n    let firstStepKey = Object.keys(stepsLayout)[0];\r\n    let minStepPositionY = _.get(stepsLayout, firstStepKey + '.position.y');\r\n    for (let id in stepsLayout) {\r\n        if (minStepPositionY> stepsLayout[id].position.y) {\r\n            minStepPositionY = stepsLayout[id].position.y;\r\n        }\r\n    }\r\n    return minStepPositionY - VIEWPORT_OFFSET;\r\n};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Anchor.css';\r\nimport {HEADER_OFFSET} from \"../../../App\";\r\nimport _ from 'lodash';\r\nconst ANCHOR_OFFSET = 15;\r\n\r\nclass Anchor extends Component {\r\n    render() {\r\n        let outlineClassName = 'anchor-outline ' + (this.props.anchorHighlighted ? ' anchorHighlighted ' : '') + this.props.stepClassName + (this.props.hover ? ' hover ' : '') + (this.props.selectable  ? ' selectable ' : '') + (this.props.active ? ' active ' : '') + (this.props.selected ? ' selected ' : '');\r\n        let anchorClassName = 'anchor-point ' + this.props.stepClassName + (this.props.hover ? ' hover ' : '') + (this.props.selectable  ? ' selectable ' : '') + (this.props.active  ? ' active ' : '') + (this.props.selected ? ' selected ': '');\r\n        return (\r\n            <g className=\"anchor\">\r\n                <circle className={outlineClassName}\r\n                        cx={this.props.x}\r\n                        cy={this.props.y}\r\n                        r={this.props.outlineRadius}\r\n                        onMouseUp={this.onMouseUp}\r\n                        onMouseOver={this.onMouseOver}\r\n                        onMouseOut={this.onMouseOut}/>\r\n\r\n                <circle className={anchorClassName}\r\n                        cx={this.props.x}\r\n                        cy={this.props.y}\r\n                        r={this.props.pointRadius}\r\n                        onMouseDown={this.onMouseDown}\r\n                        onMouseUp={this.onMouseUp}\r\n                        onTouchStart={this.onHandleTouchStart}\r\n                        onTouchEnd={this.handleTouchEnd}\r\n                        onTouchEndCapture={this.handleCreateTransitionByTouch}\r\n                        onTouchCancel={this.handleDeleteTempTransition}\r\n                        onMouseOver={this.onMouseOver}/>\r\n            </g>\r\n        );\r\n    }\r\n\r\n    onMouseUp = () => {\r\n        if (this.props.hover) {\r\n            this.props.handleMouseUp(this.props.position)\r\n        }\r\n    };\r\n\r\n    onMouseOver = () => {\r\n        if (this.props.hover) {\r\n            this.props.handleMouseOver(this.props.position);\r\n        }\r\n    };\r\n\r\n    onMouseDown = (e) => {\r\n        // Avoid move viewport\r\n        e.stopPropagation();\r\n        if (this.props.active) {\r\n            this.props.handleMouseDown(this.props.position)\r\n        }\r\n    };\r\n\r\n    onHandleTouchStart= (e) => {\r\n        // Avoid move viewport\r\n        e.stopPropagation();\r\n        if (this.props.active) {\r\n        this.props.handleMouseDown(this.props.position)\r\n        }\r\n        document.addEventListener('touchmove', this.handleTouchMove);\r\n    };\r\n\r\n    handleTouchMove = (e) => {\r\n        this.computedPosition = {\r\n            x: e.targetTouches[0].pageX,\r\n            y: e.targetTouches[0].pageY ,\r\n        };\r\n        this.props.handleTouchTransitionMove({x: e.targetTouches[0].pageX,y: e.targetTouches[0].pageY - HEADER_OFFSET});\r\n    };\r\n\r\n    handleTouchEnd = (e) => {\r\n        e.stopPropagation();\r\n        if (!_.isUndefined(this.computedPosition)){\r\n            let anchor = document.elementFromPoint(this.computedPosition.x, this.computedPosition.y);\r\n            if (!_.isNull(anchor) && !_.isNull(anchor.cx) && !_.isUndefined(anchor.cx) && !_.isNull(anchor.cy) && !_.isUndefined(anchor.cy)){\r\n                let position = anchor.className.baseVal.split(' ')[1];\r\n                let step;\r\n                switch (position) {\r\n                    case 'top':\r\n                        step = document.elementFromPoint(this.computedPosition.x, this.computedPosition.y + ANCHOR_OFFSET);\r\n                        break;\r\n                    case 'right':\r\n                        step = document.elementFromPoint(this.computedPosition.x - ANCHOR_OFFSET, this.computedPosition.y);\r\n                        break;\r\n                    case 'bottom':\r\n                        step = document.elementFromPoint(this.computedPosition.x, this.computedPosition.y - ANCHOR_OFFSET);\r\n                        break;\r\n                    case 'left':\r\n                        step = document.elementFromPoint(this.computedPosition.x + ANCHOR_OFFSET, this.computedPosition.y);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.props.handleCreateTransitionByTouch(step.id, position);\r\n            }else{\r\n                this.props.handleDeleteTempTransition();\r\n            }\r\n        }\r\n        document.removeEventListener('touchmove', this.handleTouchMove);\r\n    };\r\n\r\n    onMouseOut = () => {\r\n        if (this.props.hover) {\r\n            this.props.handleMouseOut();\r\n        }\r\n    };\r\n}\r\n\r\nAnchor.propTypes = {\r\n    stepClassName: PropTypes.string.isRequired,\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired,\r\n    pointRadius: PropTypes.number.isRequired,\r\n    outlineRadius: PropTypes.number.isRequired,\r\n    position: PropTypes.string.isRequired,\r\n    selected: PropTypes.bool.isRequired,\r\n    active: PropTypes.bool.isRequired,\r\n    hover: PropTypes.bool.isRequired,\r\n    selectable: PropTypes.bool.isRequired,\r\n    anchorHighlighted: PropTypes.bool,\r\n    handleMouseDown: PropTypes.func,\r\n    handleMouseUp: PropTypes.func,\r\n    handleMouseOver: PropTypes.func,\r\n    handleMouseOut: PropTypes.func,\r\n    handleTouchTransitionMove: PropTypes.func,\r\n    handleDeleteTempTransition: PropTypes.func,\r\n    handleCreateTransitionByTouch: PropTypes.func\r\n};\r\n\r\nAnchor.defaultProps = {\r\n    pointRadius: 5,\r\n    outlineRadius: 12\r\n};\r\n\r\nexport default Anchor;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Step.css';\r\nimport Anchor from \"./anchor/Anchor\";\r\nimport {calculateAnchorCoordinatesByPosition} from \"../../../redux/modules/steps\";\r\n\r\nimport error from '../error_icon.svg';\r\n\r\nimport _ from 'lodash';\r\n\r\nexport const RECT_OFFSET = 5;\r\nexport const FONT_WIDTH = 7.8;\r\nconst CHANGE_CURSOR_DELAY = 150;\r\nconst MIN_TEXT_HEIGHT_OFFSET = 10;\r\nconst MIN_STEP_HEIGHT = 40;\r\nexport const ERROR_ICON_SIZE = 25;\r\nconst ANCHOR_POINT_POSITIONS = ['top', 'right', 'bottom', 'left'];\r\nconst FILE_PICKUP_ANCHOR_POINT_RADIUS = 5.6;\r\nconst DIRECTION_BY_KEY_CODE = {\r\n    ArrowLeft: 'left',\r\n    ArrowUp: 'top',\r\n    ArrowRight: 'right',\r\n    ArrowDown: 'bottom'\r\n};\r\nexport const GRID_CELL_SIZE = 20;\r\n\r\nclass Step extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            cursorType: 'default'\r\n        };\r\n        this.movementDirection = [];\r\n        this.movementPositon = null;\r\n        this.textStepHeight = null;\r\n    }\r\n\r\n    setStep = (step) => {\r\n        this.step = step;\r\n    };\r\n\r\n    setStepText = (stepText) => {\r\n        this.stepText = stepText;\r\n    };\r\n\r\n    renderContent() {\r\n        let symbolsNum = _.floor((this.props.size.width - 2 * RECT_OFFSET) / FONT_WIDTH);\r\n        let ICON_TEXT_OFFSET = (this.props.className === 'start-end' || symbolsNum > this.props.text.length) ? '' : 'ww';\r\n        return (\r\n            <div\r\n                className='text'\r\n                ref={this.setStepText}\r\n            >\r\n                <span className={'icon-text-offset'}>{ICON_TEXT_OFFSET}</span>\r\n                <span>{this.props.text}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let stepClass = 'step ' + this.props.className + (this.props.selected ? ' selected ' : ' ') + (this.props.highlighted ? ' highlighted ' : ' ') + this.state.cursorType + ((this.props.className !== 'start-end') ? this.props.stepAvailability : '');\r\n        let patternName = 'pattern_' + this.props.className + this.props.id;\r\n        let patternSelected = '' + this.props.className + (this.props.selected ? ' selected' : ' ') + 'Icon';\r\n        let stepLabel = (this.props.className === 'start-end' || this.props.className === this.props.text ? this.props.text : (this.props.className + ' ' + this.props.text)) + ' step';\r\n        return (\r\n            <g className={stepClass}\r\n               role='img'\r\n               aria-label={stepLabel}\r\n               ref={this.setStep}\r\n               x={this.props.position.x}\r\n               y={this.props.position.y}\r\n               tabIndex=\"0\"\r\n               onMouseDown={this.handleMouseDown}\r\n               onMouseEnter={this.handleMouseEnter}\r\n               onMouseLeave={this.handleMouseLeave}\r\n               onTouchStart={this.handleTouchStart}\r\n               onTouchEnd={this.handleTouchEnd}\r\n               onKeyDown={this.handleKeyDown}\r\n               onKeyUp={this.handleKeyUp}\r\n               onClick={this.handleClick}>\r\n\r\n                <pattern id={patternName} x=\"0\" y=\"0\" width=\"5\" height=\"5\">\r\n                    <rect x=\"0\" y=\"0\"\r\n                          rx=\"10\" ry=\"10\"\r\n                          width={this.props.size.width}\r\n                          height={this.stepText\r\n                              ? this.stepText.offsetHeight + MIN_TEXT_HEIGHT_OFFSET > MIN_STEP_HEIGHT\r\n                                  ? this.stepText.offsetHeight + MIN_TEXT_HEIGHT_OFFSET\r\n                                  : MIN_STEP_HEIGHT\r\n                              : this.props.size.height}\r\n                          className={patternSelected}/>\r\n                    {getIcon(this.props.className, patternName)}\r\n                </pattern>\r\n\r\n                <rect id={this.props.id}\r\n                      x={this.props.position.x + RECT_OFFSET}\r\n                      y={this.props.position.y + RECT_OFFSET}\r\n                      rx=\"10\" ry=\"10\"\r\n                      width={this.props.size.width}\r\n                      height={this.stepText\r\n                          ? this.stepText.offsetHeight + MIN_TEXT_HEIGHT_OFFSET > MIN_STEP_HEIGHT\r\n                              ? this.stepText.offsetHeight + MIN_TEXT_HEIGHT_OFFSET\r\n                              : MIN_STEP_HEIGHT\r\n                          : this.props.size.height}\r\n                      fill={\"url(#\" + patternName + \")\"}/>\r\n\r\n                <foreignObject\r\n                    x={this.props.position.x + RECT_OFFSET}\r\n                    y={this.props.position.y + MIN_TEXT_HEIGHT_OFFSET}\r\n                    width={this.props.size.width}\r\n                    height={this.stepText\r\n                        ? this.stepText.offsetHeight + MIN_TEXT_HEIGHT_OFFSET > MIN_STEP_HEIGHT\r\n                            ? this.stepText.offsetHeight + MIN_TEXT_HEIGHT_OFFSET\r\n                            : MIN_STEP_HEIGHT\r\n                        : this.props.size.height}\r\n                >\r\n                    {this.renderContent()}\r\n                </foreignObject>\r\n\r\n                {this.renderAnchorPoints()}\r\n                {this.renderLeftTopAngleAnchor()}\r\n                {this.renderFilePickUpAnchorPoint()}\r\n                {this.renderValidationTooltips()}\r\n\r\n            </g>\r\n        );\r\n    }\r\n\r\n    renderAnchorPoints = () => {\r\n        let anchorHover = this.props.modifyingTransition;\r\n        return _.map(ANCHOR_POINT_POSITIONS, position => {\r\n            let coordinates = calculateAnchorCoordinatesByPosition(position, {\r\n                position: this.props.position,\r\n                size: {\r\n                    width: this.props.size.width,\r\n                    height: this.stepText ? this.stepText.offsetHeight + MIN_TEXT_HEIGHT_OFFSET : this.props.size.height\r\n                }\r\n            });\r\n\r\n            let anchorHighlighted = this.props.intersectedAnchors ? _.intersection(this.props.intersectedAnchors, [position]) : [];\r\n            return (\r\n                <Anchor\r\n                    key={`${this.props.className} ${coordinates.x} ${coordinates.y}`}\r\n                    stepClassName={position + ' ' + this.props.className}\r\n                    x={coordinates.x}\r\n                    y={coordinates.y}\r\n                    position={position}\r\n                    selected={this.props.selected}\r\n                    active={this.props.anchorStartEndAvailability && !this.props.modifyingConnection}\r\n                    hover={anchorHover}\r\n                    selectable={this.props.id !== 'start'}\r\n                    anchorHighlighted={anchorHighlighted.length > 0}\r\n                    handleMouseDown={this.handleAnchorMouseDown}\r\n                    handleMouseUp={this.handleTransitionCreationEnd}\r\n                    handleMouseOver={this.props.onAnchorMouseOver}\r\n                    handleMouseOut={this.props.onAnchorMouseOut}\r\n                    handleDeleteTempTransition={this.props.onDeleteTempTransition}\r\n                    handleTouchTransitionMove={this.props.onCreateTempTransitionByTouch}\r\n                    handleCreateTransitionByTouch={this.props.onAddTransition}/>\r\n            );\r\n        })\r\n    };\r\n\r\n    renderLeftTopAngleAnchor = () => {\r\n        if (this.props.className !== 'start-end') {\r\n            let anchorHover = this.props.modifyingConnection;\r\n            return (\r\n                <Anchor\r\n                    stepClassName={this.props.className + (this.props.connectionAnchorIsVisible ? ' connection ' : ' ')}\r\n                    x={this.props.position.x + RECT_OFFSET}\r\n                    y={this.props.position.y + RECT_OFFSET}\r\n                    pointRadius={FILE_PICKUP_ANCHOR_POINT_RADIUS}\r\n                    position={'left-top-angle'}\r\n                    selected={false}\r\n                    active={false}\r\n                    hover={anchorHover}\r\n                    selectable={true}\r\n                    handleMouseDown={this.handleAnchorMouseDown}\r\n                    handleMouseUp={this.handleTransitionCreationEnd}\r\n                    handleMouseOver={this.props.onAnchorMouseOver}\r\n                    handleMouseOut={this.props.onAnchorMouseOut}\r\n                    handleDeleteTempTransition={this.props.onDeleteTempTransition}\r\n                    handleTouchTransitionMove={this.props.onCreateTempTransitionByTouch}\r\n                    handleCreateTransitionByTouch={this.props.onAddTransition}/>\r\n            );\r\n        }\r\n    };\r\n\r\n    renderFilePickUpAnchorPoint = () => {\r\n        if (this.props.pickUpFile) {\r\n            return (\r\n                <Anchor\r\n                    stepClassName={this.props.className + ' connection '}\r\n                    x={this.props.position.x + RECT_OFFSET}\r\n                    y={this.props.position.y + RECT_OFFSET}\r\n                    pointRadius={FILE_PICKUP_ANCHOR_POINT_RADIUS}\r\n                    position={'left-top-angle'}\r\n                    selected={true}\r\n                    active={this.props.connectionCanStart}\r\n                    hover={false}\r\n                    selectable={true}\r\n                    handleMouseDown={this.handleAnchorMouseDown}\r\n                    handleMouseUp={this.handleTransitionCreationEnd}\r\n                    handleMouseOver={this.props.onAnchorMouseOver}\r\n                    handleMouseOut={this.props.onAnchorMouseOut}\r\n                    handleDeleteTempTransition={this.props.onDeleteTempTransition}\r\n                    handleTouchTransitionMove={this.props.onCreateTempTransitionByTouch}\r\n                    handleCreateTransitionByTouch={this.props.onAddTransition}/>\r\n            );\r\n        }\r\n    };\r\n\r\n    renderText = () => {\r\n        return this.props.text\r\n    };\r\n\r\n\r\n    renderValidationTooltips = () => {\r\n        if (this.props.validationTooltips.length !== 0) {\r\n            return (\r\n                <g>\r\n                    <image className='error-icon'\r\n                           href={error}\r\n                           x={this.props.position.x + this.props.size.width - ERROR_ICON_SIZE / 2 - RECT_OFFSET}\r\n                           y={this.props.position.y - RECT_OFFSET}\r\n                           height={ERROR_ICON_SIZE}\r\n                           width={ERROR_ICON_SIZE}>\r\n                    </image>\r\n                    <title>{_.join(this.props.validationTooltips, '.\\n')}</title>\r\n                </g>\r\n            );\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.selected) {\r\n            this.step.focus();\r\n        }\r\n        this.setState({\r\n            textStepHeight: this.stepText.offsetHeight\r\n        });\r\n        this.props.onSizeChange({\r\n            width: this.props.size.width,\r\n            height: this.stepText.offsetHeight + MIN_TEXT_HEIGHT_OFFSET > MIN_STEP_HEIGHT\r\n                ? this.stepText.offsetHeight + MIN_TEXT_HEIGHT_OFFSET\r\n                : MIN_STEP_HEIGHT});\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.focused && this.props.focused) {\r\n            this.step.focus();\r\n        }\r\n        if(prevProps.text !== this.props.text){\r\n            this.setState({\r\n                textStepHeight: this.stepText.offsetHeight\r\n            });\r\n            this.props.onSizeChange({\r\n                width: this.props.size.width,\r\n                height: this.stepText.offsetHeight + MIN_TEXT_HEIGHT_OFFSET > MIN_STEP_HEIGHT\r\n                    ? this.stepText.offsetHeight + MIN_TEXT_HEIGHT_OFFSET\r\n                    : MIN_STEP_HEIGHT});\r\n        }\r\n    }\r\n\r\n    handleMouseDown = (e) => {\r\n        // Avoid move viewport\r\n        e.stopPropagation();\r\n        if (!this.props.isLockedProcessPlan) {\r\n            this.haveChangedPosition = false;\r\n            this.computedPosition = this.startPosition = {};\r\n            this.startPosition = {\r\n                x: this.props.position.x,\r\n                y: this.props.position.y\r\n            };\r\n            this.computedPosition = {\r\n                x: e.pageX,\r\n                y: e.pageY\r\n            };\r\n            document.addEventListener('mousemove', this.handleMouseMove);\r\n            document.addEventListener('mouseup', this.handleMouseUp);\r\n            this.mouseDownTimeout = setTimeout(() => this.setState({cursorType: 'draggable'}), CHANGE_CURSOR_DELAY);\r\n        }\r\n    };\r\n\r\n    handleTouchStart = (e) => {\r\n        // Avoid move viewport\r\n        e.stopPropagation();\r\n        if (!this.props.isLockedProcessPlan) {\r\n            this.haveChangedPosition = false;\r\n            this.computedPosition = this.startPosition = {};\r\n            this.startPosition = {\r\n                x: this.props.position.x,\r\n                y: this.props.position.y\r\n            };\r\n\r\n            this.computedPosition = {\r\n                x: e.targetTouches[0].pageX,\r\n                y: e.targetTouches[0].pageY,\r\n            };\r\n            document.addEventListener('touchmove', this.handleTouchMove);\r\n            document.addEventListener('touchend', this.handleTouchEnd);\r\n        }\r\n    };\r\n    handleMouseMove = (e) => {\r\n        // Move step withing drawing area\r\n        let coordinates = {\r\n            x: e.pageX,\r\n            y: e.pageY\r\n        };\r\n\r\n        let xDiff = (this.computedPosition.x - coordinates.x) * this.props.zoomScale;\r\n        let yDiff = (this.computedPosition.y - coordinates.y) * this.props.zoomScale;\r\n        if (xDiff !== 0 || yDiff !== 0) {\r\n            this.haveChangedPosition = true;\r\n        }\r\n\r\n        this.computedPosition.x = coordinates.x;\r\n        this.computedPosition.y = coordinates.y;\r\n\r\n        this.position = {\r\n            x: this.props.position.x - xDiff,\r\n            y: this.props.position.y - yDiff\r\n        };\r\n        this.props.onStepPositionChange(this.position);\r\n\r\n        this.mouseMoveTimeout = setTimeout(() => {\r\n            if (!this.props.isExistDependentTransition) {\r\n                this.props.onTransitionOver(\r\n                    {\r\n                        x: e.pageX * this.props.zoomScale + this.props.svgPosition.x,\r\n                        y: (e.pageY - 100) * this.props.zoomScale + this.props.svgPosition.y\r\n                    });\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    handleTouchMove = (e) => {\r\n        // Handle move viewport\r\n        let xDiff = (this.computedPosition.x - e.targetTouches[0].pageX) * this.props.zoomScale;\r\n        let yDiff = (this.computedPosition.y - e.targetTouches[0].pageY) * this.props.zoomScale;\r\n        if (xDiff !== 0 || yDiff !== 0) {\r\n            this.haveChangedPosition = true;\r\n        }\r\n\r\n        this.computedPosition.x = e.targetTouches[0].pageX;\r\n        this.computedPosition.y = e.targetTouches[0].pageY;\r\n\r\n        this.position = {\r\n            x: this.props.position.x - xDiff,\r\n            y: this.props.position.y - yDiff\r\n        };\r\n        this.props.onStepPositionChange(this.position);\r\n    };\r\n\r\n    handleMouseUp = (e) => {\r\n        if (this.props.snapToGrid && !_.isUndefined(this.startPosition) && !_.isUndefined(this.position) && !_.isEmpty(this.position)) {\r\n            if (Math.abs(this.startPosition.x - this.position.x) >= GRID_CELL_SIZE ||\r\n                Math.abs(this.startPosition.y - this.position.y) >= GRID_CELL_SIZE) {\r\n                this.position = {\r\n                    x: Math.round(this.position.x / GRID_CELL_SIZE) * GRID_CELL_SIZE,\r\n                    y: Math.round(this.position.y / GRID_CELL_SIZE) * GRID_CELL_SIZE\r\n                };\r\n            }\r\n        }\r\n        if (!_.isEqual(this.startPosition, this.position) && !_.isEmpty(this.position)) {\r\n            this.props.onStepPositionChangeEnd(this.startPosition, this.position);\r\n        }\r\n        document.removeEventListener('mousemove', this.handleMouseMove);\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n        this.computedPosition = this.startPosition = this.position = {};\r\n        if (this.props.isIntersected) {\r\n            this.props.onDropStep();\r\n        }\r\n        clearTimeout(this.mouseMoveTimeout);\r\n        clearTimeout(this.mouseDownTimeout);\r\n        this.setState({cursorType: 'default'});\r\n        e.stopPropagation();\r\n    };\r\n\r\n    handleTouchEnd = () => {\r\n        if (this.props.snapToGrid && !_.isUndefined(this.startPosition) && !_.isUndefined(this.position) && !_.isEmpty(this.position)) {\r\n            if (Math.abs(this.startPosition.x - this.position.x) >= GRID_CELL_SIZE ||\r\n                Math.abs(this.startPosition.y - this.position.y) >= GRID_CELL_SIZE) {\r\n                this.position = {\r\n                    x: Math.round(this.position.x / GRID_CELL_SIZE) * GRID_CELL_SIZE,\r\n                    y: Math.round(this.position.y / GRID_CELL_SIZE) * GRID_CELL_SIZE\r\n                };\r\n            }\r\n        }\r\n        if (!_.isEqual(this.startPosition, this.position) && !_.isEmpty(this.position)) {\r\n            this.props.onStepPositionChangeEnd(this.startPosition, this.position);\r\n        }\r\n\r\n        document.removeEventListener('touchmove', this.handleTouchMove);\r\n        document.removeEventListener('touchend', this.handleTouchStart);\r\n        this.computedPosition = this.startPosition = this.position = {};\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        e.stopPropagation();\r\n        if (!this.haveChangedPosition && this.props.selectable) {\r\n            this.props.onStepSelect();\r\n        }\r\n    };\r\n\r\n    handleAnchorMouseDown = (position) => {\r\n        if (!this.props.isLockedProcessPlan) {\r\n            if ((position === 'left-top-angle' && this.props.className === 'filepickup') || position !== 'left-top-angle') {\r\n                this.props.onTransitionCreationStart(position);\r\n            }\r\n        }\r\n    };\r\n\r\n    handleTransitionCreationEnd = (position) => {\r\n        this.props.onTransitionCreationEnd(position);\r\n    };\r\n\r\n    handleMouseEnter = () => {\r\n        if (this.props.selectable) {\r\n            this.props.onStepHighlight();\r\n        }\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        if (this.props.selectable) {\r\n            this.props.onStepHighlightReset();\r\n        }\r\n    };\r\n\r\n    handleArrowKeyDown = (e, direction) => {\r\n        if (!e.repeat) {\r\n            this.movementPositon = {\r\n                x: this.props.position.x,\r\n                y: this.props.position.y\r\n            };\r\n        }\r\n        if (e.shiftKey) {\r\n            e.stopPropagation();\r\n            if (!this.props.isLockedProcessPlan) {\r\n                this.props.onTransitionCreationStartByShortcut(direction);\r\n            }\r\n        } else if (e.altKey) {\r\n            e.stopPropagation();\r\n            if (!this.props.isLockedProcessPlan) {\r\n                if (this.movementDirection.length < 2 && !this.movementDirection.includes(direction)) {\r\n                    this.movementDirection.push(direction);\r\n                }\r\n                this.props.onMoveStep(this.movementDirection);\r\n            }\r\n        } else {\r\n            this.props.onAnotherElementSelect(direction);\r\n        }\r\n    };\r\n\r\n\r\n    handleKeyDown = (e) => {\r\n        e.preventDefault();\r\n        switch (e.key) {\r\n            case 'Delete':\r\n                e.stopPropagation();\r\n                if (!this.props.isLockedProcessPlan) {\r\n                    this.props.onRemoveStep();\r\n                }\r\n                break;\r\n            case 'ArrowLeft':\r\n                e.stopPropagation();\r\n                this.handleArrowKeyDown(e, 'left');\r\n                break;\r\n            case 'ArrowRight':\r\n                e.stopPropagation();\r\n                this.handleArrowKeyDown(e, 'right');\r\n                break;\r\n            case 'ArrowUp':\r\n                e.stopPropagation();\r\n                this.handleArrowKeyDown(e, 'top');\r\n                break;\r\n            case 'ArrowDown':\r\n                e.stopPropagation();\r\n                this.handleArrowKeyDown(e, 'bottom');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    handleKeyUp = (e) => {\r\n        e.stopPropagation();\r\n        if (this.props.snapToGrid && !_.isUndefined(this.props.position)) {\r\n            let position = {\r\n                x: Math.round(this.props.position.x / GRID_CELL_SIZE) * GRID_CELL_SIZE,\r\n                y: Math.round(this.props.position.y / GRID_CELL_SIZE) * GRID_CELL_SIZE\r\n            };\r\n            if (!_.isNull(this.movementPositon)) {\r\n                this.props.onStepPositionChangeEnd(this.movementPositon, position);\r\n            }\r\n        } else if (!_.isNull(this.movementPositon)) {\r\n            this.props.onStepPositionChangeEnd(this.movementPositon, this.props.position);\r\n        }\r\n        let direction = DIRECTION_BY_KEY_CODE[e.key];\r\n        if (!e.altKey) {\r\n            this.movementDirection = [];\r\n        } else if (direction) {\r\n            this.movementDirection = _.difference(this.movementDirection, [direction]);\r\n        }\r\n        this.movementPositon = null;\r\n    };\r\n}\r\n\r\nexport function getIcon(stepType) {\r\n    let path;\r\n    switch (stepType) {\r\n        case 'processplan' :\r\n            path = (\r\n                <g>\r\n                    <path\r\n                        d=\"M8.798425935864337,15.746427373489912 l8.526603775668603,5.327974099218227 L8.798425935864337,26.333181103105346 zM11.987237104000563,10.487647743092701 V16.50756653052109 l3.188811168136226,2.0066395958094625 V14.91609374763772 L16.770453856204902,15.95401077995296 l1.7330495479001229,1.037917032315239 L20.444518897753163,15.746427373489912 zM16.215878000876863,19.13695634571969 L17.87960556686098,20.17487337803493 l1.3864396383200985,0.8995280946732074 l-1.3864396383200985,0.8995280946732074 L16.215878000876863,22.942652130875565 v4.428446004545019 L24.673159794629463,22.112318505023378 L16.215878000876863,16.853538874626167 z\"\r\n                        fill=\"#FFCC00\"/>\r\n                </g>\r\n            );\r\n            return path;\r\n        case 'check' :\r\n            path = (\r\n                <g>\r\n                    <path\r\n                        d=\"M16.24251874771214,22.717441912033802 c-2.1636013312411566,0 -3.9810264494837284,-1.7308810649929258 -3.9810264494837284,-3.9810264494837284 C12.261492298228404,16.572814131308917 14.07891741647098,14.755389013066344 16.24251874771214,14.755389013066344 c2.250145384490805,0 3.9810264494837284,1.8174251182425722 3.9810264494837284,3.9810264494837284 c0,2.250145384490805 -1.7308810649929258,3.9810264494837284 -3.9810264494837284,3.9810264494837284 m0,-12.54888772119871 C11.48259581898159,10.16855419083509 7.674657475997156,13.976492533819528 7.674657475997156,18.736415462550074 c0,4.759922928730545 3.8079383429844365,8.654405324964626 8.567861271714982,8.654405324964626 c4.759922928730545,0 8.654405324964626,-3.8944823962340824 8.654405324964626,-8.654405324964626 c0,-4.759922928730545 -3.8944823962340824,-8.567861271714982 -8.654405324964626,-8.567861271714982 z\"\r\n                        fill=\"#CC66FF\"/>\r\n                </g>\r\n            );\r\n            return path;\r\n        case 'quickcheck' :\r\n            path = (\r\n                <g>\r\n                    <path\r\n                        d=\"M17.12852200988052,19.68126660792371 l5.721616548306819,-2.9889041670259493 C21.82537141520701,14.557430893022081 19.605042605416312,13.10567744046662 17.12852200988052,13.10567744046662 z\"\r\n                        fill=\"#0000E2\"/>\r\n                    <path\r\n                        d=\"M17.12852200988052,11.824718511741212 C12.773261652214137,11.824718511741212 9.271973913698023,15.326006250257324 9.271973913698023,19.68126660792371 c0,4.269863095751357 3.5012877385161123,7.77115083426747 7.856548096182496,7.77115083426747 c4.269863095751357,0 7.77115083426747,-3.5012877385161123 7.77115083426747,-7.77115083426747 C24.899672844147993,15.326006250257324 21.398385105631878,11.824718511741212 17.12852200988052,11.824718511741212 m0,1.964137024045625 c3.1596986908560045,0 5.807013810221847,2.647315119365841 5.807013810221847,5.8924110721368725 c0,3.1596986908560045 -2.647315119365841,5.807013810221847 -5.807013810221847,5.807013810221847 C13.883426057109489,25.488280418145557 11.236110937743648,22.840965298779714 11.236110937743648,19.68126660792371 C11.236110937743648,16.43617065515268 13.883426057109489,13.788855535786837 17.12852200988052,13.788855535786837 z\"\r\n                        fill=\"#E00914\"/>\r\n                    <path\r\n                        d=\"M19.690439867331335,9.177403392375371 H14.481206890514681 l2.647315119365841,3.928274048091248 zM22.081563200952093,12.422499345146402 l-0.17079452383005456,2.2203288097907055 l2.134931547875679,-0.5977808334051911 zM13.200247961789271,10.543759583015806 L6.624658794332182,9.860581487695589 L13.200247961789271,9.177403392375371 zM11.833891771148839,13.10567744046662 L6.624658794332182,12.422499345146402 L11.833891771148839,11.824718511741212 zM9.271973913698023,15.75299255983246 L6.624658794332182,15.069814464512241 L9.271973913698023,14.386636369192026 z\"\r\n                        fill=\"#E00914\"/>\r\n                </g>\r\n            );\r\n            return path;\r\n        case 'addfiles' :\r\n            path = (\r\n                <g>\r\n                    <defs>\r\n                        <linearGradient id=\"gradient\" gradientUnits=\"userSpaceOnUse\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"35\">\r\n                            <stop style={{stopColor: \"#24945c\", stopOpacity: 1}} offset=\"50%\"/>\r\n                            <stop style={{stopColor: \"#bdcecc\", stopOpacity: 1}} offset=\"100%\"/>\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <path\r\n                        d=\"M23.091891628414235,12.494143219058044 L23.091891628414235,28.90162874387368 L8.0625,28.90162874387368 L8.0625,7.512501058934966 L18.489893179561964,7.512501058934966 L18.489893179561964,12.494143219058044 L23.091891628414235,12.494143219058044 zM18.984322764975843,7.512501058934966 L23.0221643791892,12.021525885918166 L18.984322764975843,12.021525885918166 L18.984322764975843,7.512501058934966 z\"\r\n                        fill=\"url(#gradient)\"/>\r\n                    <path\r\n                        d=\"M24.030040072532877,21.767661701748704 L24.055395435887437,24.04133427739461 L21.93188375494321,24.06049443954894 L21.93188375494321,26.21920604226894 L19.67525641638755,26.21920604226894 L19.67525641638755,24.079654601703258 L17.41229023699325,24.105201484575684 L17.393273714477335,21.825142188211657 L19.67525641638755,21.805982026057343 L19.67525641638755,19.525922729693313 L21.93188375494321,19.525922729693313 L21.93188375494321,21.786821863903022 L24.030040072532877,21.767661701748704 z\"\r\n                        fill=\"#0407e0\"/>\r\n                </g>\r\n            );\r\n            return path;\r\n        case 'fixup' :\r\n            path = (\r\n                <g>\r\n                    <path\r\n                        d=\"M16.110792914237358,21.3931078979628 L10.54325410685632,15.703132589950936 L7.173427986599378,19.10233861811387 L16.110792914237358,28.117624171067735 L25.048157841875337,19.10233861811387 L21.751588811189194,15.703132589950936 zM16.110792914237358,10.087053065160001 L12.228167166984791,14.003529575869468 l3.8826257472525647,3.9903722939304007 L20.066675751060725,14.003529575869468 z\"\r\n                        fill=\"#FF6600\"/>\r\n                </g>\r\n            );\r\n            return path;\r\n        case 'action' :\r\n            path = (\r\n                <g>\r\n                    <path\r\n                        d=\"M8.306669634203013,25.423145547339963 L12.675115482464262,17.54281186028046 L8.306669634203013,9.748133974167251 H12.675115482464262 l4.454101649207548,7.794677886113206 L12.675115482464262,25.423145547339963 zM15.159133709906932,25.423145547339963 l4.368445848261248,-7.880333687059506 L15.159133709906932,9.748133974167251 h4.368445848261248 l4.454101649207548,7.794677886113206 l-4.454101649207548,7.880333687059506 z\"\r\n                        fill=\"#00A766\"/>\r\n                </g>\r\n            );\r\n            return path;\r\n        case 'variable' :\r\n            path = (\r\n                <g>\r\n                    <path fill=\"#f76b0e\"\r\n                          d=\"M8.004225328511069,10.590403825502703 L16.966254091095614,25.490081578465055 L25.9282828536802,10.590403825502703 L8.004225328511069,10.590403825502703 z\"/>\r\n                    <path fill=\"#ef7c34\"\r\n                          d=\"M10.969107350951692,12.36066304825129 L16.96625451002036,22.331124254564962 L22.96340166908898,12.36066304825129 L10.969107350951692,12.36066304825129 z\"/>\r\n                    <path fill=\"#ea8b4f\"\r\n                          d=\"M13.192768662313764,13.688356856365937 L16.96625449574386,19.961905497052676 L20.739740329173962,13.688356856365937 L13.192768662313764,13.688356856365937 z\"/>\r\n                </g>\r\n            );\r\n            return path;\r\n        case 'filepickup' :\r\n            path = (\r\n                <g>\r\n                    <path\r\n                        d=\"M8.724213758635278,22.042297607922592 V18.631873525302947 H13.038758819387983 V22.042297607922592 c0,0.4487400108710063 0.28138337352735115,0.7179840173936098 0.6565612048971514,0.7179840173936098 H19.41678195267459 c0.4689722892122513,0 0.7503556627396011,-0.2692440065226038 0.7503556627396011,-0.7179840173936098 V16.567669475296313 c0,-0.35899200869680514 -0.28138337352735115,-0.6282360152194096 -0.7503556627396011,-0.6282360152194096 H14.914647976236985 V11.811025360063647 H19.41678195267459 c2.8138337352735032,0 5.064900723492306,2.1539520521808297 5.064900723492306,4.756644115232666 V22.042297607922592 c0,2.6924400652260374 -2.251066988218802,4.846392117406868 -5.064900723492306,4.846392117406868 H13.695320024285133 C10.97528074685408,26.888689725329456 8.724213758635278,24.73473767314863 8.724213758635278,22.042297607922592 zM15.852592554661484,9.567325305708614 L8.067652553738132,13.875229410070277 l7.784940000923359,4.3079041043616595 z\"\r\n                        fill=\" #0000E2\"/>\r\n                </g>\r\n            );\r\n            return path;\r\n        case 'pdfcopy' :\r\n            path = (\r\n                <g>\r\n                    <path\r\n                        d=\"M20.3410797543537,17.618652121128065 V22.411823914350492 c0,0.4521860182285309 -0.2713116109371188,0.7234976291656494 -0.7234976291656494,0.7234976291656494 H12.744354648114381 c-0.3617488145828248,0 -0.7234976291656494,-0.2713116109371188 -0.7234976291656494,-0.6330604255199433 V17.618652121128065 H7.951182854891954 v4.8836089968681335 c0,2.622678905725479 2.1704928874969482,4.793171793222427 4.793171793222427,4.793171793222427 h6.963664680719376 C22.330698234559236,27.295432911218626 24.501191122056184,25.124940023721678 24.501191122056184,22.411823914350492 V17.618652121128065 zM18.261024070502458,13.45854075342558 V9.298429385723097 H14.100912702799974 V13.45854075342558 H11.83998261165732 l4.3409857749938965,6.963664680719376 L20.521954161645112,13.45854075342558 z\"\r\n                        fill=\"#E00914\"/>\r\n                </g>\r\n            );\r\n            return path;\r\n        case 'rename' :\r\n            path = (\r\n                <g>\r\n                    <path\r\n                        d=\"M12.458732282803728,24.884655477939397 H5.387307422586028 v-5.321425772677791 v-5.321425772677791 h7.0714248602177 h7.071424683432084 v5.321425772677791 v5.321425772677791 zm15.026777452293178,0 h-2.6517842562870317 v-5.321425772677791 v-5.321425772677791 h2.6517842562870317 h2.6517842562870317 v5.321425772677791 v5.321425772677791 z\"\r\n                        fill=\"#989897\"/>\r\n                    <path\r\n                        d=\"m19.532961523250652,29.097424408979393 c-1.1051099682166161,0.04893121765557124 -1.3956590099760962,0.010230853663121627 -1.3956590099760962,0.010230853663121627 v-0.7416349157753974 v-0.7416349157753974 h1.2053418722520832 c0.8361788998768603,0.011458259448729897 1.001095674249019,-0.16997753125131126 1.3464679325342321,-0.3829650669906414 c0.3453722582852155,-0.21298753573933096 0.6888825174243098,-0.7716837376578676 0.6888825174243098,-0.7716837376578676 l0.012984994045317333,-7.069552513153306 l0.012989077376778162,-6.926340586012331 l-0.6416665474100297,-0.5827131957857709 c-0.17645831074608698,-0.16024613162221837 -1.0879158761015146,-0.5827131587040245 -1.6333325843166393,-0.5827131587040245 h-0.9916660369066117 v-0.7416349157753974 v-0.7416349157753974 h1.1341428632359902 c0.6237782889465942,0 1.7920965948436782,0.4185084394736185 2.0416657303958026,0.577253019963612 l0.9075228671598096,0.5772529828818656 l0.9075228671598096,-0.5772529828818656 c0.2495687272189767,-0.15874458048999315 1.4178874414492082,-0.577253019963612 2.0416657303958026,-0.577253019963612 h1.1341428632359902 v0.7416349157753974 v0.7416349157753974 h-0.9916660369066117 c-0.5454167082151246,0 -1.4568746819036997,0.4224670270818067 -1.6333325843166393,0.5827131587040245 c-0.17645831074608698,0.16024609454047287 -0.6416677724094676,0.5827117125159388 -0.6416677724094676,0.5827117125159388 V19.466399874292534 V26.45895770457733 c0,0 0.19327265303533483,0.5578522213843846 0.5232250267251622,0.7884546988257539 c0.3299523736898291,0.23060247744137058 0.7169521545520825,0.36250484293422935 1.4252047714269458,0.37697154441880315 h1.318235370481173 v0.7416349157753974 v0.7416349157753974 c0,0 -1.3286629740325964,0.014465589032199142 -1.484607444185958,0.014465589032199142 c-0.15594487848650798,0 -1.2716923334916321,-0.2197712703139285 -1.8222074893687021,-0.5078293171327921 c-0.3196938200608808,-0.16728020506263525 -0.8116409361295267,-0.6834851761167373 -0.8116409361295267,-0.6834851761167373 c0,0 -0.4981398965620804,0.5420108995834217 -0.8296018778929626,0.7113903022751602 c-0.5492223731365826,0.28065615954196776 -0.7178361958133428,0.40629690144093566 -1.8229461640299585,0.4552281190965063 z\"\r\n                        fill=\"#b72028\"/>\r\n                </g>\r\n            );\r\n            return path;\r\n        case 'profile' :\r\n            path = (\r\n                <g>\r\n                    <g>\r\n                        <path\r\n                            d=\"M15.032252677977382,13.717326361407801 C15.032252677977382,15.602163471598317 13.506432160204106,17.127983989371593 11.62159505001359,17.127983989371593 C9.736757939823075,17.127983989371593 8.210937422049799,15.602163471598317 8.210937422049799,13.717326361407801 C8.210937422049799,11.832489251217286 9.736757939823075,10.306668733444011 11.62159505001359,10.306668733444011 c1.8848371101905157,0 3.41065762796379,1.5258205177732749 3.41065762796379,3.41065762796379 z\"\r\n                            fill=\"#6999FF\"/>\r\n                        <path\r\n                            d=\"M17.814631269211,23.321020208569 c0,-1.8848371101905157 1.5258205177732749,-3.41065762796379 3.41065762796379,-3.41065762796379 c1.8848371101905157,0 3.41065762796379,1.5258205177732749 3.41065762796379,3.41065762796379 c0,1.8848371101905157 -1.5258205177732749,3.41065762796379 -3.41065762796379,3.41065762796379 c-1.8848371101905157,0 -3.41065762796379,-1.5258205177732749 -3.41065762796379,-3.41065762796379 z\"\r\n                            fill=\"#6999FF\"/>\r\n                        <path\r\n                            d=\"M15.301515122290311,23.500528504777623 c0,-3.3209034798594796 2.6926244431293087,-6.013527922988788 6.013527922988788,-6.013527922988788 c1.2565580734603439,0 2.3336078507120672,0.3590165924172413 3.3209034798594796,0.8975414810431028 v-8.077873329387923 H16.468319047646347 c0.6282790367301729,0.8975414810431028 0.9872956291474129,1.9745912582948257 0.9872956291474129,3.2311493317551703 c0,3.3209034798594796 -2.6926244431293087,6.013527922988788 -6.013527922988788,6.013527922988788 C10.275282828448937,19.55134598818797 9.108478903092902,19.192329395770727 8.210937422049799,18.564050359040554 v8.167627477492232 h8.077873329387923 C15.66053171470755,25.744382207385378 15.301515122290311,24.667332430133655 15.301515122290311,23.500528504777623 z\"\r\n                            fill=\"#6999FF\"/>\r\n                        <path\r\n                            d=\"M15.301515122290311,23.500528504777623 c0,-3.3209034798594796 2.6926244431293087,-6.013527922988788 6.013527922988788,-6.013527922988788 c1.2565580734603439,0 2.3336078507120672,0.3590165924172413 3.3209034798594796,0.8975414810431028 v-8.077873329387923 H16.468319047646347 c0.6282790367301729,0.8975414810431028 0.9872956291474129,1.9745912582948257 0.9872956291474129,3.2311493317551703 c0,3.3209034798594796 -2.6926244431293087,6.013527922988788 -6.013527922988788,6.013527922988788 C10.275282828448937,19.55134598818797 9.108478903092902,19.192329395770727 8.210937422049799,18.564050359040554 v8.167627477492232 h8.077873329387923 C15.66053171470755,25.744382207385378 15.301515122290311,24.667332430133655 15.301515122290311,23.500528504777623 z\"\r\n                            fill=\"#6999FF\"/>\r\n                    </g>\r\n                </g>\r\n            );\r\n            return path;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nconst PositionShape = PropTypes.shape({\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired\r\n});\r\n\r\nconst SizeShape = PropTypes.shape({\r\n    width: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired\r\n});\r\n\r\nStep.propTypes = {\r\n    className: PropTypes.string.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    position: PositionShape.isRequired,\r\n    size: SizeShape.isRequired,\r\n    selected: PropTypes.bool.isRequired,\r\n    focused: PropTypes.bool.isRequired,\r\n    highlighted: PropTypes.bool.isRequired,\r\n    selectable: PropTypes.bool.isRequired,\r\n    isIntersected: PropTypes.bool.isRequired,\r\n    intersectedAnchors: PropTypes.array.isRequired,\r\n    transitionCanStart: PropTypes.bool.isRequired,\r\n    connectionCanStart: PropTypes.bool.isRequired,\r\n    modifyingConnection: PropTypes.bool.isRequired,\r\n    modifyingTransition: PropTypes.bool.isRequired,\r\n    pickUpFile: PropTypes.bool.isRequired,\r\n    zoomScale: PropTypes.number.isRequired,\r\n    svgPosition: PropTypes.object.isRequired,\r\n    startTransition: PropTypes.bool,\r\n    snapToGrid: PropTypes.bool,\r\n    anchorStartEndAvailability: PropTypes.bool.isRequired,\r\n    isExistDependentTransition: PropTypes.bool,\r\n    stepAvailability: PropTypes.string.isRequired,\r\n    connectionAnchorIsVisible: PropTypes.bool.isRequired,\r\n    onStepPositionChange: PropTypes.func,\r\n    onStepPositionChangeEnd: PropTypes.func,\r\n    onStepSelect: PropTypes.func,\r\n    onStepHighlight: PropTypes.func,\r\n    onStepHighlightReset: PropTypes.func,\r\n    onTransitionCreationStart: PropTypes.func,\r\n    onTransitionCreationEnd: PropTypes.func,\r\n    onAnchorMouseOver: PropTypes.func,\r\n    onAnchorMouseOut: PropTypes.func,\r\n    onMoveStep: PropTypes.func,\r\n    onRemoveStep: PropTypes.func,\r\n    onTransitionCreationStartByShortcut: PropTypes.func,\r\n    onAnotherElementSelect: PropTypes.func,\r\n    onCreateTempTransitionByTouch: PropTypes.func,\r\n    onAddTransition: PropTypes.func,\r\n    onTransitionOver: PropTypes.func,\r\n    onDropStep: PropTypes.func,\r\n    onSizeChange: PropTypes.func\r\n};\r\n\r\nStep.defaultProps = {\r\n    size: {\r\n        width: 200,\r\n        height: 40\r\n    }\r\n};\r\n\r\nexport default Step;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Transition.css';\r\n\r\nimport {HEADER_OFFSET} from \"../../App\";\r\nimport {RECT_OFFSET} from \"../step/Step\";\r\nimport {ICON_SIZE} from \"./Transition.container\";\r\nimport {translatedTransitionCheckboxType, translatedTransitionReportTypes} from \"../../../dictionary\"\r\nimport _ from 'lodash'\r\n\r\nimport certify from './icons/certify.svg';\r\nimport create_reports from './icons/create_reports.svg';\r\nimport create_report from './icons/create_report.svg';\r\n\r\nimport error from '../error_icon.svg';\r\n\r\nexport const ARROW_SIZE = 10;\r\nconst UPDATE_RADIUS = 25;\r\nexport const CREATE_REPORT_TYPE_OFFSET = 11;\r\nconst ERROR_ICON_SIZE = 20;\r\nlet RADIUS;\r\n\r\nconst ICONS = {\r\n    certify,\r\n    create_report,\r\n    create_reports\r\n};\r\n\r\nclass Transition extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAvailableDrop: false,\r\n        };\r\n    }\r\n\r\n    setTransition = (transition) => {\r\n        this.transition = transition;\r\n    };\r\n\r\n    render() {\r\n        let path = this.buildPath();\r\n        if (_.isNil(path)) {\r\n            return null;\r\n        }\r\n        let transitionClassName = 'transition ' + this.props.className +\r\n            (this.props.selected ? ' selected' : '') +\r\n            (this.props.highlighted ? ' highlighted' : '') +\r\n            (this.props.disabled ? ' disabled' : '') +\r\n            (this.state.isAvailableDrop ? ' step-insert' : '') +\r\n            (this.props.intersected ? ' step-insert' : '');\r\n        return (\r\n            <g className={transitionClassName}\r\n               ref={this.setTransition}\r\n               role=\"img\"\r\n               aria-label={this.getAriaLabel()}\r\n               tabIndex=\"0\"\r\n               onKeyDown={this.onKeyDown}\r\n               onDragOver={this.handleDragOver  /*(event) => event.preventDefault()*/}\r\n               onDragLeave={this.handleDragLeave}\r\n               onDrop={this.handleDrop}>\r\n                {this.renderTypes()}\r\n                {this.renderIcons()}\r\n                <path className=\"visible-path\" d={path}/>\r\n                {this.renderArrow()}\r\n                {this.renderSelectionPath(path)}\r\n                {this.renderValidationTooltips()}\r\n            </g>\r\n        );\r\n    }\r\n\r\n    renderArrow = () => {\r\n        let arrowPoints;\r\n        if (this.props.arrowType) {\r\n            let arrowPosition = Transition.arrowPosition(this.props.arrowType);\r\n            arrowPoints = '' +\r\n                (this.props.end.x + arrowPosition.x1) + ', ' + (this.props.end.y + arrowPosition.y1) + ' ' +\r\n                (this.props.end.x + arrowPosition.x2) + ', ' + (this.props.end.y + arrowPosition.y2) + ' ' +\r\n                this.props.end.x + ', ' + this.props.end.y;\r\n        }\r\n\r\n        return arrowPoints ? <polygon points={arrowPoints}/> : null;\r\n    };\r\n\r\n    renderSelectionPath = (path) => {\r\n        return (\r\n            <path className=\"selection-path\"\r\n                  d={path}\r\n                  onMouseEnter={this.handleMouseEnter}\r\n                  onMouseLeave={this.handleMouseLeave}\r\n                  onMouseDown={this.handleMouseDown}\r\n                  onClick={this.handleClick}/>\r\n        );\r\n    };\r\n\r\n    renderTypes = () => {\r\n        if (this.props.highlighted || this.props.showTransitionInfo) {\r\n            return _.map(this.props.types, (type, index) => (\r\n                <text key={type}\r\n                      className={`transition-label ${type}`}\r\n                      x={this.props.typesPoints[index].x}\r\n                      y={this.props.typesPoints[index].y}>\r\n                    {this.props.translate(translatedTransitionCheckboxType[type])}\r\n                </text>\r\n            ));\r\n        }\r\n    };\r\n\r\n    renderIcons = () => {\r\n        if (this.props.highlighted || this.props.showTransitionInfo) {\r\n            return _.map(this.props.icons, (icon, index) => (\r\n                <g key={`${icon.name}${index}g`}>\r\n                    <image href={ICONS[icon.name]}\r\n                           x={this.props.iconsPoints[index].x}\r\n                           y={this.props.iconsPoints[index].y}\r\n                           key={`${icon.name}${index}`}\r\n                           width={ICON_SIZE}\r\n                           height={ICON_SIZE}/>\r\n                    {icon.innerText ? <text className='report-text'\r\n                                            x={this.props.iconsPoints[index].x + ICON_SIZE / 2 - RECT_OFFSET}\r\n                                            y={this.props.iconsPoints[index].y + ICON_SIZE - RECT_OFFSET}>\r\n                        {icon.innerText}\r\n                    </text> : null}\r\n                    {icon.caption ? <text className='report-text'\r\n                                          x={this.props.iconsPoints[index].x + CREATE_REPORT_TYPE_OFFSET}\r\n                                          y={this.props.iconsPoints[index].y + ICON_SIZE + CREATE_REPORT_TYPE_OFFSET}\r\n                                          fontSize=\"10\"\r\n                                          textAnchor=\"middle\">\r\n                        {this.props.translate(translatedTransitionReportTypes[icon.caption])}\r\n                    </text> : null}\r\n                </g>\r\n            ));\r\n        }\r\n    };\r\n\r\n    renderValidationTooltips = () => {\r\n        if (this.props.validationTooltips && this.props.validationTooltips.length !== 0) {\r\n            let coordinates = this.getErrorIconCoordinates();\r\n            return (\r\n                <image className='error-icon'\r\n                       href={error}\r\n                       x={coordinates.x}\r\n                       y={coordinates.y}\r\n                       height={ERROR_ICON_SIZE}\r\n                       width={ERROR_ICON_SIZE}\r\n                       onMouseEnter={this.handleMouseEnter}\r\n                       onMouseLeave={this.handleMouseLeave}\r\n                       onClick={this.handleClick}>\r\n                    <title>{_.join(this.props.validationTooltips, '.\\n')}\r\n                    </title>\r\n                </image>);\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.selected) {\r\n            this.transition.focus();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.focused && this.props.focused) {\r\n            this.transition.focus();\r\n        }\r\n    }\r\n\r\n    static arrowPosition(arrowType) {\r\n        switch (arrowType) {\r\n            case 'top':\r\n                return {'x1': -ARROW_SIZE / 2, 'x2': ARROW_SIZE / 2, 'y1': -ARROW_SIZE, 'y2': -ARROW_SIZE};\r\n            case 'bottom':\r\n                return {'x1': -ARROW_SIZE / 2, 'x2': ARROW_SIZE / 2, 'y1': ARROW_SIZE, 'y2': ARROW_SIZE};\r\n            case 'right':\r\n                return {'x1': ARROW_SIZE, 'x2': ARROW_SIZE, 'y1': ARROW_SIZE / 2, 'y2': -ARROW_SIZE / 2};\r\n            case 'left':\r\n                return {'x1': -ARROW_SIZE, 'x2': -ARROW_SIZE, 'y1': ARROW_SIZE / 2, 'y2': -ARROW_SIZE / 2};\r\n            default:\r\n                return 'Error';\r\n        }\r\n    }\r\n\r\n    buildPath = () => {\r\n        if (_.isNil(this.props.start)) {\r\n            return null;\r\n        }\r\n        let path = 'M ' + this.props.start.x + ' ' + this.props.start.y; // Define start point\r\n\r\n        for (let i = 1; i < this.props.points.length - 1; i++) {\r\n            let direction = this.getLineDirection(this.props.points[i - 1], this.props.points[i]);\r\n            let offsetCoordinate;\r\n            switch (direction) {\r\n                case 'H':\r\n                    // Draw horizontal line and round it at the end\r\n                    this.getRadius(this.props.points[i].x, this.props.points[i - 1].x);\r\n                    offsetCoordinate = this.getOffsetCoordinate(this.props.points[i].x, this.props.points[i - 1].x);\r\n                    path += ' L ' + offsetCoordinate + ' ' + this.props.points[i].y;\r\n                    path += ' M ' + offsetCoordinate + ' ' + this.props.points[i].y;\r\n                    this.getRadius(this.props.points[i].y, this.props.points[i + 1].y);\r\n                    offsetCoordinate = this.getOffsetCoordinate(this.props.points[i].y, this.props.points[i + 1].y);\r\n                    path += ' Q ' + this.props.points[i].x + ' ' + this.props.points[i].y + ' '\r\n                        + this.props.points[i].x + ' ' + offsetCoordinate;\r\n\r\n                    path += ' M ' + this.props.points[i].x + ' ' + offsetCoordinate;\r\n\r\n                    break;\r\n                case 'V':\r\n                    // Draw vertical line and round it at the end\r\n                    this.getRadius(this.props.points[i].y, this.props.points[i - 1].y);\r\n                    offsetCoordinate = this.getOffsetCoordinate(this.props.points[i].y, this.props.points[i - 1].y);\r\n                    path += ' L ' + this.props.points[i].x + ' ' + offsetCoordinate;\r\n                    path += ' M ' + this.props.points[i].x + ' ' + offsetCoordinate;\r\n\r\n                    this.getRadius(this.props.points[i].x, this.props.points[i + 1].x);\r\n                    offsetCoordinate = this.getOffsetCoordinate(this.props.points[i].x, this.props.points[i + 1].x);\r\n                    path += ' Q ' + this.props.points[i].x + ' ' + this.props.points[i].y + ' '\r\n                        + offsetCoordinate + ' ' + this.props.points[i].y;\r\n                    path += ' M ' + offsetCoordinate + ' ' + this.props.points[i].y;\r\n\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // Finish line\r\n        path += ' L ' + this.props.points[this.props.points.length - 1].x + ' ' + this.props.points[this.props.points.length - 1].y;\r\n\r\n        return path;\r\n    };\r\n\r\n    getLineDirection = (startPoint, endPoint) => {\r\n        if (startPoint.x === endPoint.x) {\r\n            return 'V';\r\n        } else {\r\n            return 'H';\r\n        }\r\n    };\r\n\r\n    getOffsetCoordinate = (mainCoordinate, directiveCoordinate) => {\r\n        return mainCoordinate - Math.sign(mainCoordinate - directiveCoordinate) * RADIUS;\r\n    };\r\n\r\n    getRadius = (startPoint, endPoint) => {\r\n        if (Math.abs(startPoint - endPoint) < 20) {\r\n            if (Math.abs(startPoint - endPoint) < 10) {\r\n                RADIUS = 2;\r\n            } else {\r\n                RADIUS = 5;\r\n            }\r\n            return RADIUS;\r\n        } else {\r\n            RADIUS = 10;\r\n            return RADIUS;\r\n        }\r\n    };\r\n\r\n    getAriaLabel = () => {\r\n        if (!_.isNil(this.props.types)) {\r\n            switch (this.props.types.length) {\r\n                case 0:\r\n                    return 'transition';\r\n                case 1:\r\n                    return 'transition on ' + this.props.types[0];\r\n                default:\r\n                    return 'transition on ' + this.props.types.slice(0, this.props.types.length - 1).join(',') + ' and ' + this.props.types[this.props.types.length - 1];\r\n            }\r\n        } else {\r\n            return ''\r\n        }\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        e.stopPropagation();\r\n        this.props.onTransitionSelect();\r\n    };\r\n\r\n    handleMouseDown = (e) => {\r\n        // Avoid move viewport\r\n        e.stopPropagation();\r\n        if (!this.props.isLockedProcessPlan) {\r\n            document.addEventListener('mousemove', this.handleMouseMove);\r\n            document.addEventListener('mouseup', this.handleMouseUp);\r\n            if (_.isFunction(this.props.onStartTransitionPointUpdate)) {\r\n                this.baseStart = {\r\n                    start: this.props.start,\r\n                    end: this.props.start\r\n                };\r\n                let x = e.pageX * this.props.scale + this.props.svgPosition.x;\r\n                let y = (e.pageY - HEADER_OFFSET) * this.props.scale + this.props.svgPosition.y;\r\n\r\n                if (Math.pow(x - this.props.start.x, 2) + Math.pow(y - this.props.start.y, 2) <= Math.pow(UPDATE_RADIUS, 2)) {\r\n                    this.props.onStartTransitionPointUpdate(\r\n                        {\r\n                            start: {x, y},\r\n                            end: {x: this.props.end.x, y: this.props.end.y}\r\n                        },\r\n                        'start'\r\n                    );\r\n                } else if (Math.pow(x - this.props.end.x, 2) + Math.pow(y - this.props.end.y, 2) <= Math.pow(UPDATE_RADIUS, 2)) {\r\n                    this.props.onStartTransitionPointUpdate(\r\n                        {\r\n                            start: {x: this.props.start.x - RECT_OFFSET, y: this.props.start.y - RECT_OFFSET},\r\n                            end: {x, y}\r\n                        },\r\n                        'end'\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    handleMouseUp = (e) => {\r\n        // Avoid move viewport\r\n        e.stopPropagation();\r\n    };\r\n\r\n    handleMouseEnter = () => {\r\n        if (_.isFunction(this.props.onTransitionHighlight)) {\r\n            this.props.onTransitionHighlight();\r\n        }\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        if (_.isFunction(this.props.onTransitionHighlightReset)) {\r\n            this.props.onTransitionHighlightReset();\r\n        }\r\n    };\r\n\r\n    handleDragOver = (e) => {\r\n        this.setState({isAvailableDrop: true});\r\n        e.preventDefault();\r\n    };\r\n\r\n    handleDragLeave = (e) => {\r\n        this.setState({isAvailableDrop: false});\r\n        e.preventDefault();\r\n    };\r\n\r\n    handleDrop = (e) => {\r\n        if (!this.props.isLockedProcessPlan) {\r\n            let data;\r\n            try {\r\n                data = JSON.parse(e.dataTransfer.getData('text'));\r\n            } catch (ignore) {\r\n                return;\r\n            }\r\n            let position = {\r\n                x: e.clientX - data.offsetX - (RECT_OFFSET),\r\n                y: e.clientY - data.offsetY - (RECT_OFFSET) - HEADER_OFFSET\r\n            };\r\n            this.props.onInsertStep(data.stepType, position);\r\n            this.setState({isAvailableDrop: false});\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n    };\r\n\r\n    onKeyDown = (e) => {\r\n        switch (e.key) {\r\n            case 'Delete':\r\n                e.stopPropagation();\r\n                if (!this.props.isLockedProcessPlan) {\r\n                    this.props.onRemoveTransition();\r\n                }\r\n                break;\r\n            case 'ArrowRight':\r\n                e.stopPropagation();\r\n                this.props.onArrowKeyDown('right', e.ctrlKey);\r\n                break;\r\n            case 'ArrowLeft':\r\n                e.stopPropagation();\r\n                this.props.onArrowKeyDown('left', e.ctrlKey);\r\n                break;\r\n            case 'ArrowDown':\r\n                e.stopPropagation();\r\n                this.props.onArrowKeyDown('bottom');\r\n                break;\r\n            case 'ArrowUp':\r\n                e.stopPropagation();\r\n                this.props.onArrowKeyDown('top');\r\n                break;\r\n            case 'Enter':\r\n                if (_.isFunction(this.props.onEnterKeyDown)) {\r\n                    this.props.onEnterKeyDown();\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    getErrorIconCoordinates = () => {\r\n        switch (this.props.end.position) {\r\n            case 'left':\r\n                return {\r\n                    x: this.props.points[this.props.points.length - 1].x - RECT_OFFSET - ERROR_ICON_SIZE - ARROW_SIZE,\r\n                    y: this.props.points[this.props.points.length - 1].y - ERROR_ICON_SIZE / 2\r\n                };\r\n            case 'top':\r\n                return {\r\n                    x: this.props.points[this.props.points.length - 1].x - ERROR_ICON_SIZE / 2,\r\n                    y: this.props.points[this.props.points.length - 1].y - RECT_OFFSET - ERROR_ICON_SIZE - ARROW_SIZE\r\n                };\r\n            case 'right':\r\n                return {\r\n                    x: this.props.points[this.props.points.length - 1].x + RECT_OFFSET + ARROW_SIZE,\r\n                    y: this.props.points[this.props.points.length - 1].y - ERROR_ICON_SIZE / 2\r\n                };\r\n            case 'bottom':\r\n                return {\r\n                    x: this.props.points[this.props.points.length - 1].x - ERROR_ICON_SIZE / 2,\r\n                    y: this.props.points[this.props.points.length - 1].y + RECT_OFFSET + ARROW_SIZE\r\n                };\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}\r\n\r\nconst PointShape = PropTypes.shape({\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired\r\n});\r\n\r\nconst IconShape = PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    innerText: PropTypes.string.isRequired,\r\n    caption: PropTypes.string.isRequired\r\n});\r\n\r\nTransition.propTypes = {\r\n    points: PropTypes.arrayOf(PointShape),\r\n    className: PropTypes.string,\r\n    start: PointShape.isRequired,\r\n    end: PointShape.isRequired,\r\n    arrowType: PropTypes.string,\r\n    selected: PropTypes.bool.isRequired,\r\n    focused: PropTypes.bool.isRequired,\r\n    intersected: PropTypes.bool,\r\n    disabled: PropTypes.bool.isRequired,\r\n    scale: PropTypes.number.isRequired,\r\n    svgPosition: PointShape.isRequired,\r\n    highlighted: PropTypes.bool.isRequired,\r\n    types: PropTypes.arrayOf(PropTypes.string),\r\n    typesPoints: PropTypes.arrayOf(PointShape),\r\n    icons: PropTypes.arrayOf(IconShape),\r\n    iconsPoints: PropTypes.arrayOf(PointShape),\r\n    showTransitionInfo: PropTypes.bool.isRequired,\r\n    translate: PropTypes.func.isRequired,\r\n    onTransitionSelect: PropTypes.func,\r\n    onStartTransitionPointUpdate: PropTypes.func,\r\n    onTransitionHighlight: PropTypes.func,\r\n    onTransitionHighlightReset: PropTypes.func,\r\n    onRemoveTransition: PropTypes.func,\r\n    onArrowKeyDown: PropTypes.func,\r\n    onEnterKeyDown: PropTypes.func,\r\n    onInsertStep: PropTypes.func\r\n};\r\n\r\nTransition.defaultProps = {\r\n    disabled: false\r\n};\r\n\r\nexport default Transition;","import {handleActions, createAction} from 'redux-actions';\r\nimport {createSelector} from 'reselect'\r\n\r\nexport const CREATING_TRANSITION = 'creating-transition';\r\nexport const UPDATING_TRANSITION_END_POINT = 'updating-transition-end-point';\r\nexport const UPDATING_TRANSITION_START_POINT = 'updating-transition-start-point';\r\nexport const CREATING_CONNECTION = 'creating-connection';\r\nexport const UPDATING_CONNECTION = 'updating-connection';\r\nexport const CREATING_TRANSITION_BY_SHORTCUTS = 'updating-transition-by-shortcuts';\r\n\r\n//- Actions\r\nexport const setCreatingTransitionByShortcutsType = createAction(\"CREATING_TRANSITION_BY_SHORTCUTS_TYPE_SET\");\r\nexport const setCreatingTransitionType = createAction(\"CREATING_TRANSITION_TYPE_SET\");\r\nexport const setUpdatingTransitionEndPointType = createAction(\"UPDATING_TRANSITION_END_POINT_TYPE_SET\");\r\nexport const setUpdatingTransitionStartPointType = createAction(\"UPDATING_TRANSITION_START_POINT_TYPE_SET\");\r\nexport const setCreatingConnectionType = createAction(\"CREATING_CONNECTION_TYPE_SET\");\r\nexport const setUpdatingConnectionType = createAction(\"UPDATING_CONNECTION_TYPE_SET\");\r\nexport const resetActionType = createAction(\"ACTION_TYPE_RESET\");\r\n\r\n//- State\r\nconst initialState = {\r\n    actionType: null\r\n};\r\n\r\n//- Reducers\r\nexport default handleActions({\r\n    CREATING_TRANSITION_TYPE_SET: () => {\r\n        return {actionType: CREATING_TRANSITION};\r\n    },\r\n    UPDATING_TRANSITION_END_POINT_TYPE_SET: () => {\r\n        return {actionType: UPDATING_TRANSITION_END_POINT};\r\n    },\r\n    UPDATING_TRANSITION_START_POINT_TYPE_SET: () => {\r\n        return {actionType: UPDATING_TRANSITION_START_POINT};\r\n    },\r\n    CREATING_CONNECTION_TYPE_SET: () => {\r\n        return {actionType: CREATING_CONNECTION};\r\n    },\r\n    UPDATING_CONNECTION_TYPE_SET: () => {\r\n        return {actionType: UPDATING_CONNECTION};\r\n    },\r\n    ACTION_TYPE_RESET: () => {\r\n        return {actionType: null};\r\n    },\r\n    CREATING_TRANSITION_BY_SHORTCUTS_TYPE_SET: () => {\r\n        return {actionType: CREATING_TRANSITION_BY_SHORTCUTS};\r\n    }\r\n}, initialState);\r\n\r\n//- Selectors\r\nexport const getActionType = state => state.transitionActionType.actionType;\r\n\r\nexport const modifyingConnection = createSelector(\r\n    getActionType,\r\n    actionType => actionType === CREATING_CONNECTION || actionType === UPDATING_CONNECTION\r\n);\r\n\r\nexport const modifyingTransition = createSelector(\r\n    getActionType,\r\n    actionType => actionType === CREATING_TRANSITION || actionType === UPDATING_TRANSITION_START_POINT || actionType === UPDATING_TRANSITION_END_POINT || actionType === CREATING_TRANSITION_BY_SHORTCUTS\r\n);\r\n\r\nexport const modifyingTransitionByMouse = createSelector(\r\n    getActionType,\r\n    actionType => actionType === CREATING_TRANSITION || actionType === UPDATING_TRANSITION_START_POINT || actionType === UPDATING_TRANSITION_END_POINT\r\n);","import {Change} from './Change';\r\nimport _ from 'lodash';\r\n\r\nexport class RemoveTransitionChange extends Change {\r\n    constructor(transitionId) {\r\n        super('Remove transition');\r\n        this.transitionId = transitionId;\r\n\r\n        this.transition = null;\r\n        this.transitionsLayout = null;\r\n        this.deletedtransitionProperties = null;\r\n    }\r\n\r\n    applyRemoveTransition(transitions) {\r\n        this.transition = transitions[this.transitionId];\r\n        return _.omitBy(transitions, transition => transition.id === this.transitionId);\r\n    }\r\n    applyRemoveTransitionLayout(transitions) {\r\n        this.transitionsLayout = transitions[this.transitionId];\r\n        return _.omitBy(transitions, transition => transition === this.transitionsLayout);\r\n    }\r\n\r\n    applyRemoveTransitionProperty(transitionProperties) {\r\n        this.deletedtransitionProperties = _.filter(transitionProperties, property => property.transitionId === this.transitionId);\r\n        return _.filter(transitionProperties, property => property.transitionId !== this.transitionId);\r\n    }\r\n\r\n    revertRemoveTransition(transitions) {\r\n        return {...transitions,\r\n            [this.transitionId]:\r\n            this.transition\r\n        }\r\n    };\r\n    revertRemoveTransitionLayout(transitions) {\r\n        return {...transitions,\r\n            [this.transitionId]:\r\n            this.transitionsLayout\r\n        }\r\n    };\r\n    revertRemoveTransitionProperty(transitionProperties) {\r\n        return _.concat(transitionProperties, this.deletedtransitionProperties )\r\n    };\r\n}\r\n","import {connect} from 'react-redux'\r\nimport Transition, {CREATE_REPORT_TYPE_OFFSET} from './Transition'\r\nimport _ from 'lodash';\r\nimport * as MainPoints from \"../../../redux/modules/transitionsLayout\";\r\nimport {calculateTransitionPoint, getArrowLineType} from \"../../../redux/modules/transitionsLayout\";\r\nimport {\r\n    highlightElement, isTransitionHighlighted, selectTransition, typeLabels\r\n} from \"../../../redux/modules/transitions\";\r\nimport {translatedTransitionTypes} from \"../../../dictionary\"\r\nimport {dropStepIntoTransition, selectStep} from \"../../../redux/modules/steps\";\r\nimport {\r\n    getScale, getSvgPosition, isTransitionsInfoShown, moveToAnotherTransitionFromSameStep, moveToAnotherTransitionToSameStep,\r\n    selectAnotherElement, selectDrawingArea\r\n} from \"../../../redux/modules/drawingArea\";\r\nimport {\r\n    setUpdatingTransitionEndPointType, setUpdatingTransitionStartPointType\r\n} from \"../../../redux/modules/transitionActionType\";\r\nimport {RECT_OFFSET} from \"../step/Step\";\r\nimport {DRAWING_AREA, getFocusedArea, setFocusOnGlobalArea} from \"../../../redux/modules/processPlan\";\r\nimport {applyChange} from \"../../../redux/modules/changeStack\";\r\nimport {RemoveTransitionChange} from \"../../../redux/model/RemoveTransition\";\r\nimport {startTransitionPointUpdate} from '../../../redux/modules/tempTransition';\r\nimport {isTransitionDisabled} from '../../../redux/modules/transitionProperties';\r\nimport {getTranslate} from 'react-localize-redux';\r\nimport uuidv4 from \"uuid/v4\";\r\n\r\nexport const ARROW_OFFSET = 10;\r\nconst TYPE_FONT_WIDTH = 7.5;\r\nconst LINE_HEIGHT = 17;\r\nexport const ICON_SIZE = 24;\r\nconst MIN_ICON_TEXT_LENGTH_TO_SET_OFFSET = 6;\r\n\r\nexport const calculateTransitionPoints = (startStepLayout, endStepLayout, transitionLayout) => {\r\n    if (_.isNil(startStepLayout)) {\r\n        return null;\r\n    }\r\n\r\n    let points = [];\r\n\r\n    // Calculate start and end points\r\n    let startPoint = calculateTransitionPoint(startStepLayout, transitionLayout.start.position);\r\n    let endPoint = calculateTransitionPoint(endStepLayout, transitionLayout.end.position);\r\n    let mainPoints;\r\n    points.push(startPoint);\r\n\r\n    switch (transitionLayout.start.position) {\r\n        case 'right':\r\n            switch (transitionLayout.end.position) {\r\n                case 'top':\r\n                    mainPoints = MainPoints.createRightTopPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    endPoint = {\r\n                        x: endPoint.x,\r\n                        y: endPoint.y - ARROW_OFFSET,\r\n                        position: endPoint.position\r\n                    };\r\n                    break;\r\n                case 'left':\r\n                    mainPoints = MainPoints.createRightLeftPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    endPoint = {\r\n                        x: endPoint.x - ARROW_OFFSET,\r\n                        y: endPoint.y,\r\n                        position: endPoint.position\r\n                    };\r\n                    break;\r\n                case 'right':\r\n                    mainPoints = MainPoints.createRightRightPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    endPoint = {\r\n                        x: endPoint.x + ARROW_OFFSET,\r\n                        y: endPoint.y,\r\n                        position: endPoint.position\r\n                    };\r\n                    break;\r\n                case 'bottom':\r\n                    mainPoints = MainPoints.createRightBottomPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    endPoint = {\r\n                        x: endPoint.x,\r\n                        y: endPoint.y + ARROW_OFFSET,\r\n                        position: endPoint.position\r\n                    };\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            break;\r\n        case 'bottom':\r\n            switch (transitionLayout.end.position) {\r\n                case 'top':\r\n                    mainPoints = MainPoints.createBottomTopPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    endPoint = {\r\n                        x: endPoint.x,\r\n                        y: endPoint.y - ARROW_OFFSET,\r\n                        position: endPoint.position\r\n                    };\r\n                    break;\r\n                case 'bottom':\r\n                    mainPoints = MainPoints.createBottomBottomPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    endPoint = {\r\n                        x: endPoint.x,\r\n                        y: endPoint.y + ARROW_OFFSET,\r\n                        position: endPoint.position\r\n                    };\r\n                    break;\r\n                case 'right':\r\n                    mainPoints = MainPoints.createBottomRightPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    endPoint = {\r\n                        x: endPoint.x + ARROW_OFFSET,\r\n                        y: endPoint.y,\r\n                        position: endPoint.position\r\n                    };\r\n                    break;\r\n                case 'left':\r\n                    mainPoints = MainPoints.createBottomLeftPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    endPoint = {\r\n                        x: endPoint.x - ARROW_OFFSET,\r\n                        y: endPoint.y,\r\n                        position: endPoint.position\r\n                    };\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            break;\r\n        case 'left':\r\n            switch (transitionLayout.end.position) {\r\n                case 'top':\r\n                    mainPoints = MainPoints.createLeftTopPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    endPoint = {\r\n                        x: endPoint.x,\r\n                        y: endPoint.y - ARROW_OFFSET,\r\n                        position: endPoint.position\r\n                    };\r\n                    break;\r\n                case 'bottom':\r\n                    mainPoints = MainPoints.createLeftBottomPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    endPoint = {\r\n                        x: endPoint.x,\r\n                        y: endPoint.y + ARROW_OFFSET,\r\n                        position: endPoint.position\r\n                    };\r\n                    break;\r\n                case 'left':\r\n                    mainPoints = MainPoints.createLeftLeftPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    endPoint = {\r\n                        x: endPoint.x - ARROW_OFFSET,\r\n                        y: endPoint.y,\r\n                        position: endPoint.position\r\n                    };\r\n                    break;\r\n                case 'right':\r\n                    mainPoints = MainPoints.createLeftRightPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    endPoint = {\r\n                        x: endPoint.x + ARROW_OFFSET,\r\n                        y: endPoint.y,\r\n                        position: endPoint.position\r\n                    };\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            break;\r\n        case 'top':\r\n            switch (transitionLayout.end.position) {\r\n                case 'top':\r\n                    mainPoints = MainPoints.createTopTopPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    endPoint = {\r\n                        x: endPoint.x,\r\n                        y: endPoint.y - ARROW_OFFSET,\r\n                        position: endPoint.position\r\n                    };\r\n                    break;\r\n                case 'left':\r\n                    mainPoints = MainPoints.createTopLeftPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    endPoint = {\r\n                        x: endPoint.x - ARROW_OFFSET,\r\n                        y: endPoint.y,\r\n                        position: endPoint.position\r\n                    };\r\n                    break;\r\n                case 'bottom':\r\n                    mainPoints = MainPoints.createTopBottomPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    endPoint = {\r\n                        x: endPoint.x,\r\n                        y: endPoint.y + ARROW_OFFSET,\r\n                        position: endPoint.position\r\n                    };\r\n                    break;\r\n                case 'right':\r\n                    mainPoints = MainPoints.createTopRightPoints(startStepLayout, endStepLayout, startPoint, endPoint);\r\n                    points = _.concat(points, mainPoints);\r\n                    endPoint = {\r\n                        x: endPoint.x + ARROW_OFFSET,\r\n                        y: endPoint.y,\r\n                        position: endPoint.position\r\n                    };\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    points.push(endPoint);\r\n    return points;\r\n};\r\n\r\nconst calculateTypesPoints = (transitionPoints, types, position) => {\r\n    let typesPoints = [];\r\n\r\n    let maxLength = Math.max(..._.map(types, type => type.length));\r\n\r\n    let sign;\r\n    let offset;\r\n\r\n    if (position === 'left' || position === 'right') {\r\n        if (position === 'left') {\r\n            offset = -TYPE_FONT_WIDTH * maxLength;\r\n        } else {\r\n            offset = TYPE_FONT_WIDTH\r\n        }\r\n\r\n        if (transitionPoints.length === 2 || transitionPoints[0].y < transitionPoints[2].y) {\r\n            for (let i = 0; i < types.length; i++) {\r\n                typesPoints.push({\r\n                    x: transitionPoints[0].x + offset,\r\n                    y: transitionPoints[0].y - LINE_HEIGHT / 2 - i * LINE_HEIGHT\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < types.length; i++) {\r\n                typesPoints.push({\r\n                    x: transitionPoints[0].x + offset,\r\n                    y: transitionPoints[0].y + LINE_HEIGHT + i * LINE_HEIGHT\r\n                });\r\n            }\r\n        }\r\n    } else if (position === 'top' || position === 'bottom') {\r\n        if (position === 'top') {\r\n            sign = -1;\r\n        } else {\r\n            sign = 1;\r\n        }\r\n\r\n        if (transitionPoints.length === 2 || transitionPoints[0].x > transitionPoints[2].x) {\r\n            for (let i = 0; i < types.length; i++) {\r\n                typesPoints.push({\r\n                    x: transitionPoints[0].x + TYPE_FONT_WIDTH,\r\n                    y: transitionPoints[0].y + sign * LINE_HEIGHT * (i + 1)\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < types.length; i++) {\r\n                typesPoints.push({\r\n                    x: transitionPoints[0].x - TYPE_FONT_WIDTH * (maxLength + 0.5),\r\n                    y: transitionPoints[0].y + sign * LINE_HEIGHT * (i + 1)\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return typesPoints;\r\n};\r\n\r\nconst calculateIconsPoints = (transitionPoints, icons, types, position) => {\r\n    let points = [];\r\n\r\n    let iconSizeX = ICON_SIZE;\r\n    let createReportTextOffsetX;\r\n    let createReportTextOffsetY;\r\n    let maxLength = types.length !== 0 ? Math.max(..._.map(types, type => type.length)) : 0;\r\n\r\n    let step;\r\n    let sign;\r\n    let offset;\r\n\r\n    if (position === 'right' || position === 'left') {\r\n        if (position === 'right') {\r\n            step = 0;\r\n            sign = 1;\r\n            offset = 0;\r\n        } else {\r\n            step = 1;\r\n            sign = -1;\r\n            offset = iconSizeX;\r\n        }\r\n\r\n        if (Math.abs(transitionPoints[0].x - transitionPoints[1].x) > (iconSizeX + 2 * CREATE_REPORT_TYPE_OFFSET) * icons.length + RECT_OFFSET * (icons.length + 1)) {\r\n            if (transitionPoints.length === 2 || (transitionPoints.length > 2 && transitionPoints[2].y > transitionPoints[0].y)) {\r\n                for (let i = 0; i < icons.length; i++) {\r\n                    createReportTextOffsetX = icons[i].name.startsWith('create_report') && icons[i].caption.length > MIN_ICON_TEXT_LENGTH_TO_SET_OFFSET ? CREATE_REPORT_TYPE_OFFSET : 0;\r\n                    points.push({\r\n                        x: transitionPoints[0].x + sign * (iconSizeX + createReportTextOffsetX + RECT_OFFSET) * (i + step) + sign * RECT_OFFSET,\r\n                        y: transitionPoints[0].y + RECT_OFFSET\r\n                    });\r\n                }\r\n            } else {\r\n                for (let i = 0; i < icons.length; i++) {\r\n                    createReportTextOffsetX = icons[i].name.startsWith('create_report') && icons[i].caption.length > MIN_ICON_TEXT_LENGTH_TO_SET_OFFSET ? CREATE_REPORT_TYPE_OFFSET : 0;\r\n                    createReportTextOffsetY = icons[i].name.startsWith('create_report') && icons[i].caption.length > 0 ? CREATE_REPORT_TYPE_OFFSET : 0;\r\n                    points.push({\r\n                        x: transitionPoints[0].x + sign * (iconSizeX + RECT_OFFSET) * (i + step) + RECT_OFFSET + 2 * sign * createReportTextOffsetX,\r\n                        y: transitionPoints[0].y - iconSizeX - RECT_OFFSET - createReportTextOffsetY\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            if (transitionPoints.length === 2 || (transitionPoints.length > 2 && transitionPoints[2].y > transitionPoints[0].y)) {\r\n                for (let i = 0; i < icons.length; i++) {\r\n                    createReportTextOffsetX = icons[i].name.startsWith('create_report') && icons[i].caption.length > MIN_ICON_TEXT_LENGTH_TO_SET_OFFSET ? CREATE_REPORT_TYPE_OFFSET : 0;\r\n                    createReportTextOffsetY = icons[i].name.startsWith('create_report') && icons[i].caption.length > 0 ? CREATE_REPORT_TYPE_OFFSET : 0;\r\n                    points.push({\r\n                        x: transitionPoints[0].x + sign * 2 * RECT_OFFSET + sign * TYPE_FONT_WIDTH * maxLength + sign * (offset + createReportTextOffsetX),\r\n                        y: transitionPoints[0].y - (i + 1) * (iconSizeX + RECT_OFFSET + createReportTextOffsetY)\r\n                    });\r\n                }\r\n            } else {\r\n                for (let i = 0; i < icons.length; i++) {\r\n                    createReportTextOffsetX = icons[i].name.startsWith('create_report') && icons[i].caption.length > MIN_ICON_TEXT_LENGTH_TO_SET_OFFSET ? CREATE_REPORT_TYPE_OFFSET : 0;\r\n                    points.push({\r\n                        x: transitionPoints[0].x + sign * 2 * RECT_OFFSET + sign * TYPE_FONT_WIDTH * maxLength + sign * (offset + createReportTextOffsetX),\r\n                        y: transitionPoints[0].y + i * (iconSizeX + RECT_OFFSET) + RECT_OFFSET\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    } else if (position === 'bottom' || position === 'top') {\r\n        if (position === 'bottom') {\r\n            sign = 1;\r\n            offset = 0;\r\n        } else {\r\n            sign = -1;\r\n            offset = iconSizeX\r\n        }\r\n\r\n        if (Math.abs(transitionPoints[0].y - transitionPoints[1].y) > iconSizeX + 2 * RECT_OFFSET) {\r\n            if (transitionPoints.length === 2 || (transitionPoints.length > 2 && transitionPoints[0].x > transitionPoints[2].x)) {\r\n                for (let i = 0; i < icons.length; i++) {\r\n                    createReportTextOffsetX = icons[i].name.startsWith('create_report') && icons[i].caption.length > MIN_ICON_TEXT_LENGTH_TO_SET_OFFSET ? CREATE_REPORT_TYPE_OFFSET : 0;\r\n                    createReportTextOffsetY = icons[i].name.startsWith('create_report') && icons[i].innerText.length === 0 && position === 'top' ? CREATE_REPORT_TYPE_OFFSET : 0;\r\n                    points.push({\r\n                        x: transitionPoints[0].x - (i + 1) * (iconSizeX + RECT_OFFSET) - createReportTextOffsetX - RECT_OFFSET,\r\n                        y: transitionPoints[0].y + sign * RECT_OFFSET + sign * (offset + createReportTextOffsetY)\r\n                    })\r\n                }\r\n            } else {\r\n                for (let i = 0; i < icons.length; i++) {\r\n                    createReportTextOffsetX = icons[i].name.startsWith('create_report') && icons[i].caption.length > MIN_ICON_TEXT_LENGTH_TO_SET_OFFSET ? CREATE_REPORT_TYPE_OFFSET : 0;\r\n                    createReportTextOffsetY = icons[i].name.startsWith('create_report') && icons[i].innerText.length === 0 && position === 'top' ? CREATE_REPORT_TYPE_OFFSET : 0;\r\n                    points.push({\r\n                        x: transitionPoints[0].x + RECT_OFFSET + i * (iconSizeX + RECT_OFFSET) + 2 * createReportTextOffsetX,\r\n                        y: transitionPoints[0].y + sign * RECT_OFFSET + sign * (offset + createReportTextOffsetY)\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            if (transitionPoints.length === 2 || (transitionPoints.length > 2 && transitionPoints[0].x > transitionPoints[2].x)) {\r\n                for (let i = 0; i < icons.length; i++) {\r\n                    createReportTextOffsetX = icons[i].name.startsWith('create_report') && icons[i].caption.length > MIN_ICON_TEXT_LENGTH_TO_SET_OFFSET ? CREATE_REPORT_TYPE_OFFSET : 0;\r\n                    createReportTextOffsetY = icons[i].name.startsWith('create_report') && icons[i].innerText.length === 0 && position === 'top' ? CREATE_REPORT_TYPE_OFFSET : 0;\r\n                    points.push({\r\n                        x: transitionPoints[0].x + i * (iconSizeX + RECT_OFFSET) + RECT_OFFSET + TYPE_FONT_WIDTH * maxLength + 2 * createReportTextOffsetX,\r\n                        y: transitionPoints[0].y + sign * RECT_OFFSET + sign * (offset + createReportTextOffsetY)\r\n                    });\r\n                }\r\n            } else {\r\n                for (let i = 0; i < icons.length; i++) {\r\n                    createReportTextOffsetX = icons[i].name.startsWith('create_report') && icons[i].caption.length > MIN_ICON_TEXT_LENGTH_TO_SET_OFFSET ? CREATE_REPORT_TYPE_OFFSET : 0;\r\n                    createReportTextOffsetY = icons[i].name.startsWith('create_report') && icons[i].innerText.length === 0 && position === 'top' ? CREATE_REPORT_TYPE_OFFSET : 0;\r\n                    points.push({\r\n                        x: transitionPoints[0].x - (i + 1) * (iconSizeX + RECT_OFFSET) - TYPE_FONT_WIDTH * maxLength - 2 * RECT_OFFSET - createReportTextOffsetX,\r\n                        y: transitionPoints[0].y + sign * RECT_OFFSET + sign * (offset + createReportTextOffsetY)\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return points;\r\n};\r\n\r\nexport const mapStateToProps = (state, {id, types, icons}) => {\r\n    let transition = state.transitions[id];\r\n    let transitionLayout = state.transitionsLayout[id];\r\n    let typesToDisplay = _.chain(types).filter(type => type !== 'out').map(type => typeLabels[type]).value();\r\n    let points = calculateTransitionPoints(state.stepsLayout[transition.startStepId], state.stepsLayout[transition.endStepId], transitionLayout);\r\n    let translatedTypes = [];\r\n    let translate = getTranslate(state.localize);\r\n    if (typesToDisplay.length) {\r\n        translatedTypes = typesToDisplay.map(type => translate(translatedTransitionTypes[type]));\r\n    }\r\n    //console.log('icons',icons);\r\n    return {\r\n        points: points,\r\n        className: getArrowLineType(transition.startStepId, transition.endStepId),\r\n        start: calculateTransitionPoint(state.stepsLayout[transition.startStepId], transitionLayout.start.position),\r\n        end: calculateTransitionPoint(state.stepsLayout[transition.endStepId], transitionLayout.end.position),\r\n        arrowType: transitionLayout.end.position,\r\n        selected: transition.selected,\r\n        intersected: transition.intersected,\r\n        focused: transition.selected && !_.isNil(getFocusedArea(state)) && getFocusedArea(state) === DRAWING_AREA,\r\n        scale: getScale(state),\r\n        svgPosition: getSvgPosition(state),\r\n        highlighted: transition.highlighted || isTransitionHighlighted(state, id),\r\n        disabled: isTransitionDisabled(state, id),\r\n        types: typesToDisplay,\r\n        typesPoints: calculateTypesPoints(points, translatedTypes, transitionLayout.start.position),\r\n        icons: icons,\r\n        iconsPoints: calculateIconsPoints(points, icons, translatedTypes, transitionLayout.start.position),\r\n        showTransitionInfo: isTransitionsInfoShown(state),\r\n        translate\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, {id}) => {\r\n    return {\r\n        onTransitionSelect: () => {\r\n            dispatch(selectTransition(id));\r\n            dispatch(selectStep(null));\r\n            dispatch(selectDrawingArea(null));\r\n        },\r\n        onStartTransitionPointUpdate: (coordinates, pointType) => {\r\n            if (pointType === 'start') {\r\n                dispatch(setUpdatingTransitionStartPointType());\r\n            } else {\r\n                dispatch(setUpdatingTransitionEndPointType());\r\n            }\r\n            dispatch(startTransitionPointUpdate(coordinates, id, pointType));\r\n        },\r\n        onTransitionHighlight: () => {\r\n            dispatch(highlightElement(id, 'transition'));\r\n        },\r\n        onTransitionHighlightReset: () => {\r\n            dispatch(highlightElement(null));\r\n        },\r\n        onRemoveTransition: () => {\r\n            dispatch(applyChange(new RemoveTransitionChange(id)));\r\n            dispatch(selectTransition(null));\r\n            dispatch(selectDrawingArea(true));\r\n            dispatch(setFocusOnGlobalArea(DRAWING_AREA));\r\n        },\r\n        onArrowKeyDown: (direction, ctrlKey) => {\r\n            if (direction === 'right' || direction === 'left') {\r\n                if (ctrlKey) {\r\n                    dispatch(moveToAnotherTransitionToSameStep(direction));\r\n                } else {\r\n                    dispatch(moveToAnotherTransitionFromSameStep(direction));\r\n                }\r\n            } else {\r\n                dispatch(selectAnotherElement(direction));\r\n            }\r\n        },\r\n        onInsertStep: (type, position) => {\r\n            let stepId = uuidv4();\r\n            let newTransitionId = uuidv4();\r\n            dispatch(dropStepIntoTransition(stepId, type, position, id, newTransitionId));\r\n            dispatch(selectDrawingArea(true));\r\n            dispatch(selectStep(stepId));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Transition)","import {handleActions, createAction} from 'redux-actions';\r\n\r\n//- Actions\r\nexport const copyTransition = createAction(\"TRANSITION_COPY\", transition => transition);\r\n\r\n//- State\r\nconst initialState = {};\r\n\r\n//- Reducers\r\nexport default handleActions({\r\n    TRANSITION_COPY: (state, action) => {\r\n        return {...action.payload};\r\n    }\r\n}, initialState);\r\n\r\n//- Selectors\r\nexport const getTransitionCopy = state => state.transitionCopy;","import {Change} from './Change';\r\nimport _ from 'lodash';\r\n\r\nexport class ChangeTransitionPosition extends Change {\r\n    constructor(tempTransition, transition, transitionLayout) {\r\n        super('Change transition position');\r\n        this.tempTransition = tempTransition;\r\n\r\n        this.baseTransition = transition;\r\n        this.transitionLayout = transitionLayout;\r\n    }\r\n\r\n    applyTransitionPositionChange(transitions) {\r\n        if (!_.isUndefined(this.tempTransition.start) && !_.isUndefined(this.tempTransition.end)) {\r\n            return {\r\n                ...transitions, [this.tempTransition.id]: {\r\n                    id: this.tempTransition.id,\r\n                    startStepId: this.tempTransition.start.stepId,\r\n                    endStepId: this.tempTransition.end.stepId,\r\n                    selected: false,\r\n                    highlighted: false,\r\n                    intersected: false\r\n                }\r\n            }\r\n        } else {\r\n            return transitions\r\n        }\r\n    }\r\n\r\n    revertTransitionPositionChange(transitions) {\r\n        return {\r\n            ...transitions, [this.tempTransition.id]: {...this.baseTransition}\r\n        }\r\n    }\r\n\r\n    applyTransitionLayoutPositionChange(transitions) {\r\n        if (_.isNil(this.tempTransition)) {\r\n            return transitions;\r\n        }\r\n        if (!_.isUndefined(this.tempTransition.start) && !_.isUndefined(this.tempTransition.end)) {\r\n            return {\r\n                ...transitions, [this.tempTransition.id]: {\r\n                    start: {position: this.tempTransition.start.position},\r\n                    end: {position: this.tempTransition.end.position},\r\n                }\r\n            }\r\n        } else {\r\n            return transitions\r\n        }\r\n    }\r\n\r\n    revertTransitionLayoutPositionChange(transitions) {\r\n        return {\r\n            ...transitions, [this.tempTransition.id]: {...this.transitionLayout}\r\n        };\r\n    }\r\n\r\n}","import {Change} from './Change';\r\nimport _ from 'lodash';\r\nimport {availableTransitionsByStepType, postProcessingOptionsByStartStepType} from \"../../api/processPlanConversion\";\r\n\r\nexport class AddTransitionChange extends Change {\r\n    constructor(tempTransition) {\r\n        super('Add transition');\r\n        this.tempTransition = tempTransition;\r\n    }\r\n\r\n    applyAddTransition(transitions) {\r\n        this.transitions = transitions;\r\n        return {\r\n            ...transitions, [this.tempTransition.id]: {\r\n                id: this.tempTransition.id,\r\n                startStepId: this.tempTransition.start.stepId,\r\n                endStepId: this.tempTransition.end.stepId,\r\n                selected: false,\r\n                highlighted: false,\r\n                intersected: false\r\n            }\r\n        }\r\n    }\r\n\r\n    revertAddTransition(transitions) {\r\n        this.transitions = _.omit(transitions, [this.tempTransition.id]);\r\n        return this.transitions;\r\n    }\r\n\r\n    applyAddTransitionLayout(transitions) {\r\n        if (_.isNil(this.tempTransition)) {\r\n            return transitions;\r\n        }\r\n        return {\r\n            ...transitions, [this.tempTransition.id]: {\r\n                start: {position: this.tempTransition.start.position},\r\n                end: {position: this.tempTransition.end.position},\r\n            }\r\n        }\r\n    }\r\n\r\n    revertAddTransitionLayout(transitionsLayout) {\r\n        return _.omit(transitionsLayout, [this.tempTransition.id]);\r\n    }\r\n\r\n    applyAddTransitionProperties(transitionProperties) {\r\n        if (_.isNil(this.tempTransition)) {\r\n            return transitionProperties;\r\n        }\r\n        let properties = [...transitionProperties];\r\n        if (this.tempTransition.start.stepId === 'start') {\r\n            properties.push({transitionId: this.tempTransition.id, name: 'types', value: ['out']});\r\n        } else {\r\n            let availableTypes = availableTransitionsByStepType[this.tempTransition.start.type];\r\n            _.forEach(this.transitions, transition => {\r\n                if (transition.startStepId === this.tempTransition.start.stepId) {\r\n                    let checkedTransitionValues = _.find(properties, property => property.transitionId === transition.id).value;\r\n                    availableTypes = _.difference(availableTypes, checkedTransitionValues);\r\n                }\r\n            });\r\n\r\n            properties.push({\r\n                transitionId: this.tempTransition.id,\r\n                name: 'types',\r\n                value: availableTypes\r\n            });\r\n        }\r\n\r\n        _.forEach(postProcessingOptionsByStartStepType[this.tempTransition.start.type], option => {\r\n            switch (option) {\r\n                case 'certify':\r\n                    properties.push({transitionId: this.tempTransition.id, name: 'certify', value: false});\r\n                    break;\r\n                case 'create_report':\r\n                    properties.push({\r\n                        transitionId: this.tempTransition.id,\r\n                        name: 'create_report',\r\n                        value: {checked: false, values: []}\r\n                    });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        return properties;\r\n    }\r\n\r\n    revertAddTransitionProperties(transitionProperties) {\r\n        return _.filter(transitionProperties, transitionProperty => transitionProperty.transitionId !== this.tempTransition.id);\r\n    }\r\n}\r\n","import {Change} from './Change';\r\nimport _ from 'lodash';\r\n\r\nexport class AddConnection extends Change {\r\n    constructor(tempTransition) {\r\n        super('Add connection');\r\n        this.tempTransition = tempTransition;\r\n    }\r\n\r\n    applyAddTransitionConnectionLayout(transitions) {\r\n        if (_.filter(transitions, transition => transition.startStepId === this.tempTransition.start.stepId).length){\r\n            return _.map(transitions, connectionLayout => connectionLayout.startStepId === this.tempTransition.start.stepId ?\r\n                {...connectionLayout, endStepId: this.tempTransition.end.stepId,  endPosition: this.tempTransition.end.position} : connectionLayout);\r\n        }else{\r\n           return  _.concat(transitions, {startStepId: this.tempTransition.start.stepId,endStepId: this.tempTransition.end.stepId,  endPosition: this.tempTransition.end.position});\r\n        }\r\n    }\r\n    revertAddTransitionConnectionLayout(transitions) {\r\n        return _.omitBy(transitions, connectionLayout => connectionLayout.startStepId === this.tempTransition.start.stepId);\r\n    }\r\n\r\n    applyAddConnectedStepProperty(properties){\r\n        this.properties = properties;\r\n        return _.map(properties, property => property.stepId === this.tempTransition.start.stepId && property.name === 'step_id' ? {\r\n            ...property,\r\n            value: this.tempTransition.end.stepId\r\n        } : property);\r\n    }\r\n    revertAddConnectedStepProperty(properties){\r\n        return this.properties ;\r\n    }\r\n}","import {Change} from './Change';\r\nimport _ from 'lodash';\r\n\r\nexport class ChangeConnectionPosition extends Change {\r\n    constructor(tempTransition) {\r\n        super('Change connection position');\r\n        this.tempTransition = tempTransition;\r\n        this.connectedLayout = null;\r\n        this.properties= null;\r\n    }\r\n\r\n    applyConnectionLayoutPositionChange(transitions) {\r\n        this.connectedLayout = transitions;\r\n        return _.map(transitions, connectionLayout => connectionLayout.startStepId === this.tempTransition.start.stepId ?\r\n            {...connectionLayout, endStepId: this.tempTransition.end.stepId,  endPosition: this.tempTransition.end.position} : connectionLayout);\r\n\r\n    }\r\n    revertConnectionLayoutPositionChange(transitions) {\r\n        return this.connectedLayout;\r\n    }\r\n\r\n    applyChangeConnectedStepProperty (properties){\r\n        this.properties = properties;\r\n        return _.map(properties, property => property.stepId === this.tempTransition.start.stepId && property.name === 'step_id' ? {\r\n            ...property,\r\n            value: this.tempTransition.end.stepId\r\n        } : property);\r\n    }\r\n    revertChangeConnectedStepProperty(properties){\r\n        return this.properties ;\r\n    }\r\n}","import {handleActions} from 'redux-actions';\r\nimport _ from 'lodash';\r\n\r\n//- State\r\nconst initialState = {};\r\n\r\n//- Reducers\r\nexport default handleActions({\r\n    PROCESS_PLAN_LOAD: (state, action) => {\r\n        return _.chain(action.payload.stepProperties)\r\n            .filter(property => property.name === 'step_id')\r\n            .map(property => ({startStepId: property.stepId, endStepId: property.value}))\r\n            .map(connection => ({\r\n                ...connection,\r\n                endPosition: null}))\r\n            .value();\r\n    },\r\n    CHANGE_APPLY: (state, {payload: change} ) => {\r\n        switch(change.description) {\r\n            case 'Remove step':\r\n                return change.applyRemoveStepConnectionLayout(state);\r\n            case 'Add step':\r\n                return change.applyAddStepConnectionLayout(state);\r\n            case 'Add connection':\r\n                return change.applyAddTransitionConnectionLayout(state);\r\n            case 'Change connection position':\r\n                return change.applyConnectionLayoutPositionChange(state);\r\n            case 'Remove connection':\r\n                return change.applyRemoveConnection(state);\r\n            case 'Insert new step into transition':\r\n                return change.applyInsertStepConnectionLayout(state);\r\n            case 'Generate auto layout':\r\n                return change.applyLayoutAutoGenerationForConnections(state);\r\n            case 'Change step property':\r\n                return change.applyUpdateConnection(state);\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    CHANGE_REVERT: (state, {payload: change} ) => {\r\n        switch(change.description) {\r\n            case 'Remove step':\r\n                return change.revertRemoveStepConnectionLayout(state);\r\n            case 'Add step':\r\n                return change.revertAddStepConnectionLayout(state);\r\n            case 'Add connection':\r\n                return change.revertAddTransitionConnectionLayout(state);\r\n            case 'Change connection position':\r\n                return change.revertConnectionLayoutPositionChange(state);\r\n            case 'Remove connection':\r\n                return change.revertRemoveConnection(state);\r\n            case 'Insert new step into transition':\r\n                return change.revertInsertStepConnectionLayout(state);\r\n            case 'Generate auto layout':\r\n                return change.revertLayoutAutoGenerationForConnections(state);\r\n            case 'Change step property':\r\n                return change.revertUpdateConnection(state);\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n}, initialState);\r\n\r\n//- Selectors\r\nexport const getConnectionsLayout = state => state.connectionsLayout;\r\n\r\nexport const getConnectionLayout = (state, connection) =>\r\n    _.find(getConnectionsLayout(state), connectionLayout => connection.startStepId === connectionLayout.startStepId && connection.endStepId === connectionLayout.endStepId);\r\n\r\nexport const getConnectionEndPosition = (state, connection) => {\r\n    let connectionLayout = getConnectionLayout(state, connection);\r\n    return _.isNil(connectionLayout)? null: connectionLayout.endPosition;\r\n};\r\n\r\nexport const isLeftTopAngleVisible = (state, stepId) => {\r\n    return !_.isUndefined(_.find(getConnectionsLayout(state), (connection) => connection.endStepId === stepId));\r\n};","import {createAction, handleActions} from 'redux-actions';\r\n\r\nimport uuidv4 from 'uuid/v4';\r\nimport _ from 'lodash';\r\nimport {getStepLayoutById, getStepPositionById} from \"./stepsLayout\";\r\nimport {ARROW_OFFSET} from \"../../components/drawingArea/transition/Transition.container\";\r\nimport {getStepTypeById, selectStep} from \"./steps\";\r\nimport {\r\n    CREATING_CONNECTION,\r\n    CREATING_TRANSITION_BY_SHORTCUTS,\r\n    getActionType,\r\n    resetActionType,\r\n    UPDATING_CONNECTION,\r\n    UPDATING_TRANSITION_END_POINT,\r\n    UPDATING_TRANSITION_START_POINT\r\n} from \"./transitionActionType\";\r\nimport {copyTransition, getTransitionCopy} from \"./transitionCopy\";\r\nimport {getTransitionById, getTransitions, selectTransition} from \"./transitions\";\r\nimport {selectDrawingArea} from \"./drawingArea\";\r\nimport {ChangeTransitionPosition} from \"../model/ChangeTransition\";\r\nimport {applyChange} from \"./changeStack\";\r\nimport {AddTransitionChange} from \"../model/AddTransition\";\r\nimport {AddConnection} from \"../model/AddConnection\";\r\nimport {getTransitionLayoutById} from \"./transitionsLayout\";\r\nimport {ChangeConnectionPosition} from \"../model/ChangeConnection\";\r\nimport {RECT_OFFSET} from '../../components/drawingArea/step/Step';\r\nimport {getConnectionEndPosition} from './connectionsLayout';\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const startTransitionCreation = createAction(\"TRANSITION_CREATION_START\", (type, stepId, position, x, y) => ({\r\n    type,\r\n    stepId,\r\n    position,\r\n    x,\r\n    y\r\n}));\r\nexport const updateScaledTempTransitionEndPoint = createAction(\"TEMP_TRANSITION_END_POINT_UPDATE\", (coordinates, scale, translate) => ({\r\n    coordinates,\r\n    scale,\r\n    translate\r\n}));\r\nexport const updateScaledTempTransitionStartPoint = createAction(\"TEMP_TRANSITION_START_POINT_UPDATE\", (coordinates, scale, translate) => ({\r\n    coordinates,\r\n    scale,\r\n    translate\r\n}));\r\nexport const changeTempTransitionEndPointPosition = createAction(\"TEMP_TRANSITION_END_POINT_POSITION_CHANGE\", position => position);\r\nexport const changeTempTransitionStartPointPosition = createAction(\"TEMP_TRANSITION_START_POINT_POSITION_CHANGE\", position => position);\r\nexport const removeTempTransition = createAction(\"TEMP_TRANSITION_REMOVE\");\r\nexport const startTransitionUpdate = createAction(\"TRANSITION_UPDATE_START\", tempTransition => tempTransition);\r\n\r\nexport const startTransitionPointUpdate = (coordinates, id, pointType) => (dispatch, getState) => {\r\n    let transition = getTransitionById(getState(), id);\r\n    let transitionLayout = getTransitionLayoutById(getState(), id);\r\n    let tempTransition = {\r\n        id: id,\r\n        start: {\r\n            x: coordinates.start.x,\r\n            y: coordinates.start.y,\r\n            position: pointType === 'start' ? null : transitionLayout.start.position,\r\n            stepId: transition.startStepId\r\n        },\r\n        end: {\r\n            x: coordinates.end.x,\r\n            y: coordinates.end.y,\r\n            position: pointType === 'end' ? null : transitionLayout.end.position,\r\n            stepId: transition.endStepId\r\n        }\r\n    };\r\n\r\n    let transitionCopy = {\r\n        start: {\r\n            position: transitionLayout.start.position,\r\n            stepId: transition.startStepId\r\n        },\r\n        end: {\r\n            position: transitionLayout.end.position,\r\n            stepId: transition.endStepId\r\n        }\r\n    };\r\n\r\n    dispatch(copyTransition(transitionCopy));\r\n    dispatch(startTransitionUpdate(tempTransition));\r\n};\r\n\r\nexport const startFilePickUpConnectionEndPointUpdate = (coordinates, connection) => (dispatch, getState) => {\r\n    let {startStepId, endStepId} = connection;\r\n    let endStepSize = getStepLayoutById(getState(), endStepId).size;\r\n    let tempTransition = {\r\n        start: {\r\n            stepId: startStepId,\r\n            x: coordinates.start.x,\r\n            y: coordinates.start.y,\r\n            position: coordinates.start.x >= coordinates.end.x + endStepSize.width / 2 + RECT_OFFSET ? 'left' : 'top'\r\n        },\r\n        end: {\r\n            stepId: endStepId,\r\n            x: coordinates.end.x,\r\n            y: coordinates.end.y,\r\n            position: null\r\n        }\r\n    };\r\n\r\n    let transitionCopy = {\r\n        start: {\r\n            stepId: startStepId,\r\n            position: null\r\n        },\r\n        end: {\r\n            stepId: endStepId,\r\n            position: getConnectionEndPosition(getState(), connection) || calculatePosition(coordinates.start.x, coordinates.start.y, coordinates.end.x, coordinates.end.y)\r\n        }\r\n    };\r\n\r\n    dispatch(copyTransition(transitionCopy));\r\n    dispatch(startTransitionUpdate(tempTransition));\r\n};\r\n\r\nexport const updateTempTransitionEndPoint = (coordinates) => (dispatch, getState) => {\r\n    dispatch(updateScaledTempTransitionEndPoint(coordinates, getState().drawingArea.scale, getState().drawingArea.viewportPosition));\r\n};\r\n\r\n\r\nexport const updateTempTransitionStartPoint = (coordinates) => (dispatch, getState) =>\r\n    dispatch(updateScaledTempTransitionStartPoint(coordinates, getState().drawingArea.scale, getState().drawingArea.viewportPosition));\r\n\r\n\r\nexport const endTransitionCreation = (stepId, position) => (dispatch, getState) => {\r\n    if (!transitionCreationStarted(getState())) {\r\n        dispatch(selectDrawingArea(true));\r\n        dispatch(removeTempTransition());\r\n        dispatch(resetActionType());\r\n        return;\r\n    }\r\n    let restoreOldTransition = false;\r\n    let restoreOldConnection = false;\r\n    let actionType = getActionType(getState());\r\n    let tempTransition = {...getTempTransition(getState())};\r\n    let transitionCopy = {...getTransitionCopy(getState())};\r\n\r\n    let transition = getTransitionById(getState(), tempTransition.id);\r\n    let transitionLayout = getTransitionLayoutById(getState(), tempTransition.id);\r\n    if (!_.isUndefined(tempTransition.start)) {\r\n        if (position) {\r\n            actionType === UPDATING_TRANSITION_START_POINT ? tempTransition.start = {\r\n                ...tempTransition.start,\r\n                stepId\r\n            } : tempTransition.end = {...tempTransition.end, stepId};\r\n            actionType === UPDATING_TRANSITION_START_POINT ? tempTransition.start = {\r\n                ...tempTransition.start,\r\n                position\r\n            } : tempTransition.end = {...tempTransition.end, position};\r\n            tempTransition.id = tempTransition.id || (tempTransition.start.stepId === 'start' ? 'out' : uuidv4());\r\n            if (actionType === UPDATING_TRANSITION_END_POINT) { //updating transition end point\r\n                if (tempTransition.start.stepId !== stepId && stepId !== 'start') {\r\n                    dispatch(applyChange(new ChangeTransitionPosition(tempTransition, transition, transitionLayout)));\r\n                } else {\r\n                    restoreOldTransition = true;\r\n                }\r\n                if (actionType !== UPDATING_CONNECTION) {\r\n                    dispatch(selectTransition(tempTransition.id));\r\n                }\r\n            } else if (actionType === UPDATING_TRANSITION_START_POINT) { //updating transition start point\r\n                if (tempTransition.start.stepId === transitionCopy.start.stepId) {\r\n                    dispatch(applyChange(new ChangeTransitionPosition(tempTransition, transition, transitionLayout)));\r\n                    dispatch(selectTransition(tempTransition.id));\r\n                } else {\r\n                    restoreOldTransition = true;\r\n                }\r\n            } else if (tempTransition.start.stepId !== stepId && stepId !== 'start') { //creating connection or transition\r\n                if (actionType === CREATING_CONNECTION) {\r\n                    dispatch(applyChange(new AddConnection(tempTransition)));\r\n                }\r\n                if (actionType !== CREATING_CONNECTION && actionType !== UPDATING_CONNECTION) {\r\n                    dispatch(applyChange(new AddTransitionChange(tempTransition)));\r\n                    dispatch(selectTransition(tempTransition.id));\r\n                }\r\n            }\r\n            if (actionType === UPDATING_CONNECTION) {//updating connection end point\r\n                dispatch(applyChange(new ChangeConnectionPosition(tempTransition)));\r\n            }\r\n        } else if (!_.isNil(tempTransition)) {\r\n            restoreOldTransition = actionType === UPDATING_TRANSITION_START_POINT || actionType === UPDATING_TRANSITION_END_POINT;\r\n            restoreOldConnection = actionType === UPDATING_CONNECTION;\r\n        }\r\n        if (restoreOldConnection) {\r\n            if (!_.isNull(tempTransition.end.position)) {\r\n                restoreOldTransition = restoreOldConnection;\r\n            }\r\n        }\r\n        if (restoreOldTransition) {\r\n            tempTransition.end = {...tempTransition.end, ...transitionCopy.end};\r\n            tempTransition.start = {...tempTransition.start, ...transitionCopy.start};\r\n            dispatch(applyChange(new ChangeTransitionPosition(tempTransition, transition, transitionLayout)));\r\n\r\n            if (actionType !== CREATING_CONNECTION && actionType !== UPDATING_CONNECTION) {\r\n                dispatch(selectTransition(tempTransition.id));\r\n            }\r\n        }\r\n    }\r\n    dispatch(selectDrawingArea(null));\r\n    dispatch(selectStep(null));\r\n    dispatch(removeTempTransition());\r\n    dispatch(resetActionType());\r\n};\r\n\r\nexport const startTempTransition = (stepId, position) => (dispatch, getState) => {\r\n    let stepPosition = getStepPositionById(getState(), stepId);\r\n    if (stepId !== 'start' || (stepId === 'start' && _.isUndefined(_.find(getTransitions(getState()), transition => transition.startStepId === 'start')))) {\r\n        dispatch(startTransitionCreation(getStepTypeById(getState(), stepId), stepId, position, stepPosition.x, stepPosition.y));\r\n    }\r\n};\r\n\r\nexport const continueTransitionCreation = (coordinates) => (dispatch, getState) => {\r\n    let actionType = getActionType(getState());\r\n    if (actionType === UPDATING_TRANSITION_START_POINT) {\r\n        dispatch(updateTempTransitionStartPoint(coordinates));\r\n    } else {\r\n        dispatch(updateTempTransitionEndPoint(coordinates));\r\n    }\r\n};\r\n\r\nexport const changeTransitionPosition = (position) => (dispatch, getState) => {\r\n    let actionType = getActionType(getState());\r\n    if (actionType !== CREATING_TRANSITION_BY_SHORTCUTS) {\r\n        if (actionType === UPDATING_TRANSITION_START_POINT) {\r\n            dispatch(changeTempTransitionStartPointPosition(position));\r\n        } else {\r\n            dispatch(changeTempTransitionEndPointPosition(position));\r\n        }\r\n    }\r\n};\r\n\r\n//- State\r\nconst initialState = {};\r\n\r\n//- Reducers\r\nexport default handleActions({\r\n    TRANSITION_CREATION_START: (state, action) => {\r\n        return {\r\n            start: {\r\n                ...action.payload\r\n            }\r\n        };\r\n    },\r\n    TEMP_TRANSITION_END_POINT_UPDATE: (state, action) => {\r\n        let {coordinates, scale, translate} = action.payload;\r\n        let scaledCoordinates = {\r\n            x: coordinates.x * scale + translate.x,\r\n            y: (coordinates.y) * scale + translate.y\r\n        };\r\n        return {\r\n            ...state,\r\n            end: {\r\n                ...state.end,\r\n                ...scaledCoordinates\r\n            }\r\n        };\r\n    },\r\n    TEMP_TRANSITION_START_POINT_UPDATE: (state, action) => {\r\n        let {coordinates, scale, translate} = action.payload;\r\n        let scaledCoordinates = {\r\n            x: coordinates.x * scale + translate.x,\r\n            y: (coordinates.y) * scale + translate.y\r\n        };\r\n        return {\r\n            ...state,\r\n            start: {\r\n                ...state.start,\r\n                ...scaledCoordinates\r\n            }\r\n        };\r\n    },\r\n    TEMP_TRANSITION_END_POINT_POSITION_CHANGE: (state, action) => {\r\n        if (_.isNil(state.end)) {\r\n            return state;\r\n        }\r\n        return {\r\n            ...state,\r\n            end: {\r\n                ...state.end,\r\n                position: action.payload\r\n            }\r\n        };\r\n    },\r\n    TEMP_TRANSITION_START_POINT_POSITION_CHANGE: (state, action) => {\r\n        if (_.isNil(state.start)) {\r\n            return state;\r\n        }\r\n        return {\r\n            ...state,\r\n            start: {\r\n                ...state.start,\r\n                position: action.payload\r\n            }\r\n        };\r\n    },\r\n    TEMP_TRANSITION_REMOVE: () => {\r\n        return {};\r\n    },\r\n    TRANSITION_UPDATE_START: (state, action) => {\r\n        return action.payload;\r\n    }\r\n}, initialState);\r\n\r\n//- Selectors\r\nexport const getTempTransition = state => state.tempTransition;\r\n\r\nexport const transitionCreationStarted = createSelector(\r\n    getTempTransition,\r\n    tempTransition => !_.isNil(tempTransition.start)\r\n);\r\n\r\nexport const transitionCreationInProgress = createSelector(\r\n    getTempTransition,\r\n    tempTransition => !_.isNil(tempTransition.end)\r\n);\r\n\r\nexport const getTempTransitionEndPointPosition = createSelector(\r\n    getTempTransition,\r\n    tempTransition => tempTransition && tempTransition.end && tempTransition.end.position\r\n);\r\n\r\n//- Utils\r\nexport const calculatePosition = (x1, y1, x2, y2) => {\r\n    if (y2 <= y1 + ARROW_OFFSET / 2 && y2 >= y1 - ARROW_OFFSET / 2) {\r\n        if (x1 > x2) {\r\n            return 'right';\r\n        }\r\n        else {\r\n            return 'left';\r\n        }\r\n    }\r\n    else {\r\n        if (y2 < y1 - ARROW_OFFSET / 2) {\r\n            return 'bottom';\r\n        }\r\n        else if (y2 > y1 + ARROW_OFFSET / 2) {\r\n            return 'top';\r\n        }\r\n    }\r\n};\r\n","import {createAction, handleActions} from 'redux-actions';\r\nimport {createSelector} from 'reselect';\r\nimport _ from 'lodash';\r\n\r\nimport {\r\n    getSelectedTransition, getTransitionIds, getTransitions, getTransitionsByEndStepId,\r\n    getTransitionsByStartStepId,\r\n    selectTransition\r\n} from \"./transitions\";\r\nimport {getMaxStepPositionX, getMaxStepPositionY, getMinStepPositionX, getMinStepPositionY} from \"../../redux/modules/stepsLayout\"\r\nimport {calculateAnchorCoordinatesByPosition, getAllStepIds, selectStep} from \"./steps\";\r\nimport {\r\n    continueTransitionCreation, endTransitionCreation, getTempTransitionEndPointPosition, startTempTransition\r\n} from \"./tempTransition\";\r\nimport {getStepLayoutById, getStepsLayout} from \"./stepsLayout\";\r\nimport {setCreatingTransitionByShortcutsType} from \"./transitionActionType\";\r\nimport {copyTransition, getTransitionCopy} from \"./transitionCopy\";\r\nimport {DRAWING_AREA, setFocusOnGlobalArea} from \"./processPlan\";\r\nimport api from \"../../api\";\r\n\r\nconst NEXT_POSITION = {\r\n    left: 'top',\r\n    top: 'right',\r\n    right: 'bottom',\r\n    bottom: 'left'\r\n};\r\nconst PREVIOUS_POSITION = {\r\n    left: 'bottom',\r\n    bottom: 'right',\r\n    right: 'top',\r\n    top: 'left'\r\n};\r\nconst SCALE_STEP = 0.05;\r\n\r\n//- Actions\r\nexport const selectDrawingArea = createAction(\"DRAWING_AREA_UPDATE_VISUALIZATION\");\r\nexport const toggleTransitionInfo = createAction(\"TRANSITION_INFO_TOGGLE\");\r\nexport const fitTheViewBox = () => (dispatch, getState) => dispatch(fitTheView(getState().stepsLayout));\r\nexport const updateViewportSize = createAction(\"DRAWING_AREA_VIEWPORT_SIZE_UPDATE\", size => size);\r\nexport const updateViewportPosition = createAction(\"DRAWING_AREA_VIEWPORT_POSITION_UPDATE\", position => position);\r\nexport const updateOriginalViewportSize = createAction(\"DRAWING_AREA_ORIGINAL_VIEWPORT_SIZE_UPDATE\", size => size);\r\nexport const updateOriginalViewportPosition = createAction(\"DRAWING_AREA_ORIGINAL_VIEWPORT_POSITION_UPDATE\", position => position);\r\nexport const incrementZoomScale = createAction(\"DRAWING_AREA_ZOOM_SCALE_INCREMENT\", (sign) => sign);\r\nexport const resetToTheBaseViewBox = createAction('DRAWING_AREA_ORIGINAL_VIEWPORT_SIZE_RESET');\r\nexport const fitTheView = createAction('FIT_THE_VIEW', stepsLayout => stepsLayout);\r\nexport const toggleSnapToGrid = createAction('SNAP_TO_GRID_TOGGLE');\r\nexport const changeScreenSize =  createAction('DRAWING_AREA_RESIZE_VIEWPORT_SIZE');\r\n\r\nexport const loadViewSettings = createAction('PROCESS_PLAN_VIEW_SETTINGS_LOAD', () => api.loadSettings());\r\nexport const saveViewSettings = createAction('PROCESS_PLAN_VIEW_SETTINGS_SAVE', settings => api.updateSettings(settings));\r\n\r\nexport const moveToAnotherTransitionFromSameStep = (direction) => (dispatch, getState) => {\r\n    let selectedTransition = getSelectedTransition(getState());\r\n    if (selectedTransition) {\r\n        let allTransitionsIds = _.map(getTransitionsByStartStepId(getState(), selectedTransition.startStepId), transition => transition.id);\r\n        let index = _.findIndex(allTransitionsIds, transitionId => transitionId === selectedTransition.id);\r\n        let sign = direction === 'left' ? 1 : -1;\r\n        dispatch(selectTransition(allTransitionsIds[(index + sign + allTransitionsIds.length) % allTransitionsIds.length]))\r\n    }\r\n};\r\n\r\nexport const moveToAnotherTransitionToSameStep = (direction) => (dispatch, getState) => {\r\n    let selectedTransition = getSelectedTransition(getState());\r\n\r\n    if (selectedTransition) {\r\n        let allTransitionIds = _.map(getTransitionsByEndStepId(getState(), selectedTransition.endStepId), transition => transition.id);\r\n        let index = _.findIndex(allTransitionIds, transitionId => transitionId === selectedTransition.id);\r\n        let sign = direction === 'left' ? 1 : -1;\r\n        dispatch(selectTransition(allTransitionIds[(index + sign + allTransitionIds.length) % allTransitionIds.length]));\r\n    }\r\n};\r\n\r\nexport const selectAnotherElement = (direction) => (dispatch, getState) => {\r\n    let selectedTransition = getSelectedTransition(getState());\r\n    let selectedStepId = getSelectedStepId(getState());\r\n\r\n    if (!_.isNil(selectedTransition)) {\r\n        let stepId = direction === 'bottom' ? selectedTransition.endStepId : selectedTransition.startStepId;\r\n        if (stepId !== 'end') {\r\n            dispatch(selectStep(stepId));\r\n        } else {\r\n            dispatch(setFocusOnGlobalArea(DRAWING_AREA));\r\n        }\r\n        dispatch(selectTransition(null));\r\n    } else if (!_.isNil(selectedStepId)) {\r\n        let allTransitions = direction === 'bottom' ? getTransitionsByStartStepId(getState(), selectedStepId) : getTransitionsByEndStepId(getState(), selectedStepId);\r\n        if (_.keys(allTransitions).length !== 0) {\r\n            dispatch(selectTransition(allTransitions[_.keys(allTransitions)[0]].id));\r\n        } else {\r\n            dispatch(setFocusOnGlobalArea(DRAWING_AREA));\r\n        }\r\n        dispatch(selectStep(null));\r\n    } else {\r\n        let stepsIds = _.filter(getAllStepIds(getState()), id => id !== 'end');\r\n        let transitionsIds = getTransitionIds(getState());\r\n\r\n        if (stepsIds.length !== 0) {\r\n            dispatch(selectStep(stepsIds[0]));\r\n            dispatch(selectDrawingArea(null));\r\n            dispatch(selectTransition(null));\r\n        }\r\n        else if (transitionsIds.length !== 0) {\r\n            dispatch(selectTransition(transitionsIds[0]));\r\n            dispatch(selectDrawingArea(null));\r\n            dispatch(selectStep(null));\r\n        }\r\n    }\r\n};\r\n\r\nexport const startTempTransitionByShortcut = (position, selectedStepId) => (dispatch, getState) => {\r\n    if (selectedStepId) {\r\n        let availableStepsLayout = _.chain(getStepsLayout(getState()))\r\n            .pickBy((layout, stepId) => stepId !== 'start' && stepId !== selectedStepId)\r\n            .mapValues((layout, stepId) => ({...layout, stepId: stepId}))\r\n            .values()\r\n            .value();\r\n\r\n        if (availableStepsLayout.length !== 0) {\r\n            dispatch(startTempTransition(selectedStepId, position));\r\n            dispatch(setCreatingTransitionByShortcutsType());\r\n            dispatch(continueTransitionCreation({position: 'top', ...calculateAnchorCoordinatesByPosition('top', availableStepsLayout[0])}));\r\n            dispatch(copyTransition({\r\n                start: {stepId: selectedStepId},\r\n                end: {stepId: availableStepsLayout[0].stepId, position: 'top'}\r\n            }));\r\n        }\r\n    }\r\n};\r\n\r\nexport const updateTempTransitionByShortcut = (direction) => (dispatch, getState) => {\r\n    let transitionCopy = getTransitionCopy(getState());\r\n\r\n    let availableStepsLayout = _.chain(getStepsLayout(getState()))\r\n        .pickBy((layout, stepId) => stepId !== 'start' && stepId !== transitionCopy.start.stepId)\r\n        .mapValues((layout, stepId) => ({...layout, stepId: stepId}))\r\n        .values()\r\n        .value();\r\n\r\n    let sign = direction === 'left' ? 1 : -1;\r\n\r\n    let index = _.findIndex(availableStepsLayout, layout => layout.stepId === transitionCopy.end.stepId);\r\n    index = (index + sign + availableStepsLayout.length) % availableStepsLayout.length;\r\n\r\n    dispatch(continueTransitionCreation({position: transitionCopy.end.position, ...calculateAnchorCoordinatesByPosition(transitionCopy.end.position, availableStepsLayout[index])}));\r\n\r\n    dispatch(copyTransition({\r\n        start: {stepId: transitionCopy.start.stepId},\r\n        end: {stepId: availableStepsLayout[index].stepId, position: transitionCopy.end.position}\r\n    }));\r\n};\r\n\r\nexport const changeTempTransitionPositionByShortcut = (direction) => (dispatch, getState) => {\r\n    let currentPosition = getTempTransitionEndPointPosition(getState());\r\n\r\n    if (currentPosition) {\r\n        let newPosition = direction === 'bottom' ? NEXT_POSITION[currentPosition] : PREVIOUS_POSITION[currentPosition];\r\n        let endPointStepId = getTransitionCopy(getState()).end.stepId;\r\n        let newPoint = calculateAnchorCoordinatesByPosition(newPosition, getStepLayoutById(getState(), endPointStepId));\r\n\r\n        dispatch(continueTransitionCreation({position: newPosition, ...newPoint}));\r\n\r\n        let transitionCopy = getTransitionCopy(getState());\r\n        dispatch(copyTransition({\r\n            start: {stepId: transitionCopy.start.stepId},\r\n            end: {stepId: transitionCopy.end.stepId, position: newPosition}\r\n        }));\r\n    }\r\n};\r\n\r\nexport const endTransitionCreationByShortcut = () => (dispatch, getState) => {\r\n    let transitionCopy = getTransitionCopy(getState());\r\n\r\n    dispatch(endTransitionCreation(transitionCopy.end.stepId, transitionCopy.end.position));\r\n};\r\n\r\nconst markGroup = (steps, labels, label, stepId) => {\r\n    labels[stepId] = label;\r\n    _.map(steps[stepId], connectedStepId => {\r\n        if (labels[connectedStepId] === 0) {\r\n            labels = markGroup(steps, labels, label, connectedStepId)\r\n        }\r\n    });\r\n    return labels;\r\n};\r\n\r\nexport const moveToAnotherGroup = () => (dispatch, getState) => {\r\n    let selectedStepId = getSelectedStepId(getState());\r\n    let transitions = getTransitions(getState());\r\n    let stepIds = _.filter(getAllStepIds(getState()), stepId => stepId !== 'end');\r\n\r\n    let steps = _.chain(stepIds)\r\n        .map(stepId => [stepId, []])\r\n        .fromPairs()\r\n        .value();\r\n\r\n    if (!_.isNil(selectedStepId)) {\r\n        if (_.isNil(_.find(transitions, transition => transition.startStepId === 'start'))) {\r\n            steps.start = [];\r\n        }\r\n\r\n        let labels = _.chain(steps)\r\n            .map((connection, stepId) => [stepId, 0])\r\n            .fromPairs()\r\n            .value();\r\n\r\n        _.map(transitions, transition => {\r\n            if (transition.endStepId !== 'end') {\r\n                steps[transition.startStepId].push(transition.endStepId);\r\n                steps[transition.endStepId].push(transition.startStepId);\r\n            }\r\n        });\r\n\r\n        let maxLabel = 0;\r\n        _.mapValues(steps, (connection, stepId) => {\r\n            if (labels[stepId] === 0) {\r\n                maxLabel++;\r\n                labels = markGroup(steps, labels, maxLabel, stepId);\r\n            }\r\n        });\r\n\r\n        let currentLabel = labels[selectedStepId];\r\n\r\n        if (maxLabel !== 1) {\r\n            let nextLabel = currentLabel + 1;\r\n            if (nextLabel > maxLabel) {\r\n                nextLabel = 1;\r\n            }\r\n            let nextStepId = _.findKey(labels, label => label === nextLabel);\r\n            dispatch(selectStep(nextStepId));\r\n        }\r\n    } else if (stepIds.length !== 0) {\r\n        dispatch(selectStep(stepIds[0]));\r\n        dispatch(selectTransition(null));\r\n        dispatch(selectDrawingArea(null));\r\n    }\r\n};\r\n\r\n//- State\r\nconst initialState = {\r\n    selected: false,\r\n    scale: 1,\r\n    viewportSize: {\r\n        width: 600,\r\n        height: 500\r\n    },\r\n    originalViewportSize: {\r\n        width: 600,\r\n        height: 500\r\n    },\r\n    originalViewportPosition:{\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    viewportPosition: {\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    showTransitionInfo: false,\r\n    selectedStepId: null,\r\n    snapToGrid: false,\r\n    zoomToFit: false,\r\n    fontSize: 14,\r\n    settingsLoaded: false,\r\n    translations:{}\r\n};\r\n\r\n//- Reducers\r\nexport default handleActions({\r\n    DRAWING_AREA_VIEWPORT_SIZE_UPDATE: (state, action) => {\r\n        return  {\r\n            ...state,\r\n            viewportSize: action.payload,\r\n            zoomToFit: false\r\n        };\r\n    },\r\n    DRAWING_AREA_VIEWPORT_POSITION_UPDATE: (state, action) => {\r\n        return  {\r\n            ...state,\r\n            viewportPosition: action.payload,\r\n            zoomToFit: false\r\n        };\r\n    },\r\n    DRAWING_AREA_ORIGINAL_VIEWPORT_SIZE_UPDATE: (state, action) => {\r\n        return  {\r\n            ...state,\r\n            originalViewportSize: action.payload,\r\n            zoomToFit: false\r\n        };\r\n    },\r\n    DRAWING_AREA_ORIGINAL_VIEWPORT_POSITION_UPDATE: (state, action) => {\r\n        return  {\r\n            ...state,\r\n            originalViewportPosition: action.payload,\r\n            zoomToFit: false\r\n        };\r\n    },\r\n    DRAWING_AREA_ZOOM_SCALE_INCREMENT : (state, action) => {\r\n        let scaleValue = +(state.scale + SCALE_STEP * action.payload).toFixed(2);    // We use '+' to convert string returned by toFixed back to number\r\n        let width = Math.round(state.originalViewportSize.width * scaleValue);\r\n        let height = Math.round(state.originalViewportSize.height * scaleValue);\r\n        if (width !== 0 && height !==0 ) {\r\n            return {\r\n                ...state,\r\n                scale: scaleValue,\r\n                viewportSize: {width, height},\r\n                zoomToFit: false\r\n            };\r\n        } else {\r\n            return {...state};\r\n        }\r\n    },\r\n    DRAWING_AREA_ORIGINAL_VIEWPORT_SIZE_RESET: state => {\r\n        return {\r\n            ...state,\r\n            viewportSize: state.originalViewportSize,\r\n            viewportPosition: {x:0, y:0},\r\n            scale: 1,\r\n            zoomToFit: false\r\n        };\r\n    },\r\n    DRAWING_AREA_RESIZE_VIEWPORT_SIZE: state => {\r\n        return {\r\n            ...state,\r\n            viewportSize: state.originalViewportSize,\r\n            viewportPosition: state.viewportPosition,\r\n            scale: 1,\r\n            zoomToFit: false\r\n        };\r\n    },\r\n    FIT_THE_VIEW: (state, action) => {\r\n        let fittedViewportPosition = {\r\n            x: getMinStepPositionX(action.payload),\r\n            y: getMinStepPositionY(action.payload)\r\n        };\r\n        let fittedViewportSize =  {\r\n            width: Math.round(getMaxStepPositionX(action.payload) - fittedViewportPosition.x),\r\n            height: Math.round(getMaxStepPositionY(action.payload) - fittedViewportPosition.y)\r\n        };\r\n        let scaleValue;\r\n        let scaleValueForWidth = +(fittedViewportSize.width / state.originalViewportSize.width).toFixed(2);\r\n        let scaleValueForHeight = +(fittedViewportSize.height / state.originalViewportSize.height).toFixed(2);\r\n\r\n        if (scaleValueForWidth > scaleValueForHeight) {\r\n            fittedViewportSize.height = Math.round(state.originalViewportSize.height * scaleValueForWidth);\r\n            scaleValue = scaleValueForWidth;\r\n        } else{\r\n            fittedViewportSize.width =  Math.round(state.originalViewportSize.width * scaleValueForHeight);\r\n            scaleValue = scaleValueForHeight;\r\n        }\r\n        return  {\r\n            ...state,\r\n            viewportSize: fittedViewportSize,\r\n            viewportPosition: fittedViewportPosition,\r\n            svgPosition: fittedViewportPosition,\r\n            scale: scaleValue,\r\n            zoomToFit: true\r\n        };\r\n    },\r\n    DRAWING_AREA_UPDATE_VISUALIZATION: (state, action) => {\r\n        return {...state, selected: !_.isNil(action.payload)};\r\n    },\r\n    TRANSITION_INFO_TOGGLE: (state) => {\r\n        return {...state, showTransitionInfo: !state.showTransitionInfo};\r\n    },\r\n    STEP_SELECT: (state, action) => {\r\n        return {...state, selectedStepId: action.payload};\r\n    },\r\n    SNAP_TO_GRID_TOGGLE: (state) => {\r\n        return {...state, snapToGrid: !state.snapToGrid};\r\n    },\r\n    PROCESS_PLAN_VIEW_SETTINGS_LOAD: (state, action) => {\r\n        let {\r\n            fontSize,\r\n            showTransitionInfo,\r\n            snapToGrid,\r\n            zoomFactor,\r\n            zoomToFit,\r\n            translations\r\n        } = action.payload;\r\n        let width = Math.round(state.originalViewportSize.width * zoomFactor);\r\n        let height = Math.round(state.originalViewportSize.height * zoomFactor);\r\n        return {\r\n            ...state,\r\n            fontSize,\r\n            showTransitionInfo,\r\n            snapToGrid,\r\n            scale: zoomFactor,\r\n            zoomToFit,\r\n            viewportSize: {width, height},\r\n            translations\r\n        };\r\n    }\r\n}, initialState);\r\n\r\n//- Selectors\r\nexport const getDrawingArea = state => state.drawingArea;\r\n\r\nexport const getViewSettings = createSelector(\r\n    getDrawingArea,\r\n    drawingArea => ({\r\n        showTransitionInfo: drawingArea.showTransitionInfo,\r\n        snapToGrid: drawingArea.snapToGrid,\r\n        zoomToFit: drawingArea.zoomToFit,\r\n        zoomFactor: drawingArea.scale,\r\n        fontSize: drawingArea.fontSize,\r\n        translations: drawingArea.translations\r\n    })\r\n);\r\n\r\nexport const getScale = createSelector(\r\n    getDrawingArea,\r\n    drawingArea => drawingArea.scale\r\n);\r\n\r\nexport const getSvgPosition = createSelector(\r\n    getDrawingArea,\r\n    drawingArea => drawingArea.viewportPosition\r\n);\r\n\r\nexport const isTransitionsInfoShown = createSelector(\r\n    getDrawingArea,\r\n    drawingArea => drawingArea.showTransitionInfo\r\n);\r\n\r\nexport const getSelectedStepId = createSelector(\r\n    getDrawingArea,\r\n    drawingArea => drawingArea.selectedStepId\r\n);\r\n\r\nexport const getSnapToGrid = createSelector(\r\n    getDrawingArea,\r\n    drawingArea => drawingArea.snapToGrid\r\n);\r\n\r\nexport const isZoomToFitEnabled = createSelector(\r\n    getDrawingArea,\r\n    drawingArea => drawingArea.zoomToFit\r\n);\r\n\r\nexport const areSettingsLoaded = createSelector(\r\n    getDrawingArea,\r\n    drawingArea => drawingArea.settingsLoaded\r\n);\r\n\r\nexport const getTranslations = createSelector(\r\n    getDrawingArea,\r\n    drawingArea => drawingArea.translations\r\n);\r\n\r\n","import {createAction, handleActions} from 'redux-actions';\r\nimport {createSelector} from \"reselect\";\r\nimport {ofType} from 'redux-observable';\r\nimport {from} from 'rxjs';\r\nimport {concatMap, switchMap} from 'rxjs/operators';\r\nimport _ from 'lodash'\r\nimport api from \"../../api\";\r\nimport {getSteps, getStepTypeById} from './steps';\r\nimport {applyChange} from './changeStack';\r\nimport {ChangeStepProperty} from '../model/ChangeStepProperty';\r\nimport {getSelectedStepId} from './drawingArea';\r\nimport {propertiesByStepType} from '../../api/processPlanConversion';\r\nimport {translatedStepTypes} from \"../../dictionary\";\r\nimport {getTranslate} from 'react-localize-redux';\r\n\r\nconst BROKEN_REFERENCE_TO_AVAILABLE_OBJECTS = 'NG_PPE_Broken_reference_to_available_object_long';\r\n\r\nexport const VARIABLE_SCRIPT_DEFAULT_VALUE = '0';\r\n\r\nexport const VariableTypes = {\r\n    VARIABLE: 'variable',\r\n    SCRIPT: 'script',\r\n    QCSCRIPT: 'qcscript'\r\n};\r\n\r\nconst stepTypeToObjectType = {\r\n    'processplan': 'processplans',\r\n    'profile': 'profiles',\r\n    'action': 'actions',\r\n    'variable': 'variables',\r\n    'fixup': 'fixups',\r\n    'check': 'checks',\r\n    'quickcheck': 'variables',\r\n    'addfiles': 'variables'\r\n};\r\n\r\n//- Actions\r\nexport const loadAvailableObjects = createAction(\"AVAILABLE_OBJECTS_LOAD\", () => api.loadObjects());\r\nexport const setAvailableObjects = createAction(\"AVAILABLE_OBJECTS_LOAD\", (objects) => objects);\r\nexport const createExternalObject = createAction(\"AVAILABLE_OBJECTS_CREATE\", (type) => api.createExternalObject(type), (type, onSuccess) => ({onSuccess}));\r\nexport const duplicateExternalObject = createAction(\"AVAILABLE_OBJECTS_DUPLICATE\", (type, id) => api.duplicateExternalObject(type, id), (type, id, onSuccess) => ({onSuccess}));\r\nexport const editExternalObject = createAction(\"AVAILABLE_OBJECTS_EDIT\", (type, id) => api.updateExternalObject(type, id), (type, id, onSuccess) => ({id, onSuccess}));\r\n\r\n//- State\r\nconst initialState = {\r\n    processplans: [],\r\n    profiles: [],\r\n    actions: [],\r\n    variables: [],\r\n    fixups: [],\r\n    checks: [],\r\n    quickchecks: [],\r\n    groups: [],\r\n    reportTemplates: [],\r\n    loaded: false\r\n};\r\n\r\n//- Reducer\r\nexport default handleActions({\r\n    AVAILABLE_OBJECTS_LOAD: (state, action) => {\r\n        return {...action.payload, loaded: true};\r\n    }\r\n}, initialState);\r\n\r\n//- Epics\r\nexport const handleExternalObjectsUpdateEpic = (action$, state$) =>\r\n    action$.pipe(\r\n        ofType(\r\n            createExternalObject.toString(),\r\n            duplicateExternalObject.toString(),\r\n            editExternalObject.toString()\r\n        ),\r\n        switchMap(({payload: newObjectId, meta}) =>\r\n            from(api.loadObjects()).pipe(                      // re-load available objects,\r\n                concatMap((updatedObjects) => {\r\n                    const resultActions = [\r\n                        setAvailableObjects(updatedObjects),   // ... set them to redux state,\r\n                    ];\r\n                    if (!_.isNil(newObjectId)) {               // ... and finally select created object if needed.\r\n                        if (!_.isNil(meta) && _.isFunction(meta.onSuccess)) {\r\n                            resultActions.push(() => meta.onSuccess(_.find(updatedObjects.variables, ['id', newObjectId])));\r\n                        } else {\r\n                            resultActions.push(applyChange(new ChangeStepProperty(getSelectedStepId(state$.value), 'id', newObjectId)));\r\n                        }\r\n                    } else {\r\n                        resultActions.push(() => meta.onSuccess(_.find(updatedObjects.variables, ['id', meta.id])));\r\n                    }\r\n                    return resultActions;\r\n                })\r\n            )\r\n        )\r\n    );\r\n\r\n//- Selectors\r\nexport const getAvailableObjects = state => state.availableObjects;\r\nexport const isAvailableObjectsLoaded = state => getAvailableObjects(state).loaded;\r\n\r\nexport const getAvailableObjectsByStepType = (state, stepType) => {\r\n    let objects = getAvailableObjects(state)[stepTypeToObjectType[stepType]];\r\n    switch (stepType) {\r\n        case 'variable':\r\n        case 'addfiles':\r\n            return _.filter(objects, variable => variable.type !== VariableTypes.QCSCRIPT);\r\n        case 'quickcheck':\r\n            return _.filter(objects, variable => variable.type === VariableTypes.QCSCRIPT);\r\n        default:\r\n            return objects;\r\n    }\r\n};\r\n\r\nexport const getReferencedObjectByStepId = (state, stepId) => {\r\n    let stepProperty = _.find(state.stepProperties, property => property.name === 'id' && property.stepId === stepId);\r\n    let stepType = getStepTypeById(state, stepId);\r\n    return _.find(getAvailableObjectsByStepType(state, stepType), object => object.id === stepProperty.value);\r\n};\r\n\r\nexport const getStepText = (state, stepId) => {\r\n    let translate = getTranslate(state.localize);\r\n    let stepType = getStepTypeById(state, stepId);\r\n    let referencedObject = getReferencedObjectByStepId(state, stepId);\r\n    if (_.isNil(referencedObject)) {\r\n        return translate(translatedStepTypes[stepType]);\r\n    }\r\n    return getObjectText(stepType, referencedObject);\r\n};\r\n\r\nexport const getAvailableObjectOptions = (state, selectedStepType) => {\r\n    return _.map(getAvailableObjectsByStepType(state, selectedStepType), object => ({\r\n        value: object.id,\r\n        label: getObjectText(selectedStepType, object)\r\n    }));\r\n};\r\n\r\nexport const getAvailableStepOptions = (state, selectedStepId) => {\r\n    return _.chain(getSteps(state))\r\n            .omit(selectedStepId)\r\n            .map((step, id) => ({\r\n                label: getStepText(state, id),\r\n                value: id\r\n            }))\r\n            .value();\r\n};\r\n\r\nexport const getStepAvailableObjectReferenceValidationTooltip = (state, stepId) => {\r\n    let translate = getTranslate(state.localize);\r\n    let stepType = getStepTypeById(state, stepId);\r\n    return !_.isNil(stepType)\r\n         && _.includes(propertiesByStepType[stepType], 'id')\r\n         && _.isNil(getReferencedObjectByStepId(state, stepId)) ? [translate(BROKEN_REFERENCE_TO_AVAILABLE_OBJECTS)] : [];\r\n};\r\n\r\nexport const getAvailableGroupOptions = createSelector(\r\n    getAvailableObjects,\r\n    availableObjects => _.map(availableObjects.groups, group => ({label: group.name, value: group.id}))\r\n);\r\n\r\nexport const getAvailableDialogOptions = createSelector(\r\n    getAvailableObjects,\r\n    availableObjects => _.map(availableObjects.dialogs, dialog => ({label: dialog.name, value: dialog.id}))\r\n);\r\n\r\nexport const getVariables = createSelector(\r\n    getAvailableObjects,\r\n    availableObjects => _.filter(availableObjects.variables, variable => variable.type !== VariableTypes.QCSCRIPT)\r\n);\r\n\r\nexport const getVariableById = (state, varId) => _.find(getAvailableObjects(state).variables, ['id', varId]);\r\n\r\nexport const getVariableDisplayText = variable => {\r\n    switch (variable.type) {\r\n        case VariableTypes.VARIABLE:\r\n            return `<${variable.key}:${variable.value}>`;\r\n        case VariableTypes.SCRIPT:\r\n            return `{${variable.key}}`;\r\n        case VariableTypes.QCSCRIPT:\r\n            return `[${variable.key}]`;\r\n        default:\r\n            console.warn(`Unknown variable type ${variable.type}`);\r\n            return variable.key;\r\n    }\r\n};\r\n\r\nexport const getObjectText = (type, object) =>\r\n    _.includes(['variable', 'addfiles', 'quickcheck'], type) ? getVariableDisplayText(object) : object.name;\r\n\r\nexport const getReportTemplatesOptions = createSelector(\r\n    getAvailableObjects,\r\n    availableObjects => _.map(availableObjects.reportTemplates, reportTemplate => ({label: reportTemplate.name, value: reportTemplate.id}))\r\n);\r\nexport const getProcessPlanAvailableObjects = createSelector(\r\n    getAvailableObjects,\r\n    availableObjects => availableObjects.processplans\r\n);\r\n","import {Change} from './Change';\r\nimport _ from 'lodash';\r\n\r\nexport class ChangeTransitionProperty extends Change {\r\n    constructor(transitionId, name, value) {\r\n        super('Change transition property');\r\n        this.transitionId = transitionId;\r\n        this.name = name;\r\n        this.value = value;\r\n\r\n        this.currentValue = null;\r\n    }\r\n\r\n    applyTransitionPropertyChange(transitionProperties) {\r\n        return _.map(transitionProperties, property => {\r\n            if (property.name === this.name && property.transitionId === this.transitionId) {\r\n                this.currentValue = property.value;\r\n                return {...property, value: this.value};\r\n            } else if (this.name === 'pdf_overview_details' && property.name === 'create_report' && property.transitionId === this.transitionId) {\r\n                this.currentValue = property.value;\r\n                let changedValues = _.map({...property.value.values}, value => {\r\n                    if (value.type === 'overview_report') {\r\n                        return {...this.value}\r\n                    } else {\r\n                        return value\r\n                    }\r\n                });\r\n                return {...property, value: {values: changedValues, checked: property.value.checked}};\r\n            } else {\r\n                return {...property};\r\n            }\r\n        });\r\n    }\r\n\r\n    revertTransitionPropertyChange(transitionProperties) {\r\n        return _.map(transitionProperties, property => {\r\n            if (property.name === this.name && property.transitionId === this.transitionId) {\r\n                return {...property, value: this.currentValue};\r\n            } else if (this.name === 'pdf_overview_details' && property.name === 'create_report' && property.transitionId === this.transitionId) {\r\n                return {...property, value: this.currentValue};\r\n            } else {\r\n                return {...property};\r\n            }\r\n        });\r\n    }\r\n}","import {handleActions} from 'redux-actions';\r\nimport _ from 'lodash';\r\nimport {getAvailableObjectOptions, getAvailableStepOptions} from \"./availableObjects\";\r\n\r\nexport const SELECTABLE_PROPERTIES_NUMBER_BY_STEP_PROPERTY_NAME = {\r\n    'checkbox': 1,\r\n    'input': 1,\r\n    'select': 1,\r\n    'variable-input': 1\r\n};\r\n\r\nexport const propertyEditControls = {\r\n    omit_fixups: () => ({\r\n        type: 'variable-checkbox',\r\n        label: 'Do not apply Fixups'\r\n    }),\r\n    id: (state, step) => ({\r\n        type: 'external-object-select',\r\n        label: 'Name',\r\n        options: getAvailableObjectOptions(state, step.type)\r\n    }),\r\n    step_id: (state, step) => ({\r\n        type: 'select',\r\n        label: 'Pick up PDF from',\r\n        options: getAvailableStepOptions(state, step.id)\r\n    }),\r\n    suffix: () => ({\r\n        type: 'variable-input',\r\n        label: 'Suffix'\r\n    }),\r\n    prefix: () => ({\r\n        type: 'variable-input',\r\n        label: 'Prefix'\r\n    }),\r\n    folder: () => ({\r\n        type: 'variable-input',\r\n        label: 'Folder'\r\n    }),\r\n    overwrite_existing_file: () => ({\r\n        type: 'variable-checkbox',\r\n        label: 'Overwrite existing file'\r\n    }),\r\n    replace_file_name: () => ({\r\n        type: 'variable-checkbox',\r\n        label: 'Replace file name with prefix and suffix'\r\n    }),\r\n    enable_step: () => ({\r\n        type: 'variable-checkbox',\r\n        label: 'Enable step'\r\n    }),\r\n};\r\n\r\n//- State\r\nconst initialState = [];\r\n\r\n//- Reducer\r\nexport default handleActions({\r\n    PROCESS_PLAN_LOAD: (state, action) => {\r\n        return action.payload.stepProperties;\r\n    },\r\n    CHANGE_APPLY: (state, {payload: change} ) => {\r\n        switch(change.description) {\r\n            case 'Add step':\r\n                return change.applyAddStepProperty(state);\r\n            case 'Change step property':\r\n                return change.applyStepPropertyChange(state);\r\n            case 'Change transition position':\r\n                return state;\r\n            case 'Remove step':\r\n                return change.applyRemoveStepProperty(state);\r\n            case 'Add connection':\r\n                return change.applyAddConnectedStepProperty(state);\r\n            case 'Change connection position':\r\n                return change.applyChangeConnectedStepProperty(state);\r\n            case 'Remove connection':\r\n                return change.applyRemoveConnectionProperty(state);\r\n            case 'Insert new step into transition':\r\n                return change.applyInsertStepProperty(state);\r\n            case 'Generate auto layout':\r\n                return change.applyProcessPlanLayoutAutoGenerationStepProperties(state);\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    CHANGE_REVERT: (state, {payload: change} ) => {\r\n        switch(change.description) {\r\n            case 'Add step':\r\n                return change.revertAddStepProperty(state);\r\n            case 'Change step property':\r\n                return change.revertStepPropertyChange(state);\r\n            case 'Change transition position':\r\n                return state;\r\n            case 'Remove step':\r\n                return change.revertRemoveStepProperty(state);\r\n            case 'Add connection':\r\n                return change.revertAddConnectedStepProperty(state);\r\n            case 'Change connection position':\r\n                return change.revertChangeConnectedStepProperty(state);\r\n            case 'Remove connection':\r\n                return change.revertRemoveConnectionProperty(state);\r\n            case 'Insert new step into transition':\r\n                return change.revertInsertStepProperty(state);\r\n            case 'Generate auto layout':\r\n                return change.revertProcessPlanLayoutAutoGenerationStepProperties(state);\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n}, initialState);\r\n\r\n//- Selectors\r\nexport const getAllStepProperties = state => state.stepProperties;\r\n\r\nexport const getStepProperties = (state, stepId) => {\r\n    return _.chain(getAllStepProperties(state))\r\n        .filter(property => property.stepId === stepId)\r\n        .map(property => ({\r\n            stepId: stepId,\r\n            name: property.name,\r\n            value: property.value\r\n        }))\r\n        .value();\r\n};\r\n\r\nexport const getStepPropertyByName = (state, stepId, propertyName) =>\r\n    _.find(getStepProperties(state, stepId),property => property.name === propertyName);\r\n\r\nexport const getStepAvailabilityById = (state, stepId) => {\r\n    let enableStepProperty = getStepPropertyByName(state, stepId, 'enable_step');\r\n    return _.isNil(enableStepProperty) ? true : enableStepProperty.value;\r\n};\r\n","import {handleActions} from 'redux-actions';\r\nimport {createSelector} from 'reselect';\r\nimport _ from 'lodash';\r\nimport {\r\n    getAvailableTransitionReports,\r\n    getAvailableTransitionTypes,\r\n    getSelectedTransition,\r\n    getTransitionById,\r\n    getTransitionIds,\r\n    getTransitions,\r\n    getTransitionsByStartStepId,\r\n    getTransitionStartStepId,\r\n    reportsLabels,\r\n} from \"./transitions\";\r\nimport {getVariableDisplayText} from \"./availableObjects\";\r\nimport {ChangeTransitionProperty} from \"../model/ChangeTransitionProperty\";\r\nimport {applyChange} from \"./changeStack\";\r\nimport {getStepAvailabilityById} from './stepProperties';\r\nimport {getTranslate} from 'react-localize-redux';\r\n\r\nconst NO_REPORTS_CHOSEN_FOR_CHECKED_REPORTS_OPTIONS = 'NG_PPE_No_reports_chosen_for_checked_reports_option_long';\r\nconst NO_TYPES_CHOSEN = 'NG_PPE_No_type_chosen_long';\r\n\r\nexport const SELECTABLE_PROPERTIES_NUMBER_BY_TRANSITION_PROPERTY_NAME = {\r\n    'checkbox': 1,\r\n    'checkable-multiselect': 2\r\n};\r\n\r\nexport const propertyEditControls = {\r\n    types: (state, transition) => ({\r\n        type: 'checkbox-group',\r\n        label: 'Transition types',\r\n        options: getAvailableTransitionTypes(state, transition.id),\r\n        selectedOptions: getSelectedOnOtherTransitionsTypes(state, transition)\r\n    }),\r\n    certify: () => ({\r\n        group: 'Post processing',\r\n        type: 'checkbox',\r\n        label: 'Certify PDF'\r\n    }),\r\n    create_report: (state, transition) => ({\r\n        group: 'Post processing',\r\n        type: 'checkable-multiselect',\r\n        label: 'Create report',\r\n        options: [\r\n            {\r\n                label: 'Base Types',\r\n                options: getAvailableTransitionReports(state, transition.id)\r\n            },\r\n            /*{\r\n                label: 'Variables',\r\n                options: getVariables(state).map(\r\n                    variable => ({\r\n                        label: getVariableDisplayText(variable),\r\n                        value: variable.id,\r\n                    })\r\n                )\r\n            }*/\r\n        ]\r\n    })\r\n};\r\n\r\n//- Actions\r\n\r\nexport const updateTransitionTypes = (transitionId, types) => (dispatch, getState) => {\r\n    let startStepId = getTransitionStartStepId(getTransitions(getState()), transitionId);\r\n    let typesProperties = getTransitionPropertiesByNameAndStartStepId(getState(), 'types', startStepId);\r\n\r\n    _.forEach(typesProperties, property => {\r\n        if (property.transitionId !== transitionId) {\r\n            // Uncheck types that are now assigned to new transition from previous\r\n            let value = _.difference(property.value, types);\r\n            if (!_.isEqual(value, property.value)) {\r\n                dispatch(applyChange(new ChangeTransitionProperty(property.transitionId, 'types', value)));\r\n            }\r\n        }\r\n    });\r\n    dispatch(applyChange(new ChangeTransitionProperty(transitionId, 'types', types)));\r\n};\r\n\r\n//- State\r\nconst initialState = [];\r\n\r\n//- Reducer\r\nexport default handleActions({\r\n    PROCESS_PLAN_LOAD: (state, action) => {\r\n        return action.payload.transitionProperties;\r\n    },\r\n    CHANGE_APPLY: (state, {payload: change}) => {\r\n        switch (change.description) {\r\n            case 'Remove transition':\r\n                return change.applyRemoveTransitionProperty(state);\r\n            case 'Add transition':\r\n                return change.applyAddTransitionProperties(state);\r\n            case 'Change transition property':\r\n                return change.applyTransitionPropertyChange(state);\r\n            case 'Remove step':\r\n                return change.applyRemoveTransitionConnectedProperties(state);\r\n            case 'Insert new step into transition':\r\n                return change.applyAddTransitionPropertiesForInsertStep(state);\r\n            case 'Create transitions for insert step':\r\n                return change.applyAddTransitionPropertiesForInsertStep(state);\r\n            case 'Generate auto layout':\r\n                return change.applyLayoutAutoGenerationForTransitionProperties(state);\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    CHANGE_REVERT: (state, {payload: change}) => {\r\n        switch (change.description) {\r\n            case 'Remove transition':\r\n                return change.revertRemoveTransitionProperty(state);\r\n            case 'Add transition':\r\n                return change.revertAddTransitionProperties(state);\r\n            case 'Change transition property':\r\n                return change.revertTransitionPropertyChange(state);\r\n            case 'Remove step':\r\n                return change.revertRemoveTransitionConnectedProperties(state);\r\n            case 'Generate auto layout':\r\n                return change.revertLayoutAutoGenerationForTransitionProperties(state);\r\n            case 'Insert new step into transition':\r\n                return change.revertAddTransitionPropertiesForInsertStep(state);\r\n            case 'Create transitions for insert step':\r\n                return change.revertAddTransitionPropertiesForInsertStep(state);\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n}, initialState);\r\n\r\n//- Selectors\r\nexport const getAllTransitionProperties = state => state.transitionProperties;\r\n\r\nexport const getTransitionProperties = (state, transitionId) => {\r\n    if (transitionId === 'out') {\r\n        return '';\r\n    }\r\n\r\n    return _.chain(getAllTransitionProperties(state))\r\n        .filter(property => property.transitionId === transitionId)\r\n        .map(property => ({\r\n            transitionId: transitionId,\r\n            name: property.name,\r\n            value: property.value\r\n        }))\r\n        .value();\r\n};\r\n\r\nexport const getSelectedTransitionProps = createSelector(\r\n    state => state,\r\n    getSelectedTransition,\r\n    (state, selectedTransition) => _.isNil(selectedTransition) ? [] : getTransitionProperties(state, selectedTransition.id)\r\n);\r\n\r\nexport const getSelectedTransitionPropsWithControlDescriptors = createSelector(\r\n    state => state,\r\n    getSelectedTransition,\r\n    getSelectedTransitionProps,\r\n    (state, transition, selectedTransitionProps) =>\r\n        _.chain(selectedTransitionProps)\r\n            .map(property => ({\r\n                objectId: property.transitionId,\r\n                name: property.name,\r\n                value: property.value,\r\n                disabled: (\r\n                    propertyEditControls[property.name](state, transition).group === \"Post processing\" &&\r\n                    isPostProcessDisabled(state, transition.id)\r\n                ),\r\n                controlDescriptor: propertyEditControls[property.name](state, transition)\r\n            }))\r\n            .groupBy(property => property.controlDescriptor.group)\r\n            .map((properties, groupName) => ({\r\n                name: groupName === 'undefined' ? undefined : groupName,\r\n                properties\r\n            }))\r\n            .value()\r\n);\r\n\r\nexport const getTransitionPropertiesByNameAndTransitionId = (state, name, transitionId) => {\r\n    return _.find(getTransitionProperties(state, transitionId), property => property.name === name);\r\n};\r\n\r\nexport const getTransitionPropertiesByNameAndStartStepId = (state, name, startStepId) => {\r\n    let stepTransitionsIds = _.map(getTransitionsByStartStepId(state, startStepId), transition => transition.id);\r\n    return _.filter(\r\n        getAllTransitionProperties(state),\r\n        property => _.includes(stepTransitionsIds, property.transitionId) && property.name === name\r\n    );\r\n};\r\n\r\nexport const getTransitionTypesByStartStepId = (state, startStepId) => {\r\n    let transitionIds = Object.keys(getTransitionsByStartStepId(state, startStepId));\r\n    return _.chain(state.transitionProperties)\r\n        .filter(property => _.includes(transitionIds, property.transitionId) && property.name === 'types')\r\n        .map(property => property.value)\r\n        .flatten()\r\n        .value();\r\n};\r\n\r\nexport const getAllTransitionTypes = createSelector(\r\n    getAllTransitionProperties,\r\n    allTransitionProperties => _.chain(allTransitionProperties)\r\n        .filter(property => property.name === 'types')\r\n        .map(property => [property.transitionId, property.value])\r\n        .fromPairs()\r\n        .value()\r\n);\r\n\r\nexport const getTransitionIcons = (state, id) => {\r\n    return _.chain(getTransitionProperties(state, id))\r\n        .filter(property => (property.name === 'create_report' && property.value.checked && property.value.values.length !== 0) || (property.name === 'certify' && property.value))\r\n        .map(property => {\r\n            let icon = {};\r\n            if (property.name === 'create_report') {\r\n                icon.name = `create_report${property.value.values.length !== 1 ? 's' : ''}`;\r\n                icon.innerText = '' + (property.value.values.length !== 1 ? property.value.values.length : '');\r\n                icon.caption = '';\r\n                if (property.value.values.length === 1) {\r\n                    let reportType = property.value.values[0].type;\r\n                    icon.caption = _.isString(reportType) ? reportsLabels[reportType] : getVariableDisplayText(reportType);\r\n                }\r\n            } else {\r\n                icon.name = property.name;\r\n                icon.innerText = '';\r\n                icon.caption = '';\r\n            }\r\n            return icon;\r\n        })\r\n        .value();\r\n};\r\n\r\nexport const getAllTransitionIcons = createSelector(\r\n    state => state,\r\n    getTransitionIds,\r\n    (state, transitionIds) => _.chain(transitionIds)\r\n        .map(id => [id, getTransitionIcons(state, id)])\r\n        .fromPairs()\r\n        .value()\r\n);\r\n\r\nexport const getTransitionPropertiesValidationTooltips = (state, id) => {\r\n    let translate = getTranslate(state.localize);\r\n    let validationTooltips = [];\r\n    let allTransitionProperties = getTransitionProperties(state, id);\r\n    let createReportProperty = _.find(allTransitionProperties, property => property.name === 'create_report');\r\n    if (!_.isNil(createReportProperty) && createReportProperty.value.checked && createReportProperty.value.values.length === 0) {\r\n        validationTooltips.push(translate(NO_REPORTS_CHOSEN_FOR_CHECKED_REPORTS_OPTIONS));\r\n    }\r\n\r\n    let typesProperty = _.find(allTransitionProperties, property => property.name === 'types');\r\n    if (!_.isNil(typesProperty) && typesProperty.value.length === 0) {\r\n        validationTooltips.push(translate(NO_TYPES_CHOSEN));\r\n    }\r\n\r\n    return validationTooltips;\r\n};\r\n\r\nexport const getAllTransitionsPropertiesValidationTooltips = createSelector(\r\n    state => state,\r\n    getTransitionIds,\r\n    (state, allTransitionIds) => _.chain(allTransitionIds)\r\n        .map(id => [id, getTransitionPropertiesValidationTooltips(state, id)])\r\n        .fromPairs()\r\n        .value()\r\n);\r\n\r\nexport const getSelectedOnOtherTransitionsTypes = (state, transition) => {\r\n    return _.chain(getTransitionsByStartStepId(state, transition.startStepId))\r\n        .filter(transitionByStartStepId => transitionByStartStepId.id !== transition.id)\r\n        .map(transitionByStartStepId => transitionByStartStepId.id)\r\n        .map(transitionId => getTransitionPropertiesByNameAndTransitionId(state, 'types', transitionId).value)\r\n        .flatten()\r\n        .value();\r\n};\r\n\r\nexport const isTransitionDisabled = (state, id) => {\r\n    let transition = getTransitionById(state, id);\r\n    let stepAvailability = getStepAvailabilityById(state, transition.startStepId);\r\n    let transitionEventTypes = getTransitionPropertiesByNameAndTransitionId(state, 'types', id);\r\n    if (_.isNil(transitionEventTypes)) {\r\n        return false;\r\n    }\r\n\r\n    if (stepAvailability === true) {\r\n        // Step enabled, disable transition if it has only 'is_disabled' type or none\r\n        return _.without(transitionEventTypes.value, 'if_disabled').length === 0;\r\n    } else if (stepAvailability === false) {\r\n        // Step disabled, disable transition if it doesn't have 'if_disabled' type\r\n        return !_.includes(transitionEventTypes.value, 'if_disabled');\r\n    }\r\n    return false;\r\n};\r\n\r\nexport const isPostProcessDisabled = (state, id) => {\r\n    let transitionEventTypes = getTransitionPropertiesByNameAndTransitionId(state, 'types', id);\r\n    return _.isNil(transitionEventTypes) ? false : _.without(transitionEventTypes.value, 'if_disabled').length === 0;\r\n};\r\n\r\nexport const getOverviewReportValues = (state, name, id) => {\r\n    let reportValues = getTransitionPropertiesByNameAndTransitionId(state, name, id).value.values;\r\n    return _.find(reportValues, reportValue => reportValue.type === 'overview_report')\r\n};","import _ from 'lodash';\r\nimport uuidv4 from 'uuid/v4';\r\nimport {getAllStepsValidationTooltips, getStepTypeById} from \"../redux/modules/steps\";\r\nimport {getAllTransitionsPropertiesValidationTooltips} from \"../redux/modules/transitionProperties\";\r\nimport {getProcessPlanNameValidationTooltip} from \"../redux/modules/processPlan\";\r\n\r\nconst ON_ERROR = \"on_error\";\r\nconst ON_SUCCESS = \"on_success\";\r\nconst ON_WARNING = \"on_warning\";\r\nconst ON_FAILURE = \"on_failure\";\r\nconst ON_INFO = \"on_info\";\r\nconst ON_HIT = \"on_hit\";\r\nconst ELSE = \"else\";\r\nconst OUT = \"out\";\r\nconst IF_DISABLED = \"if_disabled\";\r\n\r\nexport const STEP_TYPES = {\r\n    PROCESS_PLAN: 'processplan',\r\n    PROFILE: 'profile',\r\n    VARIABLE: 'variable',\r\n    CHECK: 'check',\r\n    ACTION: 'action',\r\n    FIXUP: 'fixup',\r\n    PDF_COPY: 'pdfcopy',\r\n    QUICKCHECK: 'quickcheck',\r\n    ADDFILES: 'addfiles',\r\n    FILE_PICK_UP: 'filepickup',\r\n    RENAME: 'rename'\r\n};\r\n\r\nexport const availableTransitionsByStepType = {\r\n    'processplan': [ON_ERROR, ELSE, IF_DISABLED], //replaced ON_SUCCESS with ON_ERROR\r\n    'profile': [ON_ERROR, ON_WARNING, ON_INFO, ON_SUCCESS, IF_DISABLED],\r\n    'check': [ON_HIT, ON_SUCCESS, IF_DISABLED],\r\n    'fixup': [ON_SUCCESS, ON_FAILURE, IF_DISABLED],\r\n    'action': [ON_SUCCESS, ON_FAILURE, IF_DISABLED],\r\n    'variable': [ON_SUCCESS, ON_FAILURE, IF_DISABLED],\r\n    'filepickup': [ON_SUCCESS, ON_FAILURE, IF_DISABLED],\r\n    'pdfcopy': [ON_SUCCESS, ON_FAILURE, IF_DISABLED],\r\n    'start': [OUT],\r\n    'quickcheck': [ON_SUCCESS, ON_FAILURE, IF_DISABLED],\r\n    'addfiles': [ON_SUCCESS, ON_FAILURE, IF_DISABLED],\r\n    'rename': [ON_SUCCESS, ON_FAILURE, IF_DISABLED],\r\n};\r\n\r\nexport const propertiesByStepType = {\r\n    'processplan': ['id', 'enable_step'],\r\n    'profile': ['id', 'omit_fixups', 'enable_step'],\r\n    'action': ['id', 'enable_step'],\r\n    'variable': ['id', 'enable_step'],\r\n    'fixup': ['id', 'enable_step'],\r\n    'check': ['id', 'enable_step'],\r\n    'filepickup': ['index', 'enable_step'],\r\n    'pdfcopy': ['prefix', 'suffix', 'folder', 'overwrite_existing_file', 'replace_file_name', 'enable_step'],\r\n    'quickcheck': ['id', 'enable_step'],\r\n    'addfiles': ['id', 'enable_step'],\r\n    'rename': ['prefix', 'suffix', 'overwrite_existing_file', 'replace_file_name', 'enable_step'],\r\n};\r\n\r\nexport const defaultPropertyValues = {\r\n    'enable_step': true\r\n};\r\n\r\nconst booleanProperties = ['omit_fixups', 'overwrite_existing_file', 'replace_file_name', 'enable_step'];\r\n\r\nexport const postProcessingOptionsByStartStepType = {\r\n    'processplan': [],\r\n    'profile': ['certify', 'create_report'],\r\n    'action': ['create_report'],\r\n    'variable': ['create_report'],\r\n    'fixup': ['create_report'],\r\n    'check': ['create_report'],\r\n    'filepickup': [],\r\n    'pdfcopy': [],\r\n    'quickcheck': [],\r\n    'addfiles': [],\r\n    'rename': [],\r\n};\r\n\r\nexport const availableReportsByStartStepType = {\r\n    'processplan': [],\r\n    'profile': ['txt_report', 'xml_report', 'overview_report', 'mask_report', 'comment_report', 'layer_report', 'compare_report', 'inventory_report'],\r\n    'check': ['txt_report', 'xml_report', 'overview_report', 'mask_report', 'comment_report', 'layer_report', 'compare_report', 'inventory_report'],\r\n    'fixup': ['txt_report', 'xml_report', 'overview_report', 'mask_report', 'comment_report', 'layer_report', 'compare_report', 'inventory_report'],\r\n    'action': ['compare_report', 'inventory_report'],\r\n    'variable': ['compare_report', 'inventory_report'],\r\n    'filepickup': [],\r\n    'pdfcopy': [],\r\n    'quickcheck': [],\r\n    'addfiles': [],\r\n    'rename': [],\r\n};\r\n\r\nexport const generationOptions = {\r\n    startPosition: {x: 10, y: 10},\r\n    startSize: {width: 120, height: 40},\r\n    offsets: {x: 250, y: 100},\r\n    size: {width: 200, height: 40},\r\n    columns: 4\r\n};\r\n\r\nexport function generateStepsLayout(processPlan, options) {\r\n    const stepsLayout = {};\r\n    const {startPosition, startSize} = options;\r\n    stepsLayout.start = {\r\n        position: startPosition,\r\n        size: startSize\r\n    };\r\n\r\n    let {offsets, size, columns} = options;\r\n    let previousStepPosition = stepsLayout.start.position;\r\n    let numOfSteps = processPlan.sequence.length;\r\n    let direction = 1;\r\n    for (let index = 0; index <= numOfSteps - 1; index++) {\r\n        let position = {\r\n            x: previousStepPosition.x + (direction * offsets.x),\r\n            y: previousStepPosition.y + offsets.y\r\n        };\r\n\r\n        if (((index + 1) % (columns - 1)) === 0) {\r\n            direction = -direction;\r\n        }\r\n        stepsLayout[index] = {position, size};\r\n        previousStepPosition = stepsLayout[index].position;\r\n    }\r\n\r\n    let position = {\r\n        x: previousStepPosition.x + (direction * offsets.x),\r\n        y: previousStepPosition.y + offsets.y\r\n    };\r\n    stepsLayout['end'] = {\r\n        position,\r\n        size: startSize\r\n    };\r\n    return stepsLayout;\r\n}\r\n\r\nconst generateTransitionLayout = (transitions) => {\r\n    return _.chain(transitions)\r\n        .groupBy('startStepId')\r\n        .map((stepTransitions) =>\r\n            _.map(stepTransitions, (transition, index) => {\r\n                let transitionLayout = {\r\n                    start: {},\r\n                    end: {}\r\n                };\r\n                switch (index % 3) {\r\n                    case 0:\r\n                        transitionLayout.start.position = 'bottom';\r\n                        transitionLayout.end.position = 'top';\r\n                        break;\r\n                    case 1:\r\n                        transitionLayout.start.position = 'right';\r\n                        transitionLayout.end.position = 'right';\r\n                        break;\r\n                    case 2:\r\n                        transitionLayout.start.position = 'left';\r\n                        transitionLayout.end.position = 'left';\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                return {transitionId: transition.id, transitionLayout};\r\n            })\r\n        )\r\n        .flatten()\r\n        .keyBy(({transitionId}) => transitionId)\r\n        .mapValues(({transitionLayout}) => transitionLayout)\r\n        .value();\r\n};\r\n\r\nexport const convertProcessPlan = (processPlan) => {\r\n    if (!processPlan.layout) {\r\n        processPlan.layout = {\r\n            stepsLayout: generateStepsLayout(processPlan, generationOptions)\r\n        };\r\n    }\r\n    let steps = {};\r\n    let transitions = {};\r\n    let stepsLayout = {};\r\n    let transitionsLayout = {};\r\n    let stepProperties = [];\r\n    let transitionProperties = [];\r\n\r\n    let stepIds = [];\r\n\r\n    let baseInfo = {\r\n        id: processPlan.id,\r\n        name: processPlan.name,\r\n        author: processPlan.author,\r\n        comment: processPlan.comment,\r\n        email: processPlan.email,\r\n        locked: processPlan.locked,\r\n        hasPassword: processPlan.hasPassword,\r\n        group: processPlan.group,\r\n        dialog: processPlan.dialog,\r\n        addFilesStep: processPlan.addFilesStep\r\n    };\r\n\r\n    // Build steps & stepProperties\r\n    processPlan.sequence.forEach(step => {\r\n        let stepId = uuidv4();\r\n        steps[stepId] = {\r\n            id: stepId,\r\n            type: step.type,\r\n            selected: false,\r\n            highlighted: false,\r\n            intersectedAnchors: []\r\n        };\r\n        stepIds.push(stepId);\r\n        propertiesByStepType[step.type].forEach(property => {\r\n            switch (property) {\r\n                case 'index':\r\n                    stepProperties.push({stepId: stepId, name: 'step_id', value: stepIds[step[property]]});\r\n                    break;\r\n                default:\r\n                    stepProperties.push({stepId: stepId, name: property, value: step[property]});\r\n            }\r\n        });\r\n    });\r\n\r\n    // Build steps layout\r\n    _.forOwn(processPlan.layout.stepsLayout, (layout, stepReference) => {\r\n        let stepId = stepReference === 'end' || stepReference === 'start' ? stepReference : stepIds[stepReference];\r\n        stepsLayout[stepId] = layout;\r\n    });\r\n    // Build transitions and their properties\r\n    transitions['out'] = {\r\n        id: 'out',\r\n        startStepId: 'start',\r\n        endStepId: stepIds.length > 0 ? stepIds[0] : 'end', // 3rd stepId is the id of the first actual step\r\n        selected: false,\r\n        highlighted: false,\r\n        intersected: false\r\n    };\r\n    transitionProperties.push({\r\n        transitionId: 'out',\r\n        name: 'types',\r\n        value: ['out']\r\n    });\r\n    processPlan.sequence.forEach((step, index) => {\r\n        if (!_.isUndefined(processPlan.layout.transitionsLayout)) {\r\n            let addedTransitions = [];\r\n            availableTransitionsByStepType[step.type].forEach(transitionType => {\r\n                // Check if transition was already prepared\r\n                let transitionTypes = _.find(processPlan.layout.transitionsLayout[index], transition => _.includes(transition.types, transitionType));\r\n                if (transitionTypes) {\r\n                    let transitionId = null;\r\n                    let availableTransitionTypes = transitionTypes.types;\r\n                    addedTransitions.forEach(transition => {\r\n                        if (_.includes(availableTransitionTypes, transition.transitionType)) {\r\n                            transitionId = transition.transitionId;\r\n                        }\r\n                    });\r\n\r\n                    let sourceTransition = step[transitionType];\r\n                    if (sourceTransition) {\r\n                        if (transitionType === 'if_disabled') {\r\n                            // For 'if_disabled' transition we do not allow post processing options\r\n                            sourceTransition = _.pick(sourceTransition, 'next_step');\r\n                        }\r\n                        let endStepIndex = sourceTransition.next_step;\r\n                        if (_.isNil(transitionId)) {\r\n                            // Post processing options are different from other transitions, create new transition object\r\n                            let endStepId;\r\n                            switch (endStepIndex) {\r\n                                case -1:\r\n                                    endStepId = stepIds[index + 1] || 'end';\r\n                                    break;\r\n                                case -2:\r\n                                    endStepId = 'end';\r\n                                    break;\r\n                                default:\r\n                                    endStepId = stepIds[endStepIndex];\r\n                                    break;\r\n                            }\r\n                            transitionId = uuidv4();\r\n                            transitions[transitionId] = {\r\n                                id: transitionId,\r\n                                startStepId: stepIds[index],\r\n                                endStepId: endStepId,\r\n                                selected: false,\r\n                                highlighted: false,\r\n                                intersected: false\r\n                            };\r\n                            addedTransitions.push({transitionId, sourceTransition, transitionType});\r\n                            // Initialize transition properties with default values\r\n                            transitionProperties.push({\r\n                                transitionId: transitionId,\r\n                                name: 'types',\r\n                                value: [transitionType]\r\n                            });\r\n\r\n                            if (transitionType !== 'if_disabled') {\r\n                                let selectedPostProcessingOptions = _.map(sourceTransition.post_process, option => option.type);\r\n                                _.forEach(postProcessingOptionsByStartStepType[step.type], option => {\r\n                                    let value;\r\n                                    switch (option) {\r\n                                        case 'create_report':\r\n                                            value = {\r\n                                                values: _.filter(sourceTransition.post_process, option =>\r\n                                                    !_.isString(option.type) || _.includes(availableReportsByStartStepType[step.type], option.type)\r\n                                                )\r\n                                            };\r\n                                            value.checked = !_.isEmpty(value.values);\r\n                                            break;\r\n                                        case 'certify':\r\n                                            value = _.includes(selectedPostProcessingOptions, option);\r\n                                            break;\r\n                                        default:\r\n                                            value = null;\r\n                                            break;\r\n                                    }\r\n                                    transitionProperties.push({\r\n                                        transitionId: transitionId,\r\n                                        name: option,\r\n                                        value\r\n                                    });\r\n                                });\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Post processing options are the same as in already created transition, 'link' type to existing transition\r\n                            let typeProperty = _.find(transitionProperties, property => property.name === 'types' && property.transitionId === transitionId);\r\n                            typeProperty.value.push(transitionType);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            let addedTransitions = [];\r\n            availableTransitionsByStepType[step.type].forEach(transitionType => {\r\n                // Check if transition was already prepared\r\n                let sourceTransition = step[transitionType];\r\n                if (sourceTransition) {\r\n                    if (transitionType === 'if_disabled') {\r\n                        // For 'if_disabled' transition we do not allow post processing options\r\n                        sourceTransition = _.pick(sourceTransition, 'next_step');\r\n                    }\r\n                    let endStepIndex = sourceTransition.next_step;\r\n                    let transitionId = _.chain(addedTransitions)\r\n                        .find(transition =>\r\n                            transitionType === 'if_disabled' ?\r\n                                transition.sourceTransition.next_step === endStepIndex :\r\n                                _.isEqual(transition.sourceTransition, sourceTransition)\r\n                        )\r\n                        .get('transitionId')\r\n                        .value();\r\n                    if (_.isNil(transitionId)) {\r\n                        // Post processing options are different from other transitions, create new transition object\r\n                        let endStepId;\r\n                        switch (endStepIndex) {\r\n                            case -1:\r\n                                endStepId = stepIds[index + 1] || 'end';\r\n                                break;\r\n                            case -2:\r\n                                endStepId = 'end';\r\n                                break;\r\n                            default:\r\n                                endStepId = stepIds[endStepIndex];\r\n                                break;\r\n                        }\r\n                        transitionId = uuidv4();\r\n                        transitions[transitionId] = {\r\n                            id: transitionId,\r\n                            startStepId: stepIds[index],\r\n                            endStepId: endStepId,\r\n                            selected: false,\r\n                            highlighted: false,\r\n                            intersected: false\r\n                        };\r\n                        addedTransitions.push({transitionId, sourceTransition});\r\n                        // Initialize transition properties with default values\r\n                        transitionProperties.push({\r\n                            transitionId: transitionId,\r\n                            name: 'types',\r\n                            value: [transitionType]\r\n                        });\r\n\r\n                        if (transitionType !== 'if_disabled') {\r\n                            let selectedPostProcessingOptions = _.map(sourceTransition.post_process, option => option.type);\r\n                            _.forEach(postProcessingOptionsByStartStepType[step.type], option => {\r\n                                let value;\r\n                                switch (option) {\r\n                                    case 'create_report':\r\n                                        value = {\r\n                                            values: _.filter(sourceTransition.post_process, option =>\r\n                                                !_.isString(option.type) || _.includes(availableReportsByStartStepType[step.type], option.type)\r\n                                            )\r\n                                        };\r\n                                        value.checked = !_.isEmpty(value.values);\r\n                                        break;\r\n                                    case 'certify':\r\n                                        value = _.includes(selectedPostProcessingOptions, option);\r\n                                        break;\r\n                                    default:\r\n                                        value = null;\r\n                                        break;\r\n                                }\r\n                                transitionProperties.push({\r\n                                    transitionId: transitionId,\r\n                                    name: option,\r\n                                    value\r\n                                });\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Post processing options are the same as in already created transition, 'link' type to existing transition\r\n                        let typeProperty = _.find(transitionProperties, property => property.name === 'types' && property.transitionId === transitionId);\r\n                        typeProperty.value.push(transitionType);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n    // Build transitions layout\r\n    if (_.isNil(processPlan.layout.transitionsLayout)) {\r\n        transitionsLayout = generateTransitionLayout(transitions);\r\n\r\n    } else {\r\n        _.forOwn(processPlan.layout.transitionsLayout, (stepTransitionsLayout, stepReference) => {\r\n            stepTransitionsLayout.forEach(transitionLayout => {\r\n                let stepId = stepReference === 'end' || stepReference === 'start' ? stepReference : stepIds[stepReference];\r\n\r\n                let transitionId;\r\n                if (stepReference === 'start') {\r\n                    // Start step always has single transition 'out'\r\n                    transitionId = 'out';\r\n\r\n                } else {\r\n                    // Not start state, look for transition by step ID & types array\r\n                    let stepTransitionIds = _.chain(transitions)\r\n                        .filter(transition => transition.startStepId === stepId)\r\n                        .map(transition => transition.id)\r\n                        .value();\r\n\r\n                    transitionId = _.chain(transitionProperties)\r\n                        .filter(property => _.includes(stepTransitionIds, property.transitionId))\r\n                        .filter(property => property.name === 'types')\r\n                        .filter(property => _.xor(property.value, transitionLayout.types).length === 0)\r\n                        .first()\r\n                        .get('transitionId')\r\n                        .value();\r\n                }\r\n\r\n                transitionsLayout[transitionId] = {\r\n                    start: transitionLayout.start,\r\n                    end: transitionLayout.end\r\n                };\r\n            })\r\n        });\r\n    }\r\n    return {\r\n        baseInfo,\r\n        steps,\r\n        transitions,\r\n        stepsLayout,\r\n        transitionsLayout,\r\n        stepProperties,\r\n        transitionProperties\r\n    };\r\n};\r\n\r\nconst validateProcessPlan = state => {\r\n    let validationResult = true;\r\n\r\n    // Check if all steps has incoming or outgoing transitions\r\n    let allStepsIds = _.map(state.steps, step => step.id);\r\n    let allStepsIdsToStartFrom = [...allStepsIds, 'start'];\r\n    let allStepIdsToEndAt = [...allStepsIds, 'end'];\r\n    _.map(state.transitions, transition => {\r\n        _.remove(allStepsIdsToStartFrom, stepId => stepId === transition.startStepId);\r\n        _.remove(allStepIdsToEndAt, stepId => stepId === transition.endStepId);\r\n    });\r\n\r\n    if (allStepIdsToEndAt.length !== 0 || allStepsIdsToStartFrom.length !== 0) {\r\n        validationResult = false;\r\n    }\r\n\r\n    // Check if there are transitions for all available types for each step depending on availability\r\n    if (_.includes(_.map(getAllStepsValidationTooltips(state), validationValue => _.isEmpty(validationValue)), false)) {\r\n        validationResult = false;\r\n    }\r\n\r\n    // Check whether transitions properties are valid\r\n    let createReportProperty = _.filter(state.transitionProperties, property => property.name === 'create_report');\r\n    _.map(createReportProperty, property => {\r\n        if (property.value.checked && property.value.values.length === 0) {\r\n            validationResult = false;\r\n        }\r\n    });\r\n\r\n    // Check if there are no broken reference to available objects\r\n    let stepIdProperties = _.filter(state.stepProperties, property => property.name === 'id');\r\n    _.map(stepIdProperties, property => {\r\n        if (_.isNil(property.value)) {\r\n            validationResult = false;\r\n        }\r\n    });\r\n\r\n    if (getProcessPlanNameValidationTooltip(state)) {\r\n        validationResult = false;\r\n    }\r\n    ;\r\n\r\n    return validationResult;\r\n};\r\n\r\nconst getErrorTypes = state => {\r\n    let stepsErrors =  _.map(getAllStepsValidationTooltips(state), stepError => stepError );\r\n    let transitionErrors = _.map(getAllTransitionsPropertiesValidationTooltips(state), transitionError => transitionError);\r\n    let processPlanNameErrors = getProcessPlanNameValidationTooltip(state)\r\n        ? state.processPlan.name.value === ''\r\n            ? state.localize.translations['NG_PPE_NameEmptyWarning_long']\r\n            : state.localize.translations['NG_PPE_NameExistWarning_long']\r\n        : [];\r\n\r\n    return _.chain(_.concat(stepsErrors, transitionErrors, processPlanNameErrors))\r\n        .flatten()\r\n        .uniq()\r\n        .value();\r\n};\r\n\r\n\r\nexport const convertToJson = (state) => {\r\n    if (validateProcessPlan(state)) {\r\n        let processPlan = {};\r\n\r\n        processPlan.id = state.processPlan.id;\r\n        processPlan.name = state.processPlan.name;\r\n        processPlan.author = state.processPlan.author;\r\n        processPlan.comment = state.processPlan.comment;\r\n        processPlan.email = state.processPlan.email;\r\n        processPlan.locked = state.processPlan.locked;\r\n        processPlan.hasPassword = state.processPlan.hasPassword;\r\n        processPlan.group = state.processPlan.group;\r\n        processPlan.dialog = state.processPlan.dialog;\r\n        processPlan.addFilesStep = state.processPlan.addFilesStep;\r\n\r\n        processPlan.layout = {};\r\n        processPlan.layout.stepsLayout = {};\r\n        processPlan.layout.transitionsLayout = {};\r\n        processPlan.sequence = [];\r\n\r\n        let stepsSequence = [state.transitions.out.endStepId];\r\n\r\n        _.map(state.steps, step => {\r\n            if (step.id !== 'start' && step.id !== 'end' && !_.includes(stepsSequence, step.id)) {\r\n                stepsSequence.push(step.id);\r\n            }\r\n        });\r\n        _.map(stepsSequence, (stepId, index) => {\r\n            // Build process plan sequence step\r\n            let stepType = getStepTypeById(state, stepId);\r\n            let step = {\r\n                type: stepType,\r\n                ..._.chain(propertiesByStepType[stepType])\r\n                    .keyBy(_.identity)\r\n                    .mapValues(propertyName => {\r\n                        let stepProperty = _.find(state.stepProperties, property => property.name === propertyName && property.stepId === stepId);\r\n                        let stepPropertyValue = _.isNil(stepProperty) ? null : stepProperty.value;\r\n\r\n                        if (_.includes(booleanProperties, propertyName) && _.isNil(stepPropertyValue)) {\r\n                            stepPropertyValue = false;\r\n                        }\r\n\r\n                        if (propertyName === 'index') {\r\n                            let referencedStepProperty = _.find(state.stepProperties, property => property.name === 'step_id' && property.stepId === stepId);\r\n                            if (referencedStepProperty) {\r\n                                let referencedStepId = referencedStepProperty.value;\r\n                                if (!_.isNil(referencedStepId)) {\r\n                                    stepPropertyValue = _.indexOf(stepsSequence, referencedStepId);\r\n                                }\r\n                            }\r\n                        }\r\n                        return stepPropertyValue;\r\n                    })\r\n                    .omitBy(_.isNil)\r\n                    .value()\r\n            };\r\n\r\n            _.map(availableTransitionsByStepType[stepType], transitionType => {\r\n                let transitionsIdsByStartStepId = _.chain(state.transitions)\r\n                    .filter(transition => transition.startStepId === stepId)\r\n                    .map(transition => transition.id)\r\n                    .value();\r\n                let transitionsIdsByType = _.chain(state.transitionProperties)\r\n                    .filter(property => property.name === 'types' && _.includes(property.value, transitionType))\r\n                    .map(property => property.transitionId)\r\n                    .value();\r\n                let transition = state.transitions[_.intersection(transitionsIdsByStartStepId, transitionsIdsByType)[0]];\r\n                if (transition) {\r\n                    step[transitionType] = {};\r\n                    let nextStepIndex;\r\n                    if (transition.endStepId === 'end' && index !== stepsSequence.length - 1) {\r\n                        nextStepIndex = -2;\r\n                    } else {\r\n                        nextStepIndex = _.indexOf(stepsSequence, transition.endStepId);\r\n                        nextStepIndex = nextStepIndex === index + 1 ? -1 : nextStepIndex;\r\n                    }\r\n                    step[transitionType].next_step = nextStepIndex;\r\n                    if (transitionType !== 'if_disabled') {\r\n                        _.map(postProcessingOptionsByStartStepType[stepType], optionName => {\r\n                            switch (optionName) {\r\n                                case 'create_report':\r\n                                    let property = _.find(state.transitionProperties, property => property.transitionId === transition.id && property.name === optionName);\r\n                                    if (property.value.checked) {\r\n                                        step[transitionType].post_process = [\r\n                                            ...(step[transitionType].post_process || []),\r\n                                            ..._.map(property.value.values, value => (value))\r\n                                        ];\r\n                                    }\r\n                                    break;\r\n                                case 'certify':\r\n                                    if (_.find(state.transitionProperties, property => property.transitionId === transition.id && property.name === optionName).value) {\r\n                                        step[transitionType].post_process = [...(step[transitionType].post_process || []), {type: optionName}];\r\n                                    }\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (!_.isNil(step.type)) {\r\n                processPlan.sequence[index] = step;\r\n            }\r\n\r\n            //Build process plan transitions layout\r\n            let transitionsIdsByStartStepId = _.chain(state.transitions)\r\n                .filter(transition => transition.startStepId === stepId)\r\n                .map(transition => transition.id)\r\n                .value();\r\n\r\n            processPlan.layout.transitionsLayout[index] = [\r\n                ..._.map(transitionsIdsByStartStepId, transitionId => ({\r\n                        ...state.transitionsLayout[transitionId],\r\n                        types: _.find(state.transitionProperties, property => property.transitionId === transitionId && property.name === 'types').value\r\n                    })\r\n                )\r\n            ]\r\n        });\r\n\r\n        //Add transition layout for start step\r\n        processPlan.layout.transitionsLayout.start = [{\r\n            ...state.transitionsLayout.out,\r\n            types: ['out']\r\n        }];\r\n\r\n\r\n        //Build process plan steps layout\r\n        _.mapValues(state.stepsLayout, (layout, stepId) => {\r\n            let layoutIndex;\r\n            if (stepId === 'start' || stepId === 'end') {\r\n                layoutIndex = stepId;\r\n            } else {\r\n                layoutIndex = _.indexOf(stepsSequence, stepId);\r\n            }\r\n\r\n            processPlan.layout.stepsLayout[layoutIndex] = layout;\r\n        });\r\n        return JSON.stringify(processPlan, null, '\\t');\r\n    } else {\r\n        return JSON.stringify({\r\n            name: state.processPlan.name,\r\n            errors: true,\r\n            errorMessages: getErrorTypes(state)\r\n        }, null, '\\t')\r\n    }\r\n};\r\n","import {createAction, handleActions} from 'redux-actions';\r\nimport {ofType} from 'redux-observable';\r\nimport {filter, map} from 'rxjs/operators';\r\nimport api from \"../../api\";\r\nimport {\r\n    convertProcessPlan,\r\n    convertToJson,\r\n    generateStepsLayout,\r\n    generationOptions\r\n} from \"../../api/processPlanConversion\";\r\nimport {areSettingsLoaded, fitTheView, getViewSettings, isZoomToFitEnabled, loadViewSettings} from './drawingArea';\r\nimport _ from 'lodash';\r\nimport {getProcessPlanAvailableObjects} from './availableObjects';\r\n\r\nexport const DRAWING_AREA = 'drawing-area';\r\nexport const SIDE_PANEL = 'side-panel';\r\n\r\n//- Actions\r\nexport const loadProcessPlan = createAction('PROCESS_PLAN_LOAD', sampleName => api.loadProcessPlan(sampleName).then(convertProcessPlan));\r\nexport const showProcessPlanInfo = createAction('SHOW_PROCESS_PLAN_INFO', type => type);\r\nexport const setFocusOnGlobalArea = createAction('FOCUS_ON_GLOBAL_AREA_SET', globalArea => globalArea);\r\nexport const setProcessPlanJson = createAction('PROCESS_PLAN_JSON_SET', processPlanJson => processPlanJson);\r\nexport const setProcessPlan = createAction('PROCESS_PLAN_LOAD', processPlan => processPlan);\r\nexport const setPasswordFlag = createAction('CHANGE_PASSWORD', hasPassword => hasPassword);\r\nexport const lockProcessPlan = createAction('CHANGE_PLAN_LOCK', locked => locked);\r\n\r\n\r\nexport const exportProcessPlan = () => (dispatch, getState) => {\r\n    dispatch(setProcessPlanJson(convertToJson(getState())));\r\n};\r\n\r\nexport const isNeedToUpdateLayout = () => (dispatch, getState) => {\r\n    let processPlan = convertToJson(getState());\r\n    if (processPlan !== 'Error') {\r\n        processPlan = JSON.parse(processPlan);\r\n        return !_.isEqual(processPlan.layout.stepsLayout, generateStepsLayout(processPlan, generationOptions))\r\n    } else {\r\n        return false\r\n    }\r\n};\r\n\r\nexport const updateLayout = () => (dispatch, getState) => {\r\n    let processPlan = convertToJson(getState());\r\n    processPlan = JSON.parse(processPlan);\r\n    delete processPlan.layout;\r\n    return {\r\n        currentProcessPlan: getState(),\r\n        newProcessPlan: convertProcessPlan(processPlan)\r\n    }\r\n};\r\n\r\napi.subscribe('saveProcessPlan', () => {\r\n    const state = window.store.getState();\r\n    api.updateSettings(getViewSettings(state)).finally(\r\n        () => api.saveProcessPlan(convertToJson(state))\r\n    );\r\n});\r\n\r\n//- State\r\nconst initialState = {\r\n    id: null,\r\n    name: null,\r\n    author: null,\r\n    comment: null,\r\n    email: null,\r\n    locked: null,\r\n    hasPassword: null,\r\n    group: null,\r\n    dialog: null,\r\n    loaded: false,\r\n    isHidden: true,\r\n    focusedArea: null,\r\n    validationSucceed: true,\r\n    addFilesStep: false,\r\n    processPlanJson: ''\r\n};\r\n\r\n//- Reducer\r\nexport default handleActions({\r\n    PROCESS_PLAN_LOAD: (state, action) => {\r\n        return {...state, ...action.payload.baseInfo, loaded: true};\r\n    },\r\n    CHANGE_PASSWORD: (state, action) => {\r\n        return {...state, hasPassword: action.payload};\r\n    },\r\n    CHANGE_PLAN_LOCK: (state, action) => {\r\n        return {...state, locked: action.payload};\r\n    },\r\n    CHANGE_APPLY: (state, {payload: change}) => {\r\n        switch (change.description) {\r\n            case 'Change process plan name':\r\n                return change.applyProcessPlanNameChange(state);\r\n            case 'Change process plan author':\r\n                return change.applyProcessPlanAuthorChange(state);\r\n            case 'Change process plan email':\r\n                return change.applyProcessPlanEmailChange(state);\r\n            case 'Change process plan comment':\r\n                return change.applyProcessPlanCommentChange(state);\r\n            case 'Change process plan group':\r\n                return change.applyProcessPlanGroupChange(state);\r\n            case 'Change process plan dialog':\r\n                return change.applyProcessPlanDialogChange(state);\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    CHANGE_REVERT: (state, {payload: change}) => {\r\n        switch (change.description) {\r\n            case 'Change process plan name':\r\n                return change.revertProcessPlanNameChange(state);\r\n            case 'Change process plan author':\r\n                return change.revertProcessPlanAuthorChange(state);\r\n            case 'Change process plan email':\r\n                return change.revertProcessPlanEmailChange(state);\r\n            case 'Change process plan comment':\r\n                return change.revertProcessPlanCommentChange(state);\r\n            case 'Change process plan group':\r\n                return change.revertProcessPlanGroupChange(state);\r\n            case 'Change process plan dialog':\r\n                return change.revertProcessPlanDialogChange(state);\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    SHOW_PROCESS_PLAN_INFO: (state, action) => {\r\n        return {...state, isHidden: action.payload};\r\n    },\r\n    FOCUS_ON_GLOBAL_AREA_SET: (state, action) => {\r\n        return {...state, focusedArea: action.payload};\r\n    },\r\n    PROCESS_PLAN_JSON_SET: (state, action) => {\r\n        return {...state, processPlanJson: action.payload};\r\n    }\r\n}, initialState);\r\n\r\n//- Selectors\r\nexport const getProcessPlanInfo = state => state.processPlan;\r\nexport const isProcessPlanLoaded = state => getProcessPlanInfo(state).loaded;\r\nexport const getFocusedArea = state => getProcessPlanInfo(state).focusedArea;\r\nexport const getProcessPlanJson = state => getProcessPlanInfo(state).processPlanJson;\r\nexport const getProcessPlanAccess = state => getProcessPlanInfo(state).locked;\r\nexport const getAddFilesAvailability = state => getProcessPlanInfo(state).addFilesStep;\r\nexport const getProcessPlanName = state => getProcessPlanInfo(state).name;\r\n\r\nexport const getProcessPlanNameValidationTooltip = state => {\r\n    let processPlanName = !_.isNull(getProcessPlanName(state)) ? getProcessPlanName(state).value : null;\r\n    return (!_.isNull(processPlanName) && (!_.isUndefined(_.find(getProcessPlanAvailableObjects(state), object => object.name === processPlanName)) || processPlanName.length === 0))\r\n};\r\n\r\n//-Epics\r\nexport const processplanSettingsLoadEpic = (action$, state$) => action$.pipe(\r\n    ofType(\r\n        loadProcessPlan.toString(),\r\n        loadViewSettings.toString()\r\n    ),\r\n    filter(() =>\r\n        isProcessPlanLoaded(state$.value) &&\r\n        areSettingsLoaded(state$.value) &&\r\n        isZoomToFitEnabled(state$.value)\r\n    ),\r\n    map(() => fitTheView(state$.value.stepsLayout))\r\n);\r\n","import {Change} from './Change';\r\nimport _ from 'lodash';\r\nimport {defaultPropertyValues, propertiesByStepType} from '../../api/processPlanConversion';\r\nimport {GRID_CELL_SIZE} from \"../../components/drawingArea/step/Step\";\r\n\r\nexport const DEFAULT_STEP_SIZE = {\r\n    width: 200,\r\n    height: 40\r\n};\r\n\r\nexport const DEFAULT_STEP_POSITION = {\r\n    x: 0,\r\n    y: 0\r\n};\r\n\r\nexport class AddStepChange extends Change {\r\n    constructor(id, type, position, scale, translate, snapToGrid) {\r\n        super('Add step');\r\n        this.stepId = id;\r\n        this.type = type;\r\n        this.position = position;\r\n        this.scale = scale;\r\n        this.translate = translate;\r\n        this.snapToGrid = snapToGrid;\r\n\r\n        this.step = null;\r\n        this.stepLayout = null;\r\n    }\r\n    applyAddStep(steps) {\r\n        this.step= {\r\n            id: this.stepId,\r\n            type: this.type,\r\n            selected: false,\r\n            highlighted: false,\r\n            intersectedAnchors: []\r\n        };\r\n        return {\r\n            ...steps,\r\n            [this.stepId]: this.step\r\n        };\r\n    }\r\n    applyAddStepLayout(stepsLayout) {\r\n        let scaledPosition;\r\n        if (this.position) {\r\n            (this.snapToGrid)?\r\n                scaledPosition = {\r\n                    x:  Math.round((this.position.x * this.scale + this.translate.x)/ GRID_CELL_SIZE) * GRID_CELL_SIZE,\r\n                    y:  Math.round((this.position.y * this.scale + this.translate.y)/ GRID_CELL_SIZE) * GRID_CELL_SIZE\r\n                } : scaledPosition = {\r\n                    x: this.position.x * this.scale + this.translate.x,\r\n                    y: this.position.y * this.scale + this.translate.y\r\n                };\r\n        }\r\n        this.stepLayout= {\r\n            position: scaledPosition || DEFAULT_STEP_POSITION ,\r\n            size: this.size || DEFAULT_STEP_SIZE,\r\n        };\r\n        return {\r\n            ...stepsLayout,\r\n            [this.stepId]: this.stepLayout\r\n        };\r\n    }\r\n    applyAddStepProperty(stepProperty) {\r\n        let newProperties = _.map(propertiesByStepType[this.type], name => ({\r\n            stepId: this.stepId,\r\n            name: name === 'index' ? 'step_id' : name,\r\n            value: _.has(defaultPropertyValues, name) ? defaultPropertyValues[name] : null\r\n        }));\r\n        return [...stepProperty, ...newProperties];\r\n    }\r\n    applyAddStepConnectionLayout(steps) {\r\n        if(this.type !== 'filepickup') {\r\n            return steps;\r\n        }\r\n        return [...steps, {startStepId: this.stepId, endStepId: null,  endPosition: null}];\r\n    }\r\n\r\n\r\n    revertAddStep(steps) {\r\n        this.step = steps[this.stepId];\r\n        return _.omitBy(steps, step => step.id === this.stepId);\r\n    }\r\n    revertAddStepLayout(steps) {\r\n        this.stepLayout = steps[this.stepId];\r\n        return _.omitBy(steps, step => step === this.stepLayout);\r\n    }\r\n    revertAddStepProperty(stepProperties) {\r\n        return  _.filter(stepProperties, stepProperty => stepProperty.stepId !== this.stepId);\r\n    }\r\n    revertAddStepConnectionLayout(steps) {\r\n        if(this.type !== 'filepickup') {\r\n            return steps;\r\n        }\r\n        return  _.filter(steps, step => step.startStepId !== this.stepId);\r\n    }\r\n}\r\n","import {Change} from './Change';\r\nimport _ from 'lodash';\r\nimport {\r\n    availableTransitionsByStepType,\r\n    defaultPropertyValues,\r\n    postProcessingOptionsByStartStepType,\r\n    propertiesByStepType\r\n} from \"../../api/processPlanConversion\";\r\nimport {GRID_CELL_SIZE} from \"../../components/drawingArea/step/Step\";\r\nimport {DEFAULT_STEP_POSITION, DEFAULT_STEP_SIZE} from \"./AddStep\";\r\n\r\nexport class InsertNewStepIntoTransition extends Change {\r\n    constructor(stepId, stepType, position, id, newTransitionId, scale, translate, snapToGrid) {\r\n        super('Insert new step into transition');\r\n        this.stepId = stepId;\r\n        this.stepType = stepType;\r\n        this.position = position;\r\n        this.id = id;\r\n        this.newTransitionId = newTransitionId;\r\n        this.scale = scale;\r\n        this.translate = translate;\r\n        this.snapToGrid = snapToGrid;\r\n\r\n        this.step = null;\r\n        this.stepLayout = null;\r\n    }\r\n\r\n    applyInsertStep(steps) {\r\n        this.step = {\r\n            id: this.stepId,\r\n            type: this.stepType,\r\n            selected: false,\r\n            highlighted: false,\r\n            intersected: false,\r\n            intersectedAnchors: []\r\n        };\r\n        return {\r\n            ...steps,\r\n            [this.stepId]: this.step\r\n        };\r\n    }\r\n\r\n    revertInsertStep(steps) {\r\n        this.step = steps[this.stepId];\r\n        return _.omitBy(steps, step => step.id === this.stepId);\r\n    }\r\n\r\n    applyInsertStepLayout(stepsLayout) {\r\n        let scaledPosition;\r\n        if (this.position) {\r\n            (this.snapToGrid) ?\r\n                scaledPosition = {\r\n                    x: Math.round((this.position.x * this.scale + this.translate.x) / GRID_CELL_SIZE) * GRID_CELL_SIZE,\r\n                    y: Math.round((this.position.y * this.scale + this.translate.y) / GRID_CELL_SIZE) * GRID_CELL_SIZE\r\n                } : scaledPosition = {\r\n                    x: this.position.x * this.scale + this.translate.x,\r\n                    y: this.position.y * this.scale + this.translate.y\r\n                };\r\n        }\r\n        this.stepLayout = {\r\n            position: scaledPosition || DEFAULT_STEP_POSITION,\r\n            size: DEFAULT_STEP_SIZE,\r\n        };\r\n        return {\r\n            ...stepsLayout,\r\n            [this.stepId]: this.stepLayout\r\n        };\r\n    }\r\n\r\n    revertInsertStepLayout(stepsLayout) {\r\n        this.stepLayout = stepsLayout[this.stepId];\r\n        return _.omitBy(stepsLayout, step => step === this.stepLayout);\r\n    }\r\n\r\n    applyInsertStepProperty(stepProperty) {\r\n        let newProperties = _.map(propertiesByStepType[this.stepType], name => ({\r\n            stepId: this.stepId,\r\n            name: name === 'index' ? 'step_id' : name,\r\n            value: _.has(defaultPropertyValues, name) ? defaultPropertyValues[name] : null\r\n        }));\r\n        return [...stepProperty, ...newProperties];\r\n    }\r\n\r\n    revertInsertStepProperty(stepProperties) {\r\n        return _.filter(stepProperties, stepProperty => stepProperty.stepId !== this.stepId);\r\n    }\r\n\r\n    applyInsertStepConnectionLayout(steps) {\r\n        if (this.stepType !== 'filepickup') {\r\n            return steps;\r\n        }\r\n        return [...steps, {startStepId: this.stepId, endStepId: null, endPosition: null}];\r\n    }\r\n\r\n    revertInsertStepConnectionLayout(steps) {\r\n        if (this.stepType !== 'filepickup') {\r\n            return steps;\r\n        }\r\n        return _.filter(steps, step => step.startStepId !== this.stepId);\r\n    }\r\n\r\n    applyAddTransitionForInsertStep(transitions) {\r\n        this.prevTransition = _.find(transitions, transition => transition.id === this.id);\r\n        return {\r\n            ...transitions,\r\n            [this.id]: {\r\n                id: this.id,\r\n                startStepId: this.prevTransition.startStepId,\r\n                endStepId: this.stepId,\r\n                selected: false,\r\n                highlighted: false,\r\n                intersected: false\r\n            },\r\n            [this.newTransitionId]: {\r\n                id: this.newTransitionId,\r\n                startStepId: this.stepId,\r\n                endStepId: this.prevTransition.endStepId,\r\n                selected: false,\r\n                highlighted: false,\r\n                intersected: false\r\n            }\r\n        }\r\n    }\r\n\r\n    revertAddTransitionForInsertStep(transitions) {\r\n        transitions = _.omit(transitions, [this.newTransitionId]);\r\n        return {\r\n            ...transitions,\r\n            [this.id]: {\r\n                id: this.id,\r\n                startStepId: this.prevTransition.startStepId,\r\n                endStepId: this.prevTransition.endStepId,\r\n                selected: false,\r\n                highlighted: false,\r\n                intersected: false\r\n            }\r\n        }\r\n    }\r\n\r\n    applyAddTransitionLayoutForInsertStep(transitionsLayout) {\r\n        let prevTransitionLayout = _.find(transitionsLayout, (layout, transitionId) => transitionId === this.id);\r\n        return {\r\n            ...transitionsLayout, [this.newTransitionId]: {\r\n                start: {position: prevTransitionLayout.start.position},\r\n                end: {position: prevTransitionLayout.end.position},\r\n            }\r\n        }\r\n    }\r\n\r\n    revertAddTransitionLayoutForInsertStep(transitionsLayout) {\r\n        return _.omit(transitionsLayout, [this.newTransitionId])\r\n    }\r\n\r\n    applyAddTransitionPropertiesForInsertStep(transitionProperties) {\r\n        let properties = [...transitionProperties];\r\n        properties.push({\r\n            transitionId: this.newTransitionId,\r\n            name: 'types',\r\n            value: availableTransitionsByStepType[this.stepType]\r\n        });\r\n\r\n        _.forEach(postProcessingOptionsByStartStepType[this.stepType], option => {\r\n            switch (option) {\r\n                case 'certify':\r\n                    properties.push({\r\n                        transitionId: this.newTransitionId,\r\n                        name: 'certify',\r\n                        value: false\r\n                    });\r\n                    break;\r\n                case 'create_report':\r\n                    properties.push({\r\n                        transitionId: this.newTransitionId,\r\n                        name: 'create_report',\r\n                        value: {checked: false, values: []}\r\n                    });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        return properties\r\n    }\r\n\r\n    revertAddTransitionPropertiesForInsertStep(transitionProperties) {\r\n        return _.filter(transitionProperties, transitionProperty => transitionProperty.transitionId !== this.newTransitionId)\r\n    }\r\n}","import {Change} from './Change';\r\nimport _ from 'lodash';\r\nimport {availableTransitionsByStepType, postProcessingOptionsByStartStepType} from \"../../api/processPlanConversion\";\r\n\r\nexport class AddTransitionForInsertStep extends Change {\r\n    constructor(stepId, stepType, baseTransitionId, newTransitionId) {\r\n        super('Create transitions for insert step');\r\n        this.stepId = stepId;\r\n        this.stepType = stepType;\r\n        this.baseTransitionId = baseTransitionId;\r\n        this.newTransitionId = newTransitionId;\r\n    }\r\n\r\n    applyAddTransitionForInsertStep(transitions) {\r\n        this.prevTransition = _.find(transitions, transition => transition.id === this.baseTransitionId);\r\n        return {\r\n            ...transitions,\r\n            [this.baseTransitionId]: {\r\n                id: this.baseTransitionId,\r\n                startStepId: this.prevTransition.startStepId,\r\n                endStepId: this.stepId,\r\n                selected: false,\r\n                highlighted: false,\r\n                intersected: false\r\n            },\r\n            [this.newTransitionId]: {\r\n                id: this.newTransitionId,\r\n                startStepId: this.stepId,\r\n                endStepId: this.prevTransition.endStepId,\r\n                selected: false,\r\n                highlighted: false,\r\n                intersected: false\r\n            }\r\n        }\r\n    }\r\n\r\n    revertAddTransitionForInsertStep(transitions) {\r\n        transitions = _.omit(transitions, [this.newTransitionId]);\r\n        return {\r\n            ...transitions,\r\n            [this.baseTransitionId]: {\r\n                id: this.baseTransitionId,\r\n                startStepId: this.prevTransition.startStepId,\r\n                endStepId: this.prevTransition.endStepId,\r\n                selected: false,\r\n                highlighted: false,\r\n                intersected: false\r\n            }\r\n        }\r\n    }\r\n\r\n    applyAddTransitionLayoutForInsertStep(transitionsLayout) {\r\n        let prevTransitionLayout = _.find(transitionsLayout, (layout, transitionId) => transitionId === this.baseTransitionId);\r\n        return {\r\n            ...transitionsLayout, [this.newTransitionId]: {\r\n                start: {position: prevTransitionLayout.start.position},\r\n                end: {position: prevTransitionLayout.end.position},\r\n            }\r\n        }\r\n    }\r\n\r\n    revertAddTransitionLayoutForInsertStep(transitionsLayout) {\r\n        return _.omit(transitionsLayout, [this.newTransitionId])\r\n    }\r\n\r\n    applyAddTransitionPropertiesForInsertStep(transitionProperties) {\r\n        let properties = [...transitionProperties];\r\n        properties.push({\r\n            transitionId: this.newTransitionId,\r\n            name: 'types',\r\n            value: availableTransitionsByStepType[this.stepType]\r\n        });\r\n\r\n        _.forEach(postProcessingOptionsByStartStepType[this.stepType], option => {\r\n            switch (option) {\r\n                case 'certify':\r\n                    properties.push({transitionId: this.newTransitionId, name: 'certify', value: false});\r\n                    break;\r\n                case 'create_report':\r\n                    properties.push({\r\n                        transitionId: this.newTransitionId,\r\n                        name: 'create_report',\r\n                        value: {checked: false, values: []}\r\n                    });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        return properties\r\n    }\r\n\r\n    revertAddTransitionPropertiesForInsertStep(transitionProperties) {\r\n        return _.filter(transitionProperties, transitionProperty => transitionProperty.transitionId !== this.newTransitionId)\r\n    }\r\n\r\n    applyInsertStepForAnchors (steps){\r\n        return _.mapValues(steps, step => {\r\n            return {...step, intersectedAnchors : []}\r\n        })\r\n    }\r\n\r\n    revertInsertStepForAnchors (steps){\r\n        return steps\r\n    }\r\n}","import {Change} from './Change';\r\nimport {availableTransitionsByStepType} from \"../../api/processPlanConversion\";\r\nimport _ from 'lodash';\r\nimport uuidv4 from \"uuid/v4\";\r\n\r\nexport class RemoveStepChange extends Change {\r\n    constructor(stepId, allTransitionProperties, allTransitionLayout, steps) {\r\n        super('Remove step');\r\n        this.stepId = stepId;\r\n\r\n        this.step = null;\r\n        this.stepLayout = null;\r\n\r\n        this.deletedTransition = null;\r\n        this.tempConectedLayout = null;\r\n\r\n        this.transitionConnectedLayout = null;\r\n        this.transitionProperties = null;\r\n        this.transitionConnectedProperties = null;\r\n\r\n        this.allTransitionProperties = allTransitionProperties;\r\n        this.originProperties = allTransitionProperties;\r\n        this.allTransitionLayout = allTransitionLayout;\r\n        this.allSteps = steps;\r\n\r\n        this.newTransitions = [];\r\n        this.newTransitionsLayout = [];\r\n        this.newTransitionsProperties = [];\r\n\r\n        this.outgoingTransitionsProperties = [];\r\n        this.incomingTransitionsProperties = [];\r\n\r\n        this.outgoingTransitions = [];\r\n        this.incomingTransitions = [];\r\n    }\r\n\r\n    applyRemoveStep(steps) {\r\n        this.step = steps[this.stepId];\r\n        return _.omitBy(steps, step => step.id === this.stepId);\r\n    }\r\n\r\n    revertRemoveStep(steps) {\r\n        return {\r\n            ...steps,\r\n            [this.stepId]:\r\n            this.step\r\n        }\r\n    };\r\n\r\n    applyRemoveStepLayout(steps) {\r\n        this.stepLayout = steps[this.stepId];\r\n        return _.omitBy(steps, step => step === this.stepLayout);\r\n    }\r\n\r\n    revertRemoveStepLayout(steps) {\r\n        return {\r\n            ...steps,\r\n            [this.stepId]:\r\n            this.stepLayout\r\n        }\r\n    };\r\n\r\n    applyRemoveStepConnectionLayout(steps) {\r\n        if (!_.isEmpty(steps)) {\r\n            this.tempConectedLayout = _.filter(steps, connectionLayout => connectionLayout.startStepId === this.stepId);\r\n            return _.filter(steps, connectionLayout => connectionLayout.startStepId !== this.stepId);\r\n        } else\r\n            return steps;\r\n    }\r\n\r\n    revertRemoveStepConnectionLayout(steps) {\r\n        if (!_.isEmpty(steps)) {\r\n            return [...steps, this.tempConectedLayout];\r\n        } else\r\n            return steps;\r\n    }\r\n\r\n    applyRemoveStepProperty(stepProperties) {\r\n        this.stepProperties = _.filter(stepProperties, property => property.value !== this.stepId);\r\n        return _.filter(this.stepProperties, property => property.stepId !== this.stepId);\r\n    }\r\n\r\n    revertRemoveStepProperty(stepProperties) {\r\n        return this.stepProperties;\r\n    }\r\n\r\n    applyRemoveTransitionConnected(transitions) {\r\n        this.newTransitionsProperties = [];\r\n        this.outgoingTransitionsProperties = [];\r\n        this.incomingTransitionsProperties = [];\r\n        let outgoingTransitionTypes = [];\r\n\r\n        _.mapValues(transitions, transition => {\r\n            if (transition.startStepId === this.stepId) {\r\n                this.outgoingTransitions.push(transition);\r\n                let outgoingTransitionsProperty = _.filter(this.allTransitionProperties, transitionProperty => transitionProperty.transitionId === transition.id);\r\n                this.outgoingTransitionsProperties.push(...outgoingTransitionsProperty);\r\n                outgoingTransitionTypes.push(..._.find(this.allTransitionProperties, transitionProperty => transitionProperty.transitionId === transition.id && transitionProperty.name === \"types\").value);\r\n                this.deletedTransition = _.assign(this.deletedTransition, {[transition.id]: transition});\r\n            } else if (transition.endStepId === this.stepId) {\r\n                this.incomingTransitions.push(transition);\r\n                let incomingTransitionsProperty = _.filter(this.allTransitionProperties, transitionProperty => transitionProperty.transitionId === transition.id);\r\n                this.incomingTransitionsProperties.push(...incomingTransitionsProperty);\r\n                this.deletedTransition = _.assign(this.deletedTransition, {[transition.id]: transition});\r\n            }\r\n        });\r\n\r\n        _.map(this.incomingTransitionsProperties, (incomeProperty) => {\r\n            let incomingValue = _.find(this.allTransitionProperties, transitionProperty => (transitionProperty.transitionId === incomeProperty.transitionId && transitionProperty.name === \"types\")).value;\r\n            _.map(this.outgoingTransitionsProperties, (outgoingProperty) => {\r\n                let outgoingValue = _.find(this.allTransitionProperties, transitionProperty => (transitionProperty.transitionId === outgoingProperty.transitionId && transitionProperty.name === \"types\")).value;\r\n                let intersectedValues = _.intersection(incomingValue, outgoingValue);\r\n\r\n                let incomingTransition = _.find(transitions, transition => transition.id === incomeProperty.transitionId);\r\n                let outgoingTransition = _.find(transitions, transition => transition.id === outgoingProperty.transitionId);\r\n                let originTransitions = _.filter(transitions, transition => transition.startStepId === incomingTransition.startStepId && transition.endStepId === outgoingTransition.endStepId);\r\n\r\n                let isPossibleToTransferTypes = false;\r\n                if (originTransitions.length > 0) {\r\n                    _.forEach(originTransitions, (originTransition) => {\r\n                        let isPossibleToTransferCertifyValue = false;\r\n                        let isPossibleToTransferReportValues = false;\r\n\r\n                        let originCertifyProperties = _.find(this.allTransitionProperties, transitionProperty =>\r\n                            (transitionProperty.transitionId === originTransition.id && transitionProperty.name === \"certify\"));\r\n                        let originReportProperties = _.find(this.allTransitionProperties, transitionProperty =>\r\n                            (transitionProperty.transitionId === originTransition.id && transitionProperty.name === \"create_report\"));\r\n                        let originTypesProperties = _.find(this.allTransitionProperties, transitionProperty =>\r\n                            (transitionProperty.transitionId === originTransition.id && transitionProperty.name === \"types\")).value;\r\n\r\n                        let incomingCertifyProperties = _.find(this.allTransitionProperties, transitionProperty =>\r\n                            (transitionProperty.transitionId === incomingTransition.id && transitionProperty.name === \"certify\"));\r\n                        let incomingReportProperties = _.find(this.allTransitionProperties, transitionProperty =>\r\n                            (transitionProperty.transitionId === incomingTransition.id && transitionProperty.name === \"create_report\"));\r\n\r\n                        isPossibleToTransferCertifyValue = _.isUndefined(originCertifyProperties) ? true\r\n                            : (originCertifyProperties.value === incomingCertifyProperties.value);\r\n\r\n                        if (_.isUndefined(originReportProperties)) {\r\n                            isPossibleToTransferReportValues = true;\r\n                        } else {\r\n                            if (originReportProperties.value.checked === incomingReportProperties.value.checked) {\r\n                                isPossibleToTransferReportValues = originReportProperties.value.checked === false ? true\r\n                                    : _.difference(originReportProperties.value.values, incomingReportProperties.value.values).length === 0;\r\n                            }\r\n                        }\r\n                        isPossibleToTransferTypes = (isPossibleToTransferCertifyValue === true && isPossibleToTransferReportValues === true);\r\n                        if (isPossibleToTransferTypes) {\r\n                            let deletedStepType = this.allSteps[this.stepId].type;\r\n                            let differenceInTypes = _.difference(incomingValue, availableTransitionsByStepType[deletedStepType]);\r\n\r\n                            this.allTransitionProperties = _.map(this.allTransitionProperties, property => {\r\n                                if (property.transitionId === originTransition.id && property.name === \"types\" && !_.includes([...originTypesProperties], ...intersectedValues) && !_.includes([...originTypesProperties], ...differenceInTypes)) {\r\n                                    let transferringValues = differenceInTypes.length > 0 ? [...originTypesProperties, ...intersectedValues, ...differenceInTypes] : [...originTypesProperties, ...intersectedValues];\r\n                                    return {\r\n                                        ...property,\r\n                                        value: transferringValues\r\n                                    }\r\n                                }\r\n                                return property\r\n                            });\r\n                            incomingValue = _.difference(incomingValue, differenceInTypes);\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                if (!isPossibleToTransferTypes) {\r\n                    let startStepId = _.find(transitions, transition => transition.id === incomeProperty.transitionId).startStepId;\r\n                    let endStepId = _.find(transitions, transition => transition.id === outgoingProperty.transitionId).endStepId;\r\n\r\n                    let newModifiedTransition = _.find(this.newTransitions, newTransition =>\r\n                        (newTransition.startStepId === startStepId && newTransition.endStepId === endStepId));\r\n                    let abilityToTransferCertify;\r\n                    let abilityToTransferReports;\r\n                    if(!_.isUndefined(newModifiedTransition)){\r\n                        let incomingCertify = _.find(this.allTransitionProperties, property => (property.transitionId === incomeProperty.transitionId &&\r\n                            property.name === 'certify'));\r\n\r\n                        let incomingReports = _.find(this.allTransitionProperties, property => (property.transitionId === incomeProperty.transitionId &&\r\n                            property.name === 'create_report'));\r\n\r\n                        let modifiedCertify = _.find(this.newTransitionsProperties, property => (property.transitionId === newModifiedTransition.id &&\r\n                            property.name === 'certify'));\r\n\r\n                        let modifiedReports = _.find(this.newTransitionsProperties, property => (property.transitionId === newModifiedTransition.id &&\r\n                            property.name === 'create_report'));\r\n\r\n                        abilityToTransferCertify = ((_.isUndefined(incomingCertify) && _.isUndefined(modifiedCertify)) ||\r\n                            (!_.isUndefined(incomingCertify) && !_.isUndefined(modifiedCertify) && incomingCertify.value === modifiedCertify.value));\r\n\r\n                        abilityToTransferReports = ((_.isUndefined(incomingReports) && _.isUndefined(modifiedReports)) ||\r\n                            (!_.isUndefined(incomingReports) && !_.isUndefined(modifiedReports) && incomingReports.value.checked === modifiedReports.value.checked &&\r\n                            _.isEqual(incomingReports.value.values, modifiedReports.value.values)));\r\n                    }else{\r\n                        abilityToTransferCertify = false;\r\n                        abilityToTransferReports = false;\r\n                    }\r\n\r\n                    if (_.size(this.newTransitions) > 0 && !_.isUndefined(newModifiedTransition) && abilityToTransferCertify &&\r\n                        abilityToTransferReports\r\n                    ) {\r\n                        if (this.allTransitionLayout[incomeProperty.transitionId].start.position === this.allTransitionLayout[outgoingProperty.transitionId].start.position &&\r\n                            this.allTransitionLayout[incomeProperty.transitionId].end.position === this.allTransitionLayout[outgoingProperty.transitionId].end.position) {\r\n\r\n                            this.newTransitionsLayout = {\r\n                                ...this.newTransitionsLayout,\r\n                                [newModifiedTransition.id]: {\r\n                                    start: this.allTransitionLayout[incomeProperty.transitionId].start,\r\n                                    end: this.allTransitionLayout[outgoingProperty.transitionId].end\r\n                                }\r\n                            };\r\n                        }\r\n                        if (incomeProperty.name === outgoingProperty.name && outgoingProperty.name === 'types') {\r\n                            this.newTransitionsProperties = _.map(this.newTransitionsProperties, newTransitionsProperty => {\r\n                                if (newTransitionsProperty.transitionId === newModifiedTransition.id && newTransitionsProperty.name === 'types' &&\r\n                                    _.difference(intersectedValues, newTransitionsProperty.value).length > 0) {\r\n                                    return {\r\n                                        transitionId: newTransitionsProperty.transitionId,\r\n                                        name: \"types\",\r\n                                        value: _.concat(newTransitionsProperty.value, _.difference(intersectedValues, newTransitionsProperty.value))\r\n                                    }\r\n                                } else {\r\n                                    return newTransitionsProperty\r\n                                }\r\n                            });\r\n                        }\r\n                    } else if (startStepId === \"start\") {\r\n                        let outId = \"out\";\r\n                        this.newTransitions = {\r\n                            ...this.newTransitions,\r\n                            [outId]: {\r\n                                id: outId,\r\n                                startStepId: \"start\",\r\n                                endStepId: endStepId,\r\n                                selected: false,\r\n                                highlighted: false,\r\n                                intersected: false\r\n                            }\r\n                        };\r\n\r\n                        this.newTransitionsLayout = {\r\n                            ...this.newTransitionsLayout,\r\n                            [outId]: {\r\n                                start: this.allTransitionLayout[incomeProperty.transitionId].start,\r\n                                end: this.allTransitionLayout[outgoingProperty.transitionId].end\r\n                            }\r\n                        };\r\n\r\n                        this.newTransitionsProperties.push({\r\n                            transitionId: outId,\r\n                            name: \"types\",\r\n                            value: intersectedValues\r\n                        });\r\n                    } else {\r\n\r\n                        let startStepType = this.allSteps[startStepId].type;\r\n                        let deletedStepType = this.allSteps[this.stepId].type;\r\n\r\n                        if (startStepType !== deletedStepType && outgoingTransitionTypes.length > 0) {\r\n                            let differenceBetweenTypes = _.difference(incomingValue, outgoingTransitionTypes);\r\n                            if (differenceBetweenTypes.length > 0) {\r\n                                intersectedValues.push(...differenceBetweenTypes);\r\n                                outgoingTransitionTypes = [];\r\n                            }\r\n                        }\r\n\r\n                        if (intersectedValues.length > 0 && startStepId !== endStepId) {\r\n\r\n                            let currentNewTransition = _.find(this.newTransitions, newTransition => (newTransition.startStepId === startStepId && newTransition.endStepId === endStepId));\r\n                            let currentTransitionId;\r\n                            if (_.isUndefined(currentNewTransition) || !abilityToTransferCertify ||\r\n                                !abilityToTransferReports) {\r\n                                currentTransitionId = uuidv4();\r\n                                this.newTransitions = {\r\n                                    ...this.newTransitions,\r\n                                    [currentTransitionId]: {\r\n                                        id: currentTransitionId,\r\n                                        startStepId: startStepId,\r\n                                        endStepId: endStepId,\r\n                                        selected: false,\r\n                                        highlighted: false,\r\n                                        intersected: false,\r\n                                    }\r\n                                };\r\n\r\n                                this.newTransitionsLayout = {\r\n                                    ...this.newTransitionsLayout,\r\n                                    [currentTransitionId]: {\r\n                                        start: this.allTransitionLayout[incomeProperty.transitionId].start,\r\n                                        end: this.allTransitionLayout[outgoingProperty.transitionId].end\r\n                                    }\r\n                                };\r\n                            } else {\r\n                                currentTransitionId = currentNewTransition.id;\r\n                            }\r\n\r\n                            this.newTransitionsProperties.push({\r\n                                transitionId: currentTransitionId,\r\n                                name: \"types\",\r\n                                value: intersectedValues\r\n                            });\r\n\r\n                            if (!_.isUndefined(_.find(this.allTransitionProperties, property => (property.transitionId === incomeProperty.transitionId &&\r\n                                    property.name === 'certify')))) {\r\n                                this.newTransitionsProperties.push({\r\n                                    transitionId: currentTransitionId,\r\n                                    name: 'certify',\r\n                                    value: _.find(this.allTransitionProperties, property => (property.transitionId === incomeProperty.transitionId &&\r\n                                        property.name === 'certify')).value\r\n                                });\r\n                            }\r\n                            if (!_.isUndefined(_.find(this.allTransitionProperties, property => (property.transitionId === incomeProperty.transitionId &&\r\n                                    property.name === 'create_report')))) {\r\n                                let newIncomeProperty = _.find(this.allTransitionProperties, property => (property.transitionId === incomeProperty.transitionId &&\r\n                                    property.name === 'create_report'));\r\n                                let certifyValue = newIncomeProperty.value.checked ? newIncomeProperty.value.values : [];\r\n                                this.newTransitionsProperties.push({\r\n                                    transitionId: currentTransitionId,\r\n                                    name: 'create_report',\r\n                                    value: {checked: newIncomeProperty.value.checked, values: certifyValue}\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        });\r\n        let currentTransition = _.omitBy(transitions, transition => transition.startStepId === this.stepId || transition.endStepId === this.stepId);\r\n        return {...currentTransition, ...this.newTransitions};\r\n    }\r\n\r\n    revertRemoveTransitionConected(transitions) {\r\n        transitions = _.pickBy(transitions, (transition, key) => _.isUndefined(this.newTransitions[key]));\r\n        _.assign(transitions, this.deletedTransition);\r\n        return {...transitions};\r\n    }\r\n\r\n    applyRemoveTransitionConnectedProperties(transitionProperties) {\r\n        let tempTransitionProperties = this.allTransitionProperties;\r\n        _.mapValues(this.allTransitionProperties, transitionProperty => {\r\n            _.mapValues(this.deletedTransition, (value, key) => {\r\n                if (key === transitionProperty.transitionId) {\r\n                    this.transitionConnectedProperties = _.isNull(this.transitionConnectedProperties) ? {...transitionProperty} : _.concat(this.transitionConnectedProperties, {...transitionProperty});\r\n                    tempTransitionProperties = _.filter(tempTransitionProperties, transitionProperty => key !== transitionProperty.transitionId);\r\n                }\r\n            })\r\n        });\r\n        return [...tempTransitionProperties, ...this.newTransitionsProperties];\r\n    }\r\n\r\n    revertRemoveTransitionConnectedProperties(transitionProperties) {\r\n        return this.originProperties\r\n    }\r\n\r\n    applyRemoveTransitionConnectionLayout(transitionsLayout) {\r\n        let tempTransitionsLayout = transitionsLayout;\r\n        _.mapValues(tempTransitionsLayout, (value, key) => {\r\n            let tempKey = key;\r\n            let tempValue = value;\r\n            _.mapValues(this.deletedTransition, (value, key) => {\r\n                if (key === tempKey) {\r\n                    this.transitionConnectedLayout = _.assign(this.transitionConnectedLayout, {[key]: {...tempValue}});\r\n                    tempTransitionsLayout = _.omitBy(tempTransitionsLayout, (value, key) => key === tempKey);\r\n                }\r\n            })\r\n        });\r\n        return _.merge(tempTransitionsLayout, this.newTransitionsLayout);\r\n    }\r\n\r\n    revertRemoveTransitionConnectionLayout(transitionsLayout) {\r\n        let delTransitionConnectionLayout = this.transitionConnectedLayout;\r\n        transitionsLayout = _.pickBy(transitionsLayout, (transitionLayout, key) => _.isUndefined(this.newTransitionsLayout[key]));\r\n        return _.assign(transitionsLayout, {...delTransitionConnectionLayout});\r\n    }\r\n}","import {createAction, handleActions} from 'redux-actions';\r\nimport {createSelector} from 'reselect';\r\nimport {isProcessPlanLoaded} from './processPlan';\r\nimport _ from 'lodash';\r\nimport {RECT_OFFSET} from \"../../components/drawingArea/step/Step\";\r\nimport {applyChange} from './changeStack';\r\nimport {AddStepChange} from '../model/AddStep';\r\nimport {InsertNewStepIntoTransition} from '../model/InsertNewStepIntoTransition';\r\nimport {\r\n    getIdOfIntersectedTransition,\r\n    getSelectedTransition,\r\n    getTransitionsByEndStepId,\r\n    getTransitionsByStartStepId\r\n} from \"./transitions\";\r\nimport {availableTransitionsByStepType} from \"../../api/processPlanConversion\";\r\nimport {getTransitionTypesByStartStepId} from \"./transitionProperties\";\r\nimport {getStepAvailableObjectReferenceValidationTooltip} from \"./availableObjects\";\r\nimport {getStepAvailabilityById} from './stepProperties';\r\nimport {getTranslate} from 'react-localize-redux';\r\nimport {translatedNativeTransitionTypes} from '../../dictionary';\r\nimport {getScale, getSnapToGrid, getSvgPosition} from '../modules/drawingArea';\r\nimport {AddTransitionForInsertStep} from '../model/AddTransitionForInsertStep';\r\nimport {RemoveStepChange} from \"../model/RemoveStep\";\r\n\r\nconst NO_INCOMING_TRANSITIONS = 'NG_PPE_No_incoming_transition_long';\r\nconst NO_TRANSITIONS_FROM_START = 'NG_PPE_No_transition_from_start_long';\r\nconst NO_TRANSITIONS_TO_END = 'NG_PPE_No_transition_to_end_long';\r\nconst NOT_ALL_POSSIBLE_OUTGOING_TRANSITIONS_TYPES = 'NG_PPE_NOT_ALL_POSSIBLE_OUTGOING_TRANSITIONS_TYPES_long';\r\n\r\n//- Actions\r\nexport const selectStep = createAction('STEP_SELECT', id => id);\r\nexport const highlightStep = createAction('STEP_HIGHLIGHT', id => id);\r\nexport const dropStep = (id, type, position) => (dispatch, getState) => {\r\n    dispatch(applyChange(new AddStepChange(id, type, position, getState().drawingArea.scale,\r\n        getState().drawingArea.viewportPosition, getState().drawingArea.snapToGrid)));\r\n};\r\nexport const dropStepIntoTransition = (stepId, type, position, transitionId, newTransitionId) => (dispatch, getState) => {\r\n    dispatch(applyChange(new InsertNewStepIntoTransition(stepId, type, position, transitionId, newTransitionId, getScale(getState()),\r\n        getSvgPosition(getState()), getSnapToGrid(getState()))))\r\n};\r\nexport const dropExistingStepIntoTransition = (stepId, newTransitionId) => (dispatch, getState) => {\r\n    dispatch(applyChange(new AddTransitionForInsertStep(stepId, getStepTypeById(getState(), stepId),\r\n        getIdOfIntersectedTransition(getState()), newTransitionId)))\r\n};\r\nexport const removeStep = (id) => (dispatch, getState) => {\r\n    dispatch(applyChange(new RemoveStepChange(id, getState().transitionProperties, getState().transitionsLayout, getState().steps)));\r\n};\r\n\r\nexport const checkIsAnchorsIntersectedByTransition = createAction(\"ANCHORS_INTERSECT\", (id, transitions, transitionsLayout) => ({\r\n    id,\r\n    transitions,\r\n    transitionsLayout\r\n}));\r\nexport const checkIsAnchorsImposed = (id) => (dispatch, getState) => {\r\n    dispatch(checkIsAnchorsIntersectedByTransition(id, getState().transitions, getState().transitionsLayout))\r\n};\r\n\r\n//- State\r\nconst initialState = {};\r\n\r\n//- Reducers\r\nexport default handleActions({\r\n    PROCESS_PLAN_LOAD: (state, action) => {\r\n        return action.payload.steps;\r\n    },\r\n    STEP_SELECT: (state, action) => {\r\n        if (_.isNil(action.payload) || action.payload === 'start') {\r\n            return _.mapValues(state, step => ({...step, selected: false}));\r\n        }\r\n        if (state[action.payload].selected) {\r\n            return state;\r\n        }\r\n\r\n        return _.mapValues(state, (step, id) => {\r\n            if (id === action.payload) {\r\n                return {...step, selected: true};\r\n            } else {\r\n                return step.selected ? {...step, selected: false} : step;\r\n            }\r\n        });\r\n    },\r\n    STEP_HIGHLIGHT: (state, action) => {\r\n        if (_.isNil(action.payload)) {\r\n            return _.mapValues(state, step => ({...step, highlighted: false}));\r\n        }\r\n        return _.mapValues(state, step => step.id === action.payload ? {...step, highlighted: true} : step);\r\n    },\r\n    CHANGE_APPLY: (state, {payload: change}) => {\r\n        switch (change.description) {\r\n            case 'Remove step':\r\n                return change.applyRemoveStep(state);\r\n            case 'Add step':\r\n                return change.applyAddStep(state);\r\n            case 'Generate auto layout':\r\n                return change.applyLayoutAutoGenerationForSteps(state);\r\n            case 'Insert new step into transition':\r\n                return change.applyInsertStep(state);\r\n            case 'Create transitions for insert step':\r\n                return change.applyInsertStepForAnchors(state);\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    CHANGE_REVERT: (state, {payload: change}) => {\r\n        switch (change.description) {\r\n            case 'Remove step':\r\n                return change.revertRemoveStep(state);\r\n            case 'Add step':\r\n                return change.revertAddStep(state);\r\n            case 'Generate auto layout':\r\n                return change.revertLayoutAutoGenerationForSteps(state);\r\n            case 'Insert new step into transition':\r\n                return change.revertInsertStep(state);\r\n            case 'Create transitions for insert step':\r\n                return change.revertInsertStepForAnchors(state);\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    ANCHORS_INTERSECT: (state, action) => {\r\n        let imposedTransition = _.find(action.payload.transitions, transition => transition.intersected);\r\n        let imposedDirection = imposedTransition ? _.find(action.payload.transitionsLayout, (layout, transitionId) => transitionId === imposedTransition.id) : false;\r\n        return _.mapValues(state, step => {\r\n            if (step.id === action.payload.id) {\r\n                return imposedDirection ?\r\n                    {\r\n                        ...step,\r\n                        intersectedAnchors: [imposedDirection.start.position, imposedDirection.end.position]\r\n                    } :\r\n                    {\r\n                        ...step,\r\n                        intersectedAnchors: []\r\n                    }\r\n            } else return step\r\n        })\r\n    }\r\n}, initialState);\r\n\r\n//- Selectors\r\nexport const getSteps = state => state.steps;\r\n\r\nexport const getAllStepIds = createSelector(\r\n    isProcessPlanLoaded,\r\n    getSteps,\r\n    (loaded, steps) => loaded ? ['start', ...Object.keys(steps), 'end'] : []\r\n);\r\n\r\nexport const getAllFilePickupStepIds = createSelector(\r\n    isProcessPlanLoaded,\r\n    getSteps,\r\n    (loaded, steps) => loaded ? _.chain(steps).filter(step => step.type === 'filepickup').map(step => step.id).value() : []\r\n);\r\n\r\nexport const getSelectedStep = createSelector(\r\n    getSteps,\r\n    steps => _.find(steps, step => step.selected === true)\r\n);\r\n\r\nexport const getStepById = (state, stepId) => {\r\n    return _.find(getSteps(state), step => step.id === stepId);\r\n};\r\n\r\nexport const getStepTypeById = (state, stepId) => {\r\n    let step = getStepById(state, stepId);\r\n    return _.isNil(step) ? null : step.type;\r\n};\r\n\r\nexport const isStepHighlighted = (state, id) => {\r\n    let selectedTransition = getSelectedTransition(state);\r\n    return !_.isNil(selectedTransition) && (selectedTransition.startStepId === id || selectedTransition.endStepId === id);\r\n};\r\n\r\nexport const getRequiredTransitions = (state, stepId) => {\r\n    let stepAvailability = getStepAvailabilityById(state, stepId);\r\n    if (stepAvailability === true) {\r\n        // Step enabled => require all meaningful step transition\r\n        return _.without(availableTransitionsByStepType[getStepTypeById(state, stepId)], 'if_disabled');\r\n    } else if (stepAvailability === false) {\r\n        // Step disabled => require if_disabled transition only\r\n        return ['if_disabled'];\r\n    } else {\r\n        // Step availability is defined by variable => require all transitions\r\n        return availableTransitionsByStepType[getStepTypeById(state, stepId)];\r\n    }\r\n};\r\n\r\nexport const getStepValidationTooltips = (state, id) => {\r\n    let translate = getTranslate(state.localize);\r\n    switch (id) {\r\n        case 'start':\r\n            return _.isEmpty(getTransitionsByStartStepId(state, id)) ? [translate(NO_TRANSITIONS_FROM_START)] : [];\r\n        case 'end':\r\n            return _.isEmpty(getTransitionsByEndStepId(state, id)) ? [translate(NO_TRANSITIONS_TO_END)] : [];\r\n        default:\r\n            let tooltips = [];\r\n            if (_.isEmpty(getTransitionsByEndStepId(state, id))) {\r\n                tooltips.push(translate(NO_INCOMING_TRANSITIONS));\r\n            }\r\n\r\n            let requiredTransitionTypes = getRequiredTransitions(state, id);\r\n            let definedTransitionTypes = getTransitionTypesByStartStepId(state, id);\r\n            if (_.difference(requiredTransitionTypes, definedTransitionTypes).length !== 0) {\r\n                let translatedTypes = _.chain(requiredTransitionTypes).map(type => translate(translatedNativeTransitionTypes[type])).join(', ').value();\r\n                tooltips.push(translate(NOT_ALL_POSSIBLE_OUTGOING_TRANSITIONS_TYPES, {events: translatedTypes}));\r\n            }\r\n            return tooltips;\r\n    }\r\n};\r\n\r\nexport const getAllStepsValidationTooltips = createSelector(\r\n    state => state,\r\n    getAllStepIds,\r\n    (state, allStepIds) => _.chain(allStepIds)\r\n        .map(id => [id, [...getStepValidationTooltips(state, id), ...getStepAvailableObjectReferenceValidationTooltip(state, id)]])\r\n        .fromPairs()\r\n        .value()\r\n);\r\n\r\n//- Utils\r\nexport const calculateAnchorCoordinatesByPosition = (position, stepLayout) => {\r\n    switch (position) {\r\n        case 'top':\r\n            return {\r\n                x: stepLayout.position.x + stepLayout.size.width / 2 + 2 * RECT_OFFSET,\r\n                y: stepLayout.position.y + RECT_OFFSET\r\n            };\r\n        case 'right':\r\n            return {\r\n                x: stepLayout.position.x + stepLayout.size.width + RECT_OFFSET,\r\n                y: stepLayout.position.y + stepLayout.size.height / 2 + RECT_OFFSET\r\n            };\r\n        case 'bottom':\r\n            return {\r\n                x: stepLayout.position.x + stepLayout.size.width / 2 + 2 * RECT_OFFSET,\r\n                y: stepLayout.position.y + stepLayout.size.height + RECT_OFFSET\r\n            };\r\n        case 'left':\r\n            return {\r\n                x: stepLayout.position.x + RECT_OFFSET,\r\n                y: stepLayout.position.y + stepLayout.size.height / 2 + RECT_OFFSET\r\n            };\r\n        default:\r\n            return null;\r\n    }\r\n};","import {Change} from './Change';\r\nimport _ from 'lodash';\r\n\r\nexport class MoveStepChange extends Change {\r\n    constructor(stepId, startPosition, newPosition) {\r\n        super('Move step');\r\n        this.stepId = stepId;\r\n        this.newPosition = newPosition;\r\n        this.oldPosition = startPosition;\r\n    }\r\n    applyStepsLayout(stepsLayout) {\r\n        return _.mapValues(stepsLayout, (stepLayout, id) => {\r\n            if (id === this.stepId) {\r\n                return {...stepLayout, position: this.newPosition};\r\n            }\r\n            return stepLayout;\r\n        });\r\n    }\r\n    revertStepsLayout(stepsLayout) {\r\n        return _.mapValues(stepsLayout, (stepLayout, id) => {\r\n            if (id === this.stepId) {\r\n                return {...stepLayout, position: this.oldPosition};\r\n            }\r\n            return stepLayout;\r\n        });\r\n    }\r\n}","import {connect} from 'react-redux'\r\nimport Step from './Step'\r\nimport {moveStep, updateStepsLayoutPosition, updateStepsLayoutSize} from '../../../redux/modules/stepsLayout';\r\nimport {getStepText} from \"../../../redux/modules/availableObjects\";\r\nimport {\r\n    checkIsAnchorsImposed,\r\n    dropExistingStepIntoTransition,\r\n    isStepHighlighted,\r\n    removeStep,\r\n    selectStep\r\n} from \"../../../redux/modules/steps\";\r\nimport {\r\n    checkIsTransitionImposed,\r\n    getStepDependenceFromTransitions,\r\n    highlightElement,\r\n    isExistImposedTransition,\r\n    selectTransition\r\n} from \"../../../redux/modules/transitions\";\r\nimport {isLeftTopAngleVisible} from \"../../../redux/modules/connectionsLayout\";\r\nimport {\r\n    getScale,\r\n    getSelectedStepId,\r\n    getSnapToGrid,\r\n    getSvgPosition,\r\n    selectAnotherElement,\r\n    selectDrawingArea,\r\n    startTempTransitionByShortcut\r\n} from \"../../../redux/modules/drawingArea\";\r\nimport {\r\n    changeTransitionPosition,\r\n    endTransitionCreation,\r\n    removeTempTransition,\r\n    startTempTransition,\r\n    updateTempTransitionEndPoint\r\n} from \"../../../redux/modules/tempTransition\";\r\n\r\nimport {availableTransitionsByStepType} from \"../../../api/processPlanConversion\";\r\nimport {getTransitionTypesByStartStepId} from \"../../../redux/modules/transitionProperties\";\r\nimport _ from 'lodash';\r\nimport {getStepAvailabilityById, getStepPropertyByName} from \"../../../redux/modules/stepProperties\";\r\nimport {\r\n    modifyingConnection,\r\n    modifyingTransition,\r\n    setCreatingConnectionType,\r\n    setCreatingTransitionType\r\n} from \"../../../redux/modules/transitionActionType\";\r\nimport {DRAWING_AREA, getFocusedArea, setFocusOnGlobalArea} from \"../../../redux/modules/processPlan\";\r\nimport {applyChange} from '../../../redux/modules/changeStack';\r\nimport {MoveStepChange} from '../../../redux/model/MoveStep';\r\nimport uuidv4 from \"uuid/v4\";\r\n\r\n\r\nexport const mapStateToProps = (state, {id}) => {\r\n    let step = state.steps[id];\r\n    let layout = state.stepsLayout[id];\r\n    let type = id === 'start' || id === 'end' ? id : step.type;\r\n    let availableTransitionTypes = availableTransitionsByStepType[type];\r\n    let existingTransitionTypes = getTransitionTypesByStartStepId(state, id);\r\n    let stepIdProperty = getStepPropertyByName(state, id, 'step_id');\r\n    let snapToGrid = getSnapToGrid(state);\r\n    let stepAvailability = getStepAvailabilityById(state, id);\r\n    return {\r\n        className: id === 'start' || id === 'end' ? 'start-end' : step.type,\r\n        text: id === 'start' || id === 'end' ? id : getStepText(state, id),\r\n        position: layout.position,\r\n        size: layout.size,\r\n        selected: getSelectedStepId(state) === id,\r\n        focused: getSelectedStepId(state) === id && getFocusedArea(state) === DRAWING_AREA,\r\n        intersectedAnchors: id === 'start' || id === 'end' ? [] : step.intersectedAnchors,\r\n        highlighted: id === 'start' || id === 'end' ? false : (step.highlighted || isStepHighlighted(state, id)),\r\n        selectable: !(id === 'start' || id === 'end'),\r\n        transitionCanStart: !(_.difference(availableTransitionTypes, existingTransitionTypes).length === 0),\r\n        connectionCanStart: !_.isNil(stepIdProperty) && _.isNil(stepIdProperty.value),\r\n        connectionAnchorIsVisible: isLeftTopAngleVisible(state, id),\r\n        modifyingTransition: modifyingTransition(state),\r\n        modifyingConnection: modifyingConnection(state),\r\n        pickUpFile: type === 'filepickup',\r\n        zoomScale: getScale(state),\r\n        svgPosition: getSvgPosition(state),\r\n        snapToGrid: snapToGrid,\r\n        stepAvailability: (stepAvailability) ? ' enableStep' : ' disableStep',\r\n        anchorStartEndAvailability: id !== 'end',\r\n        isExistDependentTransition: getStepDependenceFromTransitions(state, id),\r\n        isIntersected: isExistImposedTransition(state)\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, {id}) => {\r\n    return {\r\n        onStepPositionChangeEnd: (startPosition, position) => {\r\n            dispatch(applyChange(new MoveStepChange(id, startPosition, position)));\r\n        },\r\n        onStepPositionChange: (position) => {\r\n            dispatch(updateStepsLayoutPosition(id, position));\r\n        },\r\n        onStepSelect: () => {\r\n            dispatch(selectStep(id));\r\n            dispatch(selectTransition(null));\r\n            dispatch(selectDrawingArea(null));\r\n        },\r\n        onStepHighlight: () => {\r\n            dispatch(highlightElement(id, 'step'));\r\n        },\r\n        onStepHighlightReset: () => {\r\n            dispatch(highlightElement(null));\r\n        },\r\n        onTransitionCreationStart: (position) => {\r\n            if (position === 'left-top-angle') {\r\n                dispatch(setCreatingConnectionType());\r\n            } else {\r\n                dispatch(setCreatingTransitionType());\r\n            }\r\n            dispatch(startTempTransition(id, position));\r\n        },\r\n        onTransitionCreationEnd: (position) => {\r\n            dispatch(endTransitionCreation(id, position));\r\n        },\r\n        onAnchorMouseOver: (position) => {\r\n            dispatch(changeTransitionPosition(position === 'left-top-angle' ? 'left' : position));\r\n        },\r\n        onAnchorMouseOut: () => {\r\n            dispatch(changeTransitionPosition(null));\r\n        },\r\n        onMoveStep: (direction) => {\r\n            dispatch(moveStep(id, direction));\r\n        },\r\n        onRemoveStep: () => {\r\n            if (id !== 'start' && id !== 'end') {\r\n                dispatch(removeStep(id));\r\n                dispatch(selectStep(null));\r\n                dispatch(selectDrawingArea(true));\r\n                dispatch(setFocusOnGlobalArea(DRAWING_AREA));\r\n            }\r\n        },\r\n        onTransitionCreationStartByShortcut: (position) => {\r\n            dispatch(startTempTransitionByShortcut(position, id));\r\n        },\r\n        onAnotherElementSelect: (direction) => {\r\n            dispatch(selectAnotherElement(direction));\r\n        },\r\n        onCreateTempTransitionByTouch: (coordinates) => {\r\n            dispatch(updateTempTransitionEndPoint(coordinates))\r\n        },\r\n        onDeleteTempTransition: () => {\r\n            dispatch(removeTempTransition());\r\n            dispatch(selectDrawingArea(null));\r\n            dispatch(selectStep(null));\r\n        },\r\n        onAddTransition: (stepId, position) => {\r\n            dispatch(endTransitionCreation(stepId, position))\r\n        },\r\n        onTransitionOver: (position) => {\r\n            dispatch(checkIsTransitionImposed(position));\r\n            dispatch(checkIsAnchorsImposed(id))\r\n        },\r\n        onDropStep: () => {\r\n            let newTransitionId = uuidv4();\r\n            dispatch(selectDrawingArea(true));\r\n            dispatch(selectStep(id));\r\n            dispatch(dropExistingStepIntoTransition(id, newTransitionId));\r\n        },\r\n        onSizeChange: (size) => {\r\n            dispatch(updateStepsLayoutSize(id, size));\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Step);","import {connect} from 'react-redux'\r\nimport Transition from './Transition'\r\n\r\nimport {calculateTransitionPoint} from \"../../../redux/modules/transitionsLayout\";\r\nimport {calculatePosition, endTransitionCreation} from \"../../../redux/modules/tempTransition\";\r\nimport {getStepLayoutById} from \"../../../redux/modules/stepsLayout\";\r\nimport {calculateTransitionPoints} from \"./Transition.container\";\r\nimport {RECT_OFFSET} from \"../step/Step\";\r\nimport {\r\n    getActionType,\r\n    UPDATING_TRANSITION_START_POINT\r\n} from \"../../../redux/modules/transitionActionType\";\r\nimport {\r\n    changeTempTransitionPositionByShortcut, endTransitionCreationByShortcut,\r\n    getScale, getSvgPosition, updateTempTransitionByShortcut\r\n} from \"../../../redux/modules/drawingArea\";\r\nimport {getTranslate} from 'react-localize-redux';\r\n\r\nexport const mapStateToProps = (state) => {\r\n    let tempTransition = state.tempTransition;\r\n    let actionType = getActionType(state);\r\n\r\n    if (tempTransition) {\r\n        let endPosition = tempTransition.end.position || calculatePosition(tempTransition.start.x, tempTransition.start.y, tempTransition.end.x, tempTransition.end.y);\r\n        let startPosition = tempTransition.start.position || calculatePosition(tempTransition.end.x, tempTransition.end.y, tempTransition.start.x, tempTransition.start.y);\r\n\r\n        let startStepLayout = !(actionType === UPDATING_TRANSITION_START_POINT) ? getStepLayoutById(state, tempTransition.start.stepId) : {\r\n            position: {x: tempTransition.start.x - 2 * RECT_OFFSET, y: tempTransition.start.y - RECT_OFFSET},\r\n            size: {width: 0, height: 0}\r\n        };\r\n\r\n        let endStepLayout = {\r\n            position: {x: tempTransition.end.x - 2 * RECT_OFFSET, y: tempTransition.end.y - RECT_OFFSET},\r\n            size: {width: 0, height: 0}\r\n        };\r\n\r\n        let tempTransitionLayout = {\r\n            start: {position: startPosition},\r\n            end: {position: endPosition}\r\n        };\r\n\r\n        return {\r\n            points: calculateTransitionPoints(startStepLayout, endStepLayout, tempTransitionLayout),\r\n            className: '',\r\n            start: calculateTransitionPoint(startStepLayout, startPosition),\r\n            end: calculateTransitionPoint(endStepLayout, endPosition),\r\n            arrowType: endPosition,\r\n            selected: true,\r\n            selectable: true,\r\n            focused: true,\r\n            scale: getScale(state),\r\n            svgPosition: getSvgPosition(state),\r\n            highlighted: false,\r\n            showTransitionInfo: false,\r\n            translate: getTranslate(state.localize)\r\n        }\r\n    }\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onArrowKeyDown: (direction) => {\r\n            if (direction === 'right' || direction === 'left') {\r\n                dispatch(updateTempTransitionByShortcut(direction));\r\n            } else {\r\n                dispatch(changeTempTransitionPositionByShortcut(direction));\r\n            }\r\n        },\r\n        onRemoveTransition: () => {\r\n            dispatch(endTransitionCreation(null));\r\n        },\r\n        onEnterKeyDown: () => {\r\n            dispatch(endTransitionCreationByShortcut());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Transition)","import {connect} from 'react-redux'\r\nimport {getTranslate} from 'react-localize-redux';\r\n\r\nimport Transition from './Transition'\r\nimport {getScale, getSvgPosition} from \"../../../redux/modules/drawingArea\";\r\nimport {calculateTransitionPoint} from \"../../../redux/modules/transitionsLayout\";\r\nimport {calculatePosition} from \"../../../redux/modules/tempTransition\";\r\nimport {calculateTransitionPoints} from \"./Transition.container\";\r\nimport {RECT_OFFSET} from \"../step/Step\";\r\n\r\nexport const mapStateToProps = (state) => {\r\n    let tempTransition = state.tempTransition;\r\n    if (tempTransition) {\r\n        let startStepLayout = {\r\n            position: {x: tempTransition.start.x - RECT_OFFSET , y: tempTransition.start.y},\r\n            size: {width: 0, height: 0}\r\n        };\r\n\r\n        let endStepLayout = {\r\n            position: {x: tempTransition.end.x - 2 * RECT_OFFSET, y: tempTransition.end.y - RECT_OFFSET},\r\n            size: {width: 0, height: 0}\r\n        };\r\n\r\n        let endPosition = tempTransition.end.position || calculatePosition(startStepLayout.position.x, startStepLayout.position.y, endStepLayout.position.x, endStepLayout.position.y);\r\n        let startPosition = startStepLayout.position.x >= endStepLayout.position.x + endStepLayout.size.width / 2 + RECT_OFFSET ? 'left' : 'top';\r\n\r\n        let tempTransitionLayout = {\r\n            start: {position: startPosition},\r\n            end: {position: endPosition}\r\n        };\r\n\r\n        return {\r\n            points: calculateTransitionPoints(startStepLayout, endStepLayout, tempTransitionLayout),\r\n            className: 'connection ',\r\n            start: calculateTransitionPoint(startStepLayout, startPosition),\r\n            end: calculateTransitionPoint(endStepLayout, endPosition),\r\n            arrowType: null,\r\n            selected: false,\r\n            selectable: false,\r\n            focused: false,\r\n            scale: getScale(state),\r\n            svgPosition: getSvgPosition(state),\r\n            highlighted: false,\r\n            showTransitionInfo: false,\r\n            translate: getTranslate(state.localize)\r\n        }\r\n    }\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Transition)","import {Change} from './Change';\r\nimport _ from 'lodash';\r\n\r\nexport class RemoveConnection extends Change {\r\n    constructor(startStepId) {\r\n        super('Remove connection');\r\n        this.startStepId = startStepId;\r\n\r\n        this.connectedLayout = null;\r\n        this.connectedProperties = null;\r\n    }\r\n\r\n    applyRemoveConnection(connections) {\r\n        this.connectedLayout = _.filter(connections, connection => connection.startStepId === this.startStepId);\r\n        return _.filter(connections, connection => connection.startStepId !== this.startStepId);\r\n    }\r\n    revertRemoveConnection(transitions) {\r\n        return _.concat(transitions, this.connectedLayout);\r\n    }\r\n\r\n    applyRemoveConnectionProperty(properties){\r\n        return _.map(properties, property => {\r\n            if (property.stepId === this.startStepId && property.name === \"step_id\"){\r\n                this.connectedProperties = property.value;\r\n                property.value = null;\r\n            }\r\n            return property\r\n        });\r\n    }\r\n\r\n    revertRemoveConnectionProperty(properties){\r\n        return _.map(properties, property => {\r\n            if (property.stepId === this.startStepId && property.name === \"step_id\"){\r\n                property.value = this.connectedProperties;\r\n            }\r\n            return property\r\n        });\r\n    }\r\n}\r\n\r\n","import {connect} from 'react-redux'\r\nimport {getTranslate} from 'react-localize-redux';\r\n\r\nimport Transition from './Transition'\r\nimport {calculateTransitionPoint} from \"../../../redux/modules/transitionsLayout\";\r\nimport {getStepLayoutById} from \"../../../redux/modules/stepsLayout\";\r\nimport {calculateTransitionPoints} from \"./Transition.container\";\r\nimport {RECT_OFFSET} from \"../step/Step\";\r\nimport {startFilePickUpConnectionEndPointUpdate} from \"../../../redux/modules/tempTransition\";\r\nimport {setUpdatingConnectionType} from \"../../../redux/modules/transitionActionType\";\r\nimport {getScale, getSvgPosition, selectDrawingArea} from \"../../../redux/modules/drawingArea\";\r\nimport {selectTransition} from \"../../../redux/modules/transitions\";\r\nimport {selectStep} from \"../../../redux/modules/steps\";\r\nimport {RemoveConnection} from \"../../../redux/model/RemoveConnection\";\r\nimport {applyChange} from \"../../../redux/modules/changeStack\";\r\nimport {DRAWING_AREA, setFocusOnGlobalArea} from \"../../../redux/modules/processPlan\";\r\n\r\nexport const mapStateToProps = (state, {connection}) => {\r\n    let startStepLayout = {\r\n        position: {\r\n            x: getStepLayoutById(state, connection.startStepId).position.x - RECT_OFFSET,\r\n            y: getStepLayoutById(state, connection.startStepId).position.y\r\n        }, size: {height: 0, width: 0}\r\n    };\r\n\r\n    let endStepLayout = {\r\n        position: {\r\n            x: getStepLayoutById(state, connection.endStepId).position.x - RECT_OFFSET,\r\n            y: getStepLayoutById(state, connection.endStepId).position.y\r\n        }, size: {height: 0, width: 0}\r\n    };\r\n\r\n    let startPosition = startStepLayout.position.x >= endStepLayout.position.x + endStepLayout.size.width/2 + RECT_OFFSET ? 'left': 'top';\r\n    let endPosition = 'left';\r\n\r\n    let tempTransitionLayout = {\r\n        start: {position: startPosition},\r\n        end: {position: endPosition}\r\n    };\r\n\r\n    return {\r\n        points: calculateTransitionPoints(startStepLayout, endStepLayout, tempTransitionLayout),\r\n        className: 'connection ',\r\n        start: calculateTransitionPoint(startStepLayout, startPosition),\r\n        end: calculateTransitionPoint(endStepLayout, endPosition),\r\n        arrowType: null,\r\n        selected: false,\r\n        focused: false,\r\n        highlighted: false,\r\n        scale: getScale(state),\r\n        svgPosition: getSvgPosition(state),\r\n        showTransitionInfo: false,\r\n        translate: getTranslate(state.localize)\r\n    }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, {connection}) => {\r\n    return {\r\n        onStartTransitionPointUpdate: (coordinates, pointType) => {\r\n            if(pointType === 'end'){\r\n                dispatch(setUpdatingConnectionType());\r\n                dispatch(startFilePickUpConnectionEndPointUpdate(coordinates, connection));\r\n            }\r\n        },\r\n        onTransitionSelect: () => {\r\n            // We do not select pickup connection, so just reset selection\r\n            dispatch(selectTransition(null));\r\n            dispatch(selectStep(null));\r\n        },\r\n        onRemoveTransition: () => {\r\n            dispatch(applyChange(new RemoveConnection(connection.startStepId)));\r\n            dispatch(selectDrawingArea(true));\r\n            dispatch(setFocusOnGlobalArea(DRAWING_AREA));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Transition)","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Step from './step/Step.container';\r\nimport Transition from './transition/Transition.container';\r\nimport TempTransition from './transition/TempTransition.container';\r\nimport TempConnection from './transition/TempConnection.container';\r\nimport FilePickupConnectionLine from './transition/FilePickupConnectionLine.container';\r\n\r\nimport './DrawingArea.css';\r\nimport spinner from './spinner.svg';\r\nimport {HEADER_OFFSET} from \"../App\";\r\n\r\nclass DrawingArea extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.renderSteps = this.renderSteps.bind(this);\r\n        this.renderTransitions = this.renderTransitions.bind(this);\r\n        this.renderFilePickupConnection = this.renderFilePickupConnection.bind(this);\r\n    }\r\n\r\n    setDrawingArea = (drawingArea) => {\r\n        this.drawingArea = drawingArea;\r\n    };\r\n\r\n    render() {\r\n        if (!this.props.fetching) {\r\n            window.onresize=this.browserResize;\r\n            let viewBox = '' + this.props.viewportPosition.x + ' ' + this.props.viewportPosition.y + ' '\r\n                + this.props.viewportSize.width + ' ' + this.props.viewportSize.height;\r\n            \r\n            return (\r\n                <div ref={this.setDrawingArea}\r\n                     tabIndex=\"0\"\r\n                     className=\"svgContainer\"\r\n                     onMouseMove={this.handleTempTransitionUpdate}\r\n                     onMouseDown={this.handleDrawingAreaSelect}\r\n                     onKeyDown={this.handleKeyDown}>\r\n                    <svg\r\n                        role='figure'\r\n                        aria-label=\"canvas\"\r\n                        viewBox={viewBox}\r\n                        onMouseDown={this.handleMouseDown}\r\n                        onMouseUp={this.handleMouseUp}\r\n                        onTouchStart= {this.handleTouchStart}\r\n                        onTouchEnd= {this.handleTouchEnd}>\r\n                        {this.renderTransitions()}\r\n                        {this.renderFilePickupConnection()}\r\n                        {this.props.modifyingTransition && this.props.transitionCreationInProgress ?\r\n                            <TempTransition/> : null}\r\n                        {this.props.modifyingConnection && this.props.transitionCreationInProgress ?\r\n                            <TempConnection/> : null}\r\n                        {this.renderSteps()}\r\n                    </svg>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"loading\">\r\n                    <img src={spinner} alt=\"Loading\"/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderSteps() {\r\n        return this.props.steps.map(stepId => (\r\n            <Step id={stepId} key={stepId}\r\n                  isLockedProcessPlan={this.props.isLockedProcessPlan}\r\n                  validationTooltips={this.props.stepsValidationTooltips[stepId]}/>));\r\n    }\r\n\r\n    renderTransitions() {\r\n        return this.props.transitions.map(transitionId => (<Transition\r\n            id={transitionId}\r\n            types={this.props.transitionsTypes[transitionId]}\r\n            icons={this.props.transitionsIcons[transitionId]}\r\n            isLockedProcessPlan={this.props.isLockedProcessPlan}\r\n            validationTooltips={this.props.transitionsValidationTooltips[transitionId]}\r\n            key={transitionId}/>));\r\n    }\r\n\r\n    renderFilePickupConnection() {\r\n        return this.props.filePickupConnections.map(connection => (\r\n            <FilePickupConnectionLine connection={connection} key={`connection${connection.startStepId}`}/>));\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.focused && this.props.focused) {\r\n            this.drawingArea.focus();\r\n        }\r\n    }\r\n\r\n\r\n    handleTempTransitionUpdate = (e) => {\r\n        if (this.props.transitionCreationStarted) {\r\n            this.props.onUpdateTempTransition({\r\n                x: e.pageX ,\r\n                y: e.pageY - HEADER_OFFSET\r\n            });\r\n        }\r\n    };\r\n\r\n    handleTouchStart = (e) => {\r\n        this.haveChangedPosition = false;\r\n\r\n        this.computedPosition = {\r\n            x: e.targetTouches[0].pageX,\r\n            y: e.targetTouches[0].pageY,\r\n        };\r\n        document.addEventListener('touchmove', this.handleTouchMove);\r\n        document.addEventListener('touchend', this.handleTouchEnd);\r\n    };\r\n\r\n    handleTouchMove = (e) => {\r\n        // Handle move viewport\r\n        let xDiff = this.computedPosition.x - e.targetTouches[0].pageX;\r\n        let yDiff = this.computedPosition.y - e.targetTouches[0].pageY;\r\n        if (xDiff !== 0 || yDiff !== 0) {\r\n            this.haveChangedPosition = true;\r\n        }\r\n\r\n        this.computedPosition.x = e.targetTouches[0].pageX;\r\n        this.computedPosition.y = e.targetTouches[0].pageY;\r\n\r\n        let position = {\r\n            x: this.props.viewportPosition.x + (xDiff * this.props.scale),\r\n            y: this.props.viewportPosition.y + (yDiff * this.props.scale)\r\n        };\r\n\r\n        this.props.onMoveViewport(position);\r\n    };\r\n\r\n    handleTouchEnd = () => {\r\n        document.removeEventListener('touchmove', this.handleTouchMove);\r\n        document.removeEventListener('touchend', this.handleTouchStart);\r\n        this.computedPosition = {};\r\n    };\r\n\r\n    handleMouseDown = (e) => {\r\n        this.haveChangedPosition = false;\r\n\r\n        this.computedPosition = {\r\n            x: e.pageX,\r\n            y: e.pageY,\r\n        };\r\n\r\n        document.addEventListener('mousemove', this.handleMouseMove);\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    handleMouseMove = (e) => {\r\n        // Handle move viewport\r\n        let xDiff = this.computedPosition.x - e.pageX;\r\n        let yDiff = this.computedPosition.y - e.pageY;\r\n        if (xDiff !== 0 || yDiff !== 0) {\r\n            this.haveChangedPosition = true;\r\n        }\r\n\r\n        this.computedPosition.x = e.pageX;\r\n        this.computedPosition.y = e.pageY;\r\n\r\n        let position = {\r\n            x: this.props.viewportPosition.x + (xDiff * this.props.scale),\r\n            y: this.props.viewportPosition.y + (yDiff * this.props.scale),\r\n        };\r\n\r\n        this.props.onMoveViewport(position);\r\n    };\r\n\r\n\r\n    handleMouseUp = () => {\r\n        document.removeEventListener('mousemove', this.handleMouseMove);\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n        this.computedPosition = {};\r\n    };\r\n\r\n    browserResize=() =>{\r\n        let el= document.getElementById('mainSvgField');\r\n        let size = {\r\n            width: el.offsetWidth,\r\n            height: el.offsetHeight,\r\n        };\r\n        this.props.onBrowserChangeViewport(size);\r\n        this.drawingArea.focus();\r\n    };\r\n\r\n    handleDrawingAreaSelect = () => {\r\n        this.drawingArea.focus();\r\n        this.props.onDrawingAreaSelect();\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        e.preventDefault();\r\n        switch (e.key) {\r\n            case 'ArrowUp':\r\n                this.props.onArrowKeyDown();\r\n                break;\r\n            case 'ArrowDown':\r\n                this.props.onArrowKeyDown();\r\n                break;\r\n            case 'Escape':\r\n                this.props.onResetSelection();\r\n                break;\r\n            case 'Tab':\r\n                this.props.onMoveToAnotherGroup();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n}\r\n\r\nconst PositionShape = PropTypes.shape({\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired\r\n});\r\n\r\nconst SizeShape = PropTypes.shape({\r\n    width: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired\r\n});\r\n\r\nDrawingArea.propTypes = {\r\n    steps: PropTypes.arrayOf(PropTypes.string),\r\n    transitions: PropTypes.arrayOf(PropTypes.string),\r\n    transitionTypes: PropTypes.arrayOf(PropTypes.string),\r\n    transitionIcons: PropTypes.arrayOf(PropTypes.string),\r\n    filePickupConnections: PropTypes.arrayOf(PropTypes.object),\r\n    fetching: PropTypes.bool,\r\n    modifyingTransition: PropTypes.bool,\r\n    modifyingConnection: PropTypes.bool,\r\n    modifyingTransitionByMouse: PropTypes.bool,\r\n    transitionCreationInProgress: PropTypes.bool,\r\n    transitionCreationStarted: PropTypes.bool,\r\n    scale: PropTypes.number,\r\n    viewportPosition: PositionShape.isRequired,\r\n    viewportSize: SizeShape.isRequired,\r\n    selected: PropTypes.bool.isRequired,\r\n    focused: PropTypes.bool.isRequired,\r\n    onUpdateTempTransition: PropTypes.func,\r\n    onDrawingAreaSelect: PropTypes.func,\r\n    onMoveViewport: PropTypes.func,\r\n    onBrowserChangeViewport: PropTypes.func,\r\n    onMoveToAnotherGroup: PropTypes.func,\r\n    onResetSelection: PropTypes.func,\r\n    onArrowKeyDown: PropTypes.func\r\n};\r\n\r\nexport default DrawingArea;","import {createSelector} from 'reselect';\r\nimport _ from 'lodash';\r\n\r\nimport {getAllFilePickupStepIds, getSelectedStep} from './steps';\r\nimport {getStepProperties, propertyEditControls} from './stepProperties';\r\n\r\nexport const getAllFilePickupConnections = state =>\r\n    _.chain(getAllFilePickupStepIds(state))\r\n        .map(stepId => getStepProperties(state, stepId))\r\n        .flatten()\r\n        .filter(property => property.name === 'step_id')\r\n        .map(property => ({startStepId: property.stepId, endStepId: property.value}))\r\n        .filter(connection => !_.isNil(connection.endStepId))\r\n        .value();\r\n\r\nexport const getSelectedStepProps = createSelector(\r\n    state => state,\r\n    getSelectedStep,\r\n    (state, selectedStep) => _.isNil(selectedStep) ? [] : getStepProperties(state, selectedStep.id)\r\n);\r\n\r\nexport const getSelectedStepPropsWithControlDescriptors = createSelector(\r\n    state => state,\r\n    getSelectedStep,\r\n    getSelectedStepProps,\r\n    (state, step, selectedStepProps) => ([{\r\n        properties: _.map(selectedStepProps, property => ({\r\n            objectId: property.stepId,\r\n            name: property.name,\r\n            value: property.value,\r\n            type: step.type,\r\n            controlDescriptor: propertyEditControls[property.name](state, step)\r\n        }))\r\n    }])\r\n);\r\n","import {connect} from 'react-redux';\r\nimport {getAllStepIds, getAllStepsValidationTooltips, selectStep} from '../../redux/modules/steps';\r\nimport { getSelectedTransitionId, getTransitionIds,\r\n    selectTransition\r\n} from '../../redux/modules/transitions';\r\nimport {DRAWING_AREA, getFocusedArea, isProcessPlanLoaded} from \"../../redux/modules/processPlan\";\r\nimport {isAvailableObjectsLoaded} from \"../../redux/modules/availableObjects\";\r\nimport {updateViewportPosition, updateViewportSize, updateOriginalViewportSize} from \"../../redux/modules/drawingArea\";\r\n\r\nimport {selectDrawingArea, moveToAnotherGroup, getSelectedStepId} from \"../../redux/modules/drawingArea\";\r\n\r\nimport DrawingArea from './DrawingArea';\r\nimport {\r\n    continueTransitionCreation, transitionCreationInProgress,\r\n    transitionCreationStarted\r\n} from \"../../redux/modules/tempTransition\";\r\n\r\nimport {getAllFilePickupConnections} from '../../redux/modules/compositeSelectors';\r\nimport {\r\n    modifyingConnection, modifyingTransition, modifyingTransitionByMouse\r\n} from \"../../redux/modules/transitionActionType\";\r\nimport {\r\n    getAllTransitionIcons, getAllTransitionsPropertiesValidationTooltips,\r\n    getAllTransitionTypes\r\n} from \"../../redux/modules/transitionProperties\";\r\n\r\nimport _ from 'lodash';\r\n\r\nconst mapStateToProps = (state) => {\r\n    let drawingThisArea = state.drawingArea;\r\n\r\n    return {\r\n        steps: getAllStepIds(state),\r\n        transitions: getTransitionIds(state),\r\n        transitionsTypes: getAllTransitionTypes(state),\r\n        transitionsIcons: getAllTransitionIcons(state),\r\n        filePickupConnections: getAllFilePickupConnections(state),\r\n        fetching: !(isProcessPlanLoaded(state) && isAvailableObjectsLoaded(state)),\r\n        modifyingTransition: modifyingTransition(state),\r\n        modifyingConnection: modifyingConnection(state),\r\n        modifyingTransitionByMouse: modifyingTransitionByMouse(state),\r\n        transitionCreationInProgress: transitionCreationInProgress(state),\r\n        transitionCreationStarted: transitionCreationStarted(state),\r\n        scale: drawingThisArea.scale,\r\n        viewportSize: drawingThisArea.viewportSize,\r\n        viewportPosition: drawingThisArea.viewportPosition,\r\n        selected: drawingThisArea.selected,\r\n        focused: getFocusedArea(state) === DRAWING_AREA && _.isNil(getSelectedStepId(state)) && _.isNil(getSelectedTransitionId(state)),\r\n        transitionsValidationTooltips: getAllTransitionsPropertiesValidationTooltips(state),\r\n        stepsValidationTooltips: getAllStepsValidationTooltips(state)\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onUpdateTempTransition: (coordinates) => {\r\n            dispatch(continueTransitionCreation(coordinates))\r\n        },\r\n        onDrawingAreaSelect: () => {\r\n            dispatch(selectDrawingArea(true));\r\n            dispatch(selectStep(null));\r\n            dispatch(selectTransition(null));\r\n        },\r\n        onMoveViewport: (svgPosition) => {\r\n            dispatch(updateViewportPosition(svgPosition));\r\n        },\r\n        onBrowserChangeViewport:(viewPortSize) =>{\r\n            dispatch(updateViewportSize(viewPortSize));\r\n            dispatch(updateOriginalViewportSize(viewPortSize));\r\n        },\r\n        onMoveToAnotherGroup: () => {\r\n            dispatch(moveToAnotherGroup());\r\n        },\r\n        onResetSelection: () => {\r\n            dispatch(selectTransition(null));\r\n            dispatch(selectStep(null));\r\n            dispatch(selectDrawingArea(true));\r\n        },\r\n        onArrowKeyDown: () => {\r\n            dispatch(selectStep('start'));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DrawingArea)","import React, {Component} from 'react';\r\nimport './ZoomToolbar.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ZOOM_TIME_DELAY = 300;\r\n\r\nclass ZoomToolbar extends Component {\r\n    render() {\r\n        return (\r\n            <div className='zoomPanel'>\r\n                <div className='zoomIcon'\r\n                     title={this.props.translate(\"NG_PPE_Zoom_out_long\")}\r\n                     role='button'\r\n                     aria-label={this.props.translate(\"NG_PPE_Zoom_out_long\")}\r\n                     onMouseDown={this.onZoomOut}\r\n                     onMouseUp={this.onStopZoomOut}\r\n                     onMouseOut={this.onStopZooming}\r\n                     onTouchStart={this.onZoomOut}\r\n                     onTouchEnd={this.onStopZoomOut}>\r\n                    <i className=\"material-icons\">zoom_out</i>\r\n                </div>\r\n                <div className='zoomIcon'\r\n                     title={this.props.translate(\"NG_PPE_Reset_zoom_long\")}\r\n                     role='button'\r\n                     aria-label={this.props.translate(\"NG_PPE_Reset_zoom_long\")}\r\n                     onClick={this.onReset}>\r\n                    <span>{this.props.translate(\"NG_PPE_Reset_zoom_long\")}</span>\r\n                </div>\r\n                <div className='zoomIcon'\r\n                     title={this.props.translate(\"NG_PPE_Zoom_in_long\")}\r\n                     role='button'\r\n                     aria-label={this.props.translate(\"NG_PPE_Zoom_in_long\")}\r\n                     onMouseDown={this.onZoomIn}\r\n                     onMouseUp={this.onStopZoomIn}\r\n                     onMouseOut={this.onStopZooming}\r\n                     onTouchStart={this.onZoomIn}\r\n                     onTouchEnd={this.onStopZoomIn}>\r\n                    <i className=\"material-icons\">zoom_in</i>\r\n                </div>\r\n                <div className='zoomIcon'\r\n                     title={this.props.translate(\"NG_PPE_Fit_to_size_long\")}\r\n                     role='button'\r\n                     aria-label={this.props.translate(\"NG_PPE_Fit_to_size_long\")}\r\n                     onClick={this.onFitTheScreen}>\r\n                    <i className=\"material-icons\">zoom_out_map</i>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onZoomIn = () => {\r\n        this.mouseDownTimeout = setInterval(() => this.props.onChangeZoom(-1), ZOOM_TIME_DELAY);\r\n    };\r\n\r\n    onStopZooming = () => {\r\n        clearInterval(this.mouseDownTimeout);\r\n    };\r\n\r\n    onStopZoomIn = () => {\r\n        this.props.onChangeZoom(-1);\r\n        clearInterval(this.mouseDownTimeout);\r\n    };\r\n\r\n    onZoomOut = () => {\r\n        this.mouseDownTimeout = setInterval(() => this.props.onChangeZoom(1), ZOOM_TIME_DELAY);\r\n    };\r\n\r\n    onStopZoomOut = () => {\r\n        this.props.onChangeZoom(1);\r\n        clearInterval(this.mouseDownTimeout);\r\n    };\r\n\r\n    onFitTheScreen = () => {\r\n        this.props.onFitTheScreen();\r\n    };\r\n\r\n    onReset = () => {\r\n        this.props.onReset();\r\n    };\r\n}\r\n\r\nZoomToolbar.propTypes = {\r\n    translate: PropTypes.func.isRequired,\r\n    onChangeZoom: PropTypes.func.isRequired,\r\n    onFitTheScreen: PropTypes.func.isRequired,\r\n    onReset: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ZoomToolbar;\r\n","import {connect} from 'react-redux';\r\nimport {getTranslate} from 'react-localize-redux';\r\nimport ZoomToolbar from \"./ZoomToolbar\";\r\nimport {fitTheViewBox, incrementZoomScale,resetToTheBaseViewBox} from \"../../redux/modules/drawingArea\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        translate: getTranslate(state.localize)\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangeZoom: (sign) => dispatch(incrementZoomScale(sign)),\r\n        onFitTheScreen: () => dispatch(fitTheViewBox()),\r\n        onReset:() => dispatch(resetToTheBaseViewBox())\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ZoomToolbar);","import React, { Component } from 'react';\r\nimport './SidePanel.css';\r\n\r\nclass SidePanel extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"side-panel\">\r\n                <div className=\"side-panel-content\">\r\n                    <div>{this.props.children}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SidePanel;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './StepButton.css';\r\nimport {getIcon, RECT_OFFSET} from '../../../drawingArea/step/Step';\r\nimport {HEADER_OFFSET} from \"../../../App\";\r\nimport _ from 'lodash';\r\nimport {translatedStepTypes} from \"../../../../dictionary\"\r\n\r\nconst START_SCREEN_POSITION = 0;\r\n\r\nclass StepButton extends Component {\r\n    setStepButton = (stepButton) => {\r\n        this.stepButton = stepButton;\r\n    };\r\n\r\n    render() {\r\n        let className = 'step-button ' + this.props.type + (this.props.focused ? ' selected' : ' ') + (this.props.isLockedProcessPlan ? ' step-button-disabled ' : '');\r\n\r\n        return (\r\n            <div ref={this.setStepButton}\r\n                 role='button'\r\n                 tabIndex=\"0\"\r\n                 className={className}\r\n                 draggable={!this.props.isLockedProcessPlan}\r\n                 onDragStart={this.onDragStart}\r\n                 onTouchStart={this.onDragTouchStart}\r\n                 onTouchEnd={this.onDragEnd}>\r\n                <svg x=\"0\" y=\"0\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\">\r\n                    {getIcon(this.props.type)}\r\n                </svg>\r\n                <div className='step-button-name'>\r\n                    {this.props.translate(translatedStepTypes[this.props.type])}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.focused && this.props.focused) {\r\n            this.stepButton.focus();\r\n        }\r\n    }\r\n\r\n    onDragStart = (ev) => {\r\n        ev.dataTransfer.setData('text', JSON.stringify({\r\n            offsetX: ev.nativeEvent.offsetX,\r\n            offsetY: ev.nativeEvent.offsetY,\r\n            stepType: this.props.type\r\n        }));\r\n    };\r\n    onDragTouchStart = (ev) => {\r\n        let rect = ev.target.getBoundingClientRect();\r\n        this.offset = {\r\n            x: ev.targetTouches[0].pageX - rect.left,\r\n            y: ev.targetTouches[0].pageY - rect.top\r\n        };\r\n        document.addEventListener('touchmove', this.onDragTouchMove);\r\n    };\r\n\r\n    onDragTouchMove = (ev) => {\r\n        this.touchPosition = {\r\n            x: ev.targetTouches[0].pageX,\r\n            y: ev.targetTouches[0].pageY\r\n        };\r\n    };\r\n\r\n    onDragEnd = () => {\r\n        if (!_.isUndefined(this.touchPosition)) {\r\n            if (this.touchPosition.x < this.props.originalViewportSize.width &&\r\n                this.touchPosition.x > START_SCREEN_POSITION &&\r\n                this.touchPosition.y - HEADER_OFFSET < this.props.originalViewportSize.height &&\r\n                this.touchPosition.y - HEADER_OFFSET > START_SCREEN_POSITION) {\r\n                let position = {\r\n                    x: this.touchPosition.x - this.offset.x - RECT_OFFSET,\r\n                    y: this.touchPosition.y - this.offset.y - RECT_OFFSET - HEADER_OFFSET\r\n                };\r\n                this.props.onMobileDrop(this.props.type, position);\r\n            }\r\n        }\r\n        document.removeEventListener('touchmove', this.onDragTouchMove);\r\n    };\r\n}\r\n\r\nconst PositionShape = PropTypes.shape({\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired\r\n});\r\n\r\nconst SizeShape = PropTypes.shape({\r\n    width: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired\r\n});\r\n\r\nStepButton.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    focused: PropTypes.bool.isRequired,\r\n    originalViewportPosition: PositionShape.isRequired,\r\n    originalViewportSize: SizeShape.isRequired,\r\n    translate: PropTypes.func.isRequired,\r\n    onMobileDrop: PropTypes.func\r\n};\r\n\r\nexport default StepButton;\r\n\r\n","import {connect} from 'react-redux';\r\nimport StepButton from \"./StepButton\";\r\nimport {dropStep, selectStep} from \"../../../../redux/modules/steps\";\r\nimport uuidv4 from \"uuid/v4\";\r\nimport {selectDrawingArea} from \"../../../../redux/modules/drawingArea\";\r\nimport {getTranslate} from 'react-localize-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        originalViewportSize: state.drawingArea.originalViewportSize,\r\n        originalViewportPosition: state.drawingArea.originalViewportPosition,\r\n        translate: getTranslate(state.localize)\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onMobileDrop: (type, position) => {\r\n            let id = uuidv4();\r\n            dispatch(dropStep(id, type, position));\r\n            dispatch(selectDrawingArea('clicked'));\r\n            dispatch(selectStep(id));\r\n        }\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StepButton);","import React, {Component} from 'react';\r\nimport {STEP_TYPES} from \"../../../api/processPlanConversion\";\r\nimport SidePanel from '../SidePanel';\r\nimport StepButton from './stepButton/StepButton.container';\r\nimport './StepPanel.css';\r\nimport PropTypes from \"prop-types\";\r\nimport _ from 'lodash';\r\n\r\nclass StepPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {selectedStepButtonIndex: 0};\r\n    }\r\n\r\n    setStepPanel = (stepPanel) => {\r\n        this.stepPanel = stepPanel;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='step-panel' ref={this.setStepPanel} tabIndex=\"0\" onKeyDown={this.handleKeyDown}>\r\n                <SidePanel>\r\n                    {this.renderStepButtons()}\r\n                </SidePanel>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderStepButtons = () => {\r\n        return _.chain(Object.values(STEP_TYPES))\r\n            .filter(stepType => (stepType !== 'addfiles' || (stepType === 'addfiles' && this.props.addFilesAvailability)))\r\n            .map(stepType =>\r\n                <StepButton\r\n                    focused={Object.values(STEP_TYPES)[this.state.selectedStepButtonIndex] === stepType && this.props.focused}\r\n                    type={stepType}\r\n                    key={stepType}\r\n                    isLockedProcessPlan={this.props.isLockedProcessPlan}/>\r\n            )\r\n            .value()\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.focused && this.props.focused) {\r\n            this.setState({...this.state, selectedStepButtonIndex: 0});\r\n        }\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        switch (e.key) {\r\n            case 'ArrowUp':\r\n                if (this.state.selectedStepButtonIndex > 0) {\r\n                    this.setState({...this.state, selectedStepButtonIndex: this.state.selectedStepButtonIndex - 1});\r\n                }\r\n                break;\r\n            case 'ArrowDown':\r\n                if (this.state.selectedStepButtonIndex < Object.values(STEP_TYPES).length - 1) {\r\n                    this.setState({...this.state, selectedStepButtonIndex: this.state.selectedStepButtonIndex + 1});\r\n                }\r\n                break;\r\n            case 'Enter':\r\n                if (!this.props.isLockedProcessPlan) {\r\n                    this.props.onStepAdd(this.state.selectedStepButtonIndex);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n}\r\n\r\nStepPanel.propTypes = {\r\n    focused: PropTypes.bool.isRequired,\r\n    addFilesAvailability: PropTypes.bool.isRequired,\r\n    onStepAdd: PropTypes.func.isRequired\r\n};\r\nexport default StepPanel;\r\n","import {connect} from 'react-redux';\r\nimport StepPanel from \"./StepPanel\";\r\nimport {STEP_TYPES} from \"../../../api/processPlanConversion\";\r\nimport { selectStep} from \"../../../redux/modules/steps\";\r\nimport uuidv4 from \"uuid/v4\";\r\nimport {DRAWING_AREA, getFocusedArea, getAddFilesAvailability, setFocusOnGlobalArea, SIDE_PANEL} from \"../../../redux/modules/processPlan\";\r\nimport {applyChange} from \"../../../redux/modules/changeStack\";\r\nimport {AddStepChange} from \"../../../redux/model/AddStep\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        focused: getFocusedArea(state) === SIDE_PANEL,\r\n        addFilesAvailability: getAddFilesAvailability(state)\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onStepAdd: (index) => {\r\n            let type = Object.values(STEP_TYPES)[index];\r\n            if (type) {\r\n                let id = uuidv4();\r\n                dispatch(applyChange(new AddStepChange(id, type)));\r\n                dispatch(selectStep(id));\r\n                dispatch(setFocusOnGlobalArea(DRAWING_AREA));\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StepPanel)","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport './Select.css';\r\nimport {transltedGroupStepProperties} from \"../../../../dictionary\"\r\nimport WindowedSelect from 'react-windowed-select';\r\n\r\nclass Select extends Component {\r\n    setSelect = (select) => {\r\n        this.select = select;\r\n    };\r\n\r\n    render() {\r\n        let className = 'select-container ' + (this.props.className || ' ');\r\n        let selectedOption = _.find(this.props.options, ['value', this.props.value]);\r\n        return (\r\n            <div className={className}\r\n                 tabIndex=\"0\"\r\n                 onKeyDown={this.handleKeyDown}\r\n                 onClick={this.handleClick}>\r\n                <label>{this.props.translate(transltedGroupStepProperties[this.props.label])} </label>\r\n                <WindowedSelect value={selectedOption}\r\n                                options={this.props.options}\r\n                                clearable={false}\r\n                                isDisabled={this.props.disabled}\r\n                                onChange={this.handleChange}\r\n                                onOpen={this.handleSelectOpen}\r\n                                onClose={this.handleSelectClose}\r\n                                ref={this.setSelect}\r\n                                components={this.getComponents()}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getComponents = () => ({\r\n        Option: props => {\r\n            const {\r\n                innerProps: {innerRef, ...innerProps}\r\n            } = props;\r\n            return (\r\n                <div\r\n                    className={`singe-option ${props.isFocused ? \"focused-option\" : \"\"} ${props.isSelected ? \"selected-option\" : \"\"}`}\r\n                    {...innerProps}\r\n                    ref={innerRef}\r\n                    title={props.label}\r\n                >\r\n                    {props.label}\r\n                </div>\r\n            );\r\n        }\r\n    });\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.focused && this.props.focused) {\r\n            this.select.focus();\r\n        }\r\n        if(!prevProps.selected && this.props.selected){\r\n            this.variableInput.focus();\r\n        }\r\n\r\n        if(prevProps.selected && !this.props.selected){\r\n            this.variableInput.blur();\r\n            this.setState({...this.state, isActiveVariable: false});\r\n        }\r\n    }\r\n\r\n    handleChange = selectedOption => {\r\n        selectedOption ? this.props.onChange(selectedOption.value) : this.props.onChange(null);\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if ((e.key === 'ArrowUp' || e.key === 'ArrowDown') && this.openedSelect) {\r\n            e.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleSelectOpen = () => {\r\n        this.openedSelect = true;\r\n    };\r\n\r\n    handleSelectClose = () => {\r\n        this.openedSelect = false;\r\n    };\r\n\r\n    handleClick = () =>{\r\n        if(!_.isUndefined(this.props.id)){\r\n            this.props.onSetSelection()\r\n        }\r\n    };\r\n}\r\n\r\nconst OptionShape = PropTypes.shape({\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired\r\n});\r\n\r\nSelect.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string,\r\n    options: PropTypes.arrayOf(OptionShape),\r\n    className: PropTypes.string,\r\n    focused: PropTypes.bool,\r\n    translate: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    onSetSelection: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Select;\r\n","import {connect} from 'react-redux';\r\nimport Select from './Select';\r\n\r\nconst mapDispatchToProps = (dispatch, {onSelect, id}) => ({\r\n    onSetSelection: () => onSelect(id)\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Select);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {translatedTransitionCheckboxType} from \"../../../../dictionary\";\r\nimport './CheckBox.css';\r\nimport _ from 'lodash';\r\n\r\nclass CheckBox extends React.Component {\r\n    setCheckBox = (checkBox) => {\r\n        this.checkBox = checkBox;\r\n    };\r\n\r\n    render() {\r\n        let className = \"check-box-container\" + (this.props.className ? \" \" + this.props.className : \"\")\r\n            + (this.props.focused ? \" focused \" : \" \")\r\n            + (this.props.selectedOnOtherTransitions ? ' selected-on-other-transition' : ' ')\r\n            + (this.props.disabled ? ' check-box-container-disabled' : '');\r\n        let labelClassName = this.props.disabled ? ' label-for-check-box-container-disabled' : ' label-for-check-box-container';\r\n        let icon;\r\n        if (this.props.selectedOnOtherTransitions) {\r\n            icon = this.props.selectedOnOtherTransitions ? \"indeterminate_check_box\" : \"check_box_outline_blank\";\r\n        } else {\r\n            icon = this.props.value ? \"check_box\" : \"check_box_outline_blank\";\r\n        }\r\n        return (\r\n            <div ref={this.setCheckBox}\r\n                 className={className}\r\n                 aria-labelledby={`${this.props.groupLabelId || ''} checkbox-label-${this.props.label.replace(' ', '-')}`}\r\n                 role='checkbox'\r\n                 aria-checked={this.props.value}\r\n                 tabIndex=\"0\"\r\n                 onKeyDown={this.handleKeyDown}\r\n                 onClick={this.handleClick}>\r\n                <i key={icon} className=\"material-icons\">{icon}</i>\r\n                <label id={`checkbox-label-${this.props.label.replace(' ', '-')}`} className={labelClassName}>\r\n                    {this.props.translate(translatedTransitionCheckboxType[this.props.label])}\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.focused) {\r\n            this.checkBox.focus();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.focused && this.props.focused) {\r\n            this.checkBox.focus();\r\n        }\r\n        if (prevProps.disabled !== this.props.disabled && this.props.disabled){\r\n            this.props.onChange(false);\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        if (!this.props.disabled) {\r\n            this.props.onChange(!this.props.value);\r\n            this.checkBox.focus();\r\n            if(!_.isUndefined(this.props.id)){\r\n                this.props.onSelect();\r\n            }\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if (!this.props.disabled) {\r\n            if (e.which === 13 || e.keyCode === 13) { // enter\r\n                this.props.onChange(!this.props.value);\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nCheckBox.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.bool.isRequired,\r\n    className: PropTypes.string,\r\n    focused: PropTypes.bool,\r\n    groupLabelId: PropTypes.string,\r\n    selectedOnOtherTransitions: PropTypes.bool,\r\n    translate: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    onSetSelection: PropTypes.func.isRequired\r\n};\r\n\r\nexport default CheckBox;\r\n","import {connect} from 'react-redux';\r\nimport CheckBox from './CheckBox';\r\n\r\nconst mapDispatchToProps = (dispatch, {onSelect, id}) => ({\r\n    onSelect: () => onSelect(id)\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckBox);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './IconButton.css';\r\n\r\nclass IconButton extends Component {\r\n    render() {\r\n        let isActiveIcon = (this.props.disabled) ? 'icon-disabled': 'icon-active';\r\n        let isActiveBtn= (this.props.disabled) ? null : this.props.onClick;\r\n        let focused =(this.props.focused) ? ' icon-focused ': '';\r\n        return (\r\n            <div title={this.props.title}\r\n                 role='button'\r\n                 aria-label={this.props.title}\r\n                 className={isActiveIcon + focused}\r\n                 onClick={isActiveBtn}\r\n            >\r\n                <i className=\"material-icons\">{this.props.icon}</i>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nIconButton.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    disabled: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default IconButton;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './VariableItem.css';\r\nimport {getVariableDisplayText} from \"../../../../../../redux/modules/availableObjects\";\r\nimport IconButton from \"../../../ExternalObjectSelect/iconButton/IconButton\";\r\n\r\nconst ICONS = ['select', 'duplicate', 'edit'];\r\n\r\nclass VariableItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedElementIndexIcon: 0\r\n        };\r\n    }\r\n\r\n    setVariableItem = (variableItem) => {\r\n        this.variableItem = variableItem;\r\n    };\r\n\r\n    render() {\r\n        let className = `variable-item  ${(this.props.focused ? 'selected-variable-item' : '')}`;\r\n        let variableText = getVariableDisplayText(this.props.variable);\r\n        return (\r\n            <li ref={this.setVariableItem}\r\n                key={this.props.variable.id}\r\n                className={className}\r\n                tabIndex=\"0\"\r\n                onKeyDown={this.handleMenuKeyDown}>\r\n                <div className='variable-value'\r\n                     title={variableText}\r\n                     onClick={this.handleClick}>\r\n                    {variableText}\r\n                </div>\r\n                <div className='variable-menu'>\r\n                    <IconButton\r\n                        icon=\"insert_drive_file\"\r\n                        title={this.props.translate(\"NG_PPE_VariableDuplicate_long\")}\r\n                        disabled={false}\r\n                        focused={ICONS[this.state.selectedElementIndexIcon] === 'duplicate' && this.props.focused}\r\n                        onClick={this.props.onDuplicate}/>\r\n                    <IconButton\r\n                        icon=\"create\"\r\n                        title={this.props.translate(\"NG_PPE_VariableEdit_long\")}\r\n                        disabled={false}\r\n                        focused={ICONS[this.state.selectedElementIndexIcon] === 'edit' && this.props.focused}\r\n                        onClick={this.props.onEdit}/>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.focused && this.props.focused) {\r\n            this.variableItem.focus();\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.onSetVariable(this.props.variable, this.props.position, this.props.inputValue, this.props.inputType);\r\n    };\r\n\r\n    handleMenuKeyDown = (e) => {\r\n        switch (e.key) {\r\n            case 'ArrowRight':\r\n                if (this.state.selectedElementIndexIcon < ICONS.length - 1) {\r\n                    this.setState({...this.state, selectedElementIndexIcon: this.state.selectedElementIndexIcon + 1});\r\n                }\r\n                break;\r\n            case 'ArrowLeft':\r\n                if (this.state.selectedElementIndexIcon > 0) {\r\n                    this.setState({...this.state, selectedElementIndexIcon: this.state.selectedElementIndexIcon - 1});\r\n                }\r\n                break;\r\n            case 'Enter':\r\n                switch (ICONS[this.state.selectedElementIndexIcon]) {\r\n                    case 'duplicate':\r\n                        this.props.onDuplicate();\r\n                        break;\r\n                    case 'edit':\r\n                        this.props.onEdit();\r\n                        break;\r\n                    case 'select':\r\n                        this.props.onSetVariable(this.props.variable, this.props.position, this.props.inputValue, this.props.inputType);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.setState({...this.state, selectedElementIndexIcon: 0});\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n    };\r\n}\r\n\r\nVariableItem.propTypes = {\r\n    variables: PropTypes.array,\r\n    onVariableAdd: PropTypes.func,\r\n    isActive: PropTypes.bool,\r\n    focused: PropTypes.bool,\r\n    position: PropTypes.number,\r\n    inputValue: PropTypes.string,\r\n    inputType: PropTypes.string,\r\n    translate: PropTypes.func.isRequired,\r\n    onSetVariable: PropTypes.func,\r\n    onDuplicate: PropTypes.func.isRequired,\r\n    onEdit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default VariableItem;\r\n","import {connect} from 'react-redux';\r\nimport VariableItem from \"./VariableItem\";\r\nimport { duplicateExternalObject, editExternalObject} from \"../../../../../../redux/modules/availableObjects\";\r\n\r\nconst mapDispatchToProps = (dispatch, {variable, onSelect, onVariableDuplicated, onVariableUpdated}) => ({\r\n    onSetVariable: () => onSelect(variable),\r\n    onDuplicate: () => dispatch(duplicateExternalObject('variable', variable.id, onVariableDuplicated)),\r\n    onEdit: () => dispatch(editExternalObject('variable', variable.id, onVariableUpdated))\r\n});\r\nexport default connect(null, mapDispatchToProps)(VariableItem)\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport VariableItem from './variableItem/VariableItem.container';\r\nimport {FixedSizeList} from 'react-window';\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\n\r\nimport './Variables.css'\r\n\r\nclass Variables extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {selectedVariableItemIndex: -1};\r\n    }\r\n\r\n    setVariablesList = (variable) => {\r\n        this.variablesList = variable;\r\n    };\r\n\r\n    setFixedVariablesList = (fixedVariableList) => {\r\n        this.fixedSizeList = fixedVariableList\r\n    };\r\n    \r\n    render() {\r\n        if (!this.props.isActive) {\r\n            return null;\r\n        }\r\n        const Row = ({ index, style }) => (\r\n            <div style={style}>\r\n                <VariableItem\r\n                    key={`${this.props.variables[index].id}-Item`}\r\n                    style={style}\r\n                    variable={this.props.variables[index]}\r\n                    position={this.props.position}\r\n                    inputValue={this.props.inputValue}\r\n                    inputType={this.props.inputType}\r\n                    focused={this.props.variables[this.state.selectedVariableItemIndex] === this.props.variables[index] && this.props.focused}\r\n                    translate={this.props.translate}\r\n                    onSelect={this.props.onSelect}\r\n                    onVariableUpdated={this.props.onSelect}\r\n                    onVariableDuplicated={this.props.onSelect}\r\n                />\r\n            </div>\r\n        );\r\n        return (\r\n            <ul ref={this.setVariablesList}\r\n                className=\"variables\"\r\n                tabIndex=\"0\"\r\n                onKeyDown={this.handleKeyDown}>\r\n                <li className = {`variable-item  ${(this.state.selectedVariableItemIndex === -1 ? 'selected-variable-item' : '')}`}\r\n                    onClick={this.props.onCreate}>\r\n                    <div className=\"variable-value\">{this.props.translate(\"NG_PPE_VariableCreate_long\")}</div>\r\n                </li>\r\n                <AutoSizer>\r\n                    {({ height, width }) => (\r\n                    <FixedSizeList\r\n                        height={height -30}\r\n                        width={width}\r\n                        itemSize={30}\r\n                        itemCount={this.props.variables.length}\r\n                        ref={this.setFixedVariablesList}\r\n                    >\r\n                        {Row}\r\n                    </FixedSizeList>\r\n                    )}\r\n                </AutoSizer>\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.focused && this.props.focused) {\r\n            this.setState({...this.state, selectedVariableItemIndex: -1});\r\n            this.variablesList.focus();\r\n        }\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        e.stopPropagation();\r\n        switch (e.key) {\r\n            case 'ArrowUp':\r\n                e.preventDefault();\r\n                if (this.state.selectedVariableItemIndex >= 0) {\r\n                    this.setState({...this.state, selectedVariableItemIndex: this.state.selectedVariableItemIndex - 1});\r\n                    this.fixedSizeList.scrollToItem(this.state.selectedVariableItemIndex -1);\r\n                } else {\r\n                    this.props.onExitVariable(e);\r\n                }\r\n                break;\r\n            case 'ArrowDown':\r\n                e.preventDefault();\r\n                if (this.state.selectedVariableItemIndex < this.props.variables.length - 1) {\r\n                    this.setState({...this.state, selectedVariableItemIndex: this.state.selectedVariableItemIndex + 1});\r\n                    this.fixedSizeList.scrollToItem(this.state.selectedVariableItemIndex + 1);\r\n                }\r\n                break;\r\n            case 'Enter':\r\n                e.preventDefault();\r\n                this.state.selectedVariableItemIndex === -1 ? this.props.onCreate() : this.props.onSelect(this.props.variables[this.state.selectedVariableItemIndex]);\r\n                this.props.onExitVariable(e);\r\n                break;\r\n            case 'Escape':\r\n                this.props.onExitVariable(e);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n}\r\n\r\nVariables.propTypes = {\r\n    variables: PropTypes.array,\r\n    isActive: PropTypes.bool,\r\n    position: PropTypes.number,\r\n    inputValue: PropTypes.string,\r\n    inputType: PropTypes.string,\r\n    focused: PropTypes.bool,\r\n    translate: PropTypes.func.isRequired,\r\n    onSelect: PropTypes.func.isRequired,\r\n    onExitVariable: PropTypes.func.isRequired,\r\n    onCreate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Variables;\r\n","import {connect} from 'react-redux';\r\nimport {createExternalObject, getVariables} from \"../../../../../redux/modules/availableObjects\";\r\nimport Variables from \"./Variables\";\r\nimport {getTranslate} from \"react-localize-redux/lib/index\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        variables: getVariables(state),\r\n        translate: getTranslate(state.localize)\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, {onVariableCreated}) => {\r\n    return {\r\n        onCreate: () => dispatch(createExternalObject('variable', onVariableCreated)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Variables)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Variables from '../variableInput/variables/Variables.container';\r\nimport './VariableCheckBox.css';\r\nimport _ from 'lodash';\r\nimport {getVariableDisplayText} from '../../../../redux/modules/availableObjects';\r\nimport {translatedStepCheckboxLabels} from \"../../../../dictionary\"\r\n\r\nclass VariableCheckBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isActiveCheckBoxVariable: false\r\n        };\r\n    }\r\n    setCheckBox = (checkBox) => {\r\n        this.checkBox = checkBox;\r\n    };\r\n\r\n    render() {\r\n        let className = \"check-box-container\" + (this.props.className ? \" \" + this.props.className : \"\")\r\n            + (this.props.focused ? \" focused \" : \" \")\r\n            + (this.props.selectedOnOtherTransitions ? ' selected-on-other-transition' : ' ')\r\n            + (this.props.disabled ? ' check-box-container-disabled' : '');\r\n        let labelClassName = this.props.disabled ? ' label-for-check-box-container-disabled' : ' label-for-check-box-container';\r\n        let icon;\r\n        let isVariable = _.isPlainObject(this.props.value);\r\n        if (this.props.selectedOnOtherTransitions) {\r\n            icon = this.props.selectedOnOtherTransitions ? \"indeterminate_check_box\" : \"check_box_outline_blank\";\r\n        } else {\r\n            icon = isVariable ? \"indeterminate_check_box\" : (this.props.value ? \"check_box\" : \"check_box_outline_blank\");\r\n        }\r\n        let activeTooltip, tooltipText;\r\n        if (isVariable) {\r\n            activeTooltip = 'tooltip-toggle';\r\n            tooltipText = getVariableDisplayText(this.props.value);\r\n        }\r\n        return (\r\n            <div ref={this.setCheckBox}\r\n                 className={className}\r\n                 aria-labelledby={`${this.props.groupLabelId || ''} checkbox-label-${this.props.label.replace(' ', '-')}`}\r\n                 role='checkbox'\r\n                 aria-checked={this.props.value}\r\n                 tabIndex=\"0\"\r\n                 onKeyDown={this.handleKeyDown}\r\n                 onClick={this.handleClick}>\r\n                <span\r\n                    className={activeTooltip}\r\n                    data-tooltip={tooltipText}\r\n                    role=\"tooltip\"\r\n                    tabIndex=\"0\"\r\n                    aria-label={isVariable ? tooltipText : this.props.value}>\r\n                    <i key={icon} className=\"material-icons\">{icon}</i>\r\n                </span>\r\n                <span\r\n                    onClick={this.handleClickCheckboxVariable}>\r\n                    <i className=\"material-icons arrow_drop_down\">arrow_drop_down</i>\r\n                    <Variables className={`${this.props.label}-variables-group`}\r\n                               id={`${this.props.label}-variables-group`}\r\n                               isActive={this.state.isActiveCheckBoxVariable}\r\n                               focused={this.state.isActiveCheckBoxVariable}\r\n                               onSelect={this.handleVariableSelect}\r\n                               onExitVariable={this.handleExitVariable}\r\n                               onVariableCreated={this.handleVariableSelect}\r\n                    />\r\n                </span>\r\n                <label id={`checkbox-label-${this.props.label.replace(' ', '-')}`} className={labelClassName}>\r\n                    {this.props.translate(translatedStepCheckboxLabels[this.props.label])}\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.focused) {\r\n            this.checkBox.focus();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.focused && this.props.focused) {\r\n            this.checkBox.focus();\r\n        }\r\n        if(!prevProps.selected && this.props.selected){\r\n            this.checkBox.focus();\r\n        }\r\n        if(prevProps.selected && !this.props.selected){\r\n            this.checkBox.blur();\r\n            this.setState({...this.state, isActiveCheckBoxVariable: false});\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        if (!this.props.disabled) {\r\n            this.props.onChange(!this.props.value);\r\n            this.checkBox.focus();\r\n            this.props.onSetSelection();\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if (!this.props.disabled) {\r\n            if (e.which === 13 || e.keyCode === 13) { // enter\r\n                this.props.onChange(!this.props.value);\r\n            }\r\n        }\r\n        switch (e.which) {\r\n            case 32: //Space\r\n                this.handleClickCheckboxVariable(e);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    handleClickCheckboxVariable = (e) => {\r\n        e.stopPropagation();\r\n        if (!this.props.disabled) {\r\n            this.setState({isActiveCheckBoxVariable: !this.state.isActiveCheckBoxVariable});\r\n            this.props.onSetSelection();\r\n        }\r\n    };\r\n\r\n    handleVariableSelect = (newVariable) => {\r\n        this.props.onChange(newVariable.id);\r\n    };\r\n\r\n    handleExitVariable = () => {\r\n        this.setState({\r\n            isActiveCheckBoxVariable: false\r\n        });\r\n        this.checkBox.focus();\r\n    };\r\n}\r\n\r\nVariableCheckBox.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\r\n    className: PropTypes.string,\r\n    selected: PropTypes.bool.isRequired,\r\n    focused: PropTypes.bool,\r\n    groupLabelId: PropTypes.string,\r\n    selectedOnOtherTransitions: PropTypes.bool,\r\n    translate: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    onSetSelection: PropTypes.func.isRequired\r\n};\r\n\r\nexport default VariableCheckBox;\r\n\r\n\r\n","import {connect} from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {getVariableById} from '../../../../redux/modules/availableObjects';\r\nimport VariableCheckBox from './VariableCheckBox';\r\n\r\nconst mapStateToProps = (state, {value, onSelect , id}) => ({\r\n    value: _.isString(value) ? getVariableById(state, value) : value,\r\n    onSetSelection: () => onSelect(id)\r\n});\r\n\r\nexport default connect(mapStateToProps)(VariableCheckBox);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Input.css'\r\n\r\nclass Input extends Component {\r\n    setInput = (input) => {\r\n        this.input = input;\r\n    };\r\n\r\n    render() {\r\n        let className = 'input ' + (this.props.className || ' ');\r\n        return (\r\n            <div className={className}\r\n                 tabIndex=\"0\"\r\n                 onClick={this.handleClick}>\r\n                <label id={`input-label-${this.props.label}`}>{this.props.label}</label>\r\n                <input ref={this.setInput}\r\n                       aria-live=\"polite\"\r\n                       aria-labelledby={`input-label-${this.props.label}`}\r\n                       value={this.props.value}\r\n                       disabled={this.props.disabled ? 'disabled' : ''}\r\n                       onChange={this.handleChange}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.focused && this.props.focused) {\r\n            this.input.focus();\r\n        }\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        if (!this.props.disabled){\r\n            this.props.onChange(event.target.value);\r\n        }\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.input.focus();\r\n        this.props.onSetSelection();\r\n    };\r\n}\r\n\r\nInput.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string,\r\n    className: PropTypes.string,\r\n    focused: PropTypes.bool,\r\n    onChange: PropTypes.func.isRequired,\r\n    onSetSelection: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Input;","import {connect} from 'react-redux';\r\nimport Input from './Input';\r\n\r\nconst mapDispatchToProps = (dispatch, {onSelect, id}) => ({\r\n    onSetSelection: () => onSelect(id)\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Input);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Variables from './variables/Variables.container';\r\nimport _ from 'lodash';\r\n\r\nimport './VariableInput.css'\r\nimport {\r\n    getVariableDisplayText,\r\n    VARIABLE_SCRIPT_DEFAULT_VALUE,\r\n    VariableTypes\r\n} from '../../../../redux/modules/availableObjects';\r\n\r\nconst TEXTAREA = 'textarea';\r\nconst BUTTON = 'button';\r\nconst ELEMENTS = [TEXTAREA, BUTTON];\r\n\r\nconst ARROW_DOWN_ICON = '▼';\r\nconst SPACE = '\\u00A0';\r\nconst ELLIPSIS = '…';\r\nconst MAX_VARIABLE_CHAR_NUMBER = 22;\r\n\r\nconst DIRECTION = {\r\n    RIGHT: 'right',\r\n    LEFT: 'left',\r\n    UP: 'up',\r\n    DOWN: 'down'\r\n};\r\n\r\nclass VariableInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isActiveVariable: false,\r\n            isModifiedVariable: false,\r\n            activeVariableIndex: null,\r\n            value: '',\r\n            vars: [],\r\n            cursorPosition: null,\r\n            textAreaHeight: 0,\r\n            focusedElementIndex: 0,\r\n            changingActiveVariable: false,\r\n            variableInputWidth: 0,\r\n            activeVariableRange: [],\r\n            selectionRangePosition: {\r\n                start: null,\r\n                end: null\r\n            },\r\n            keyCombinationPressed: false\r\n        };\r\n    }\r\n\r\n    setVariableInput = (variableInput) => {\r\n        this.variableInput = variableInput;\r\n    };\r\n\r\n    setVariablesContainer = (variablesContainer) => {\r\n        this.variablesContainer = variablesContainer;\r\n    };\r\n\r\n    setAddButton = addButton => {\r\n        this.addButton = addButton;\r\n    };\r\n\r\n    render() {\r\n        let className = 'input ' + (this.props.className || ' ');\r\n        let inputID = `input-${this.props.label}`;\r\n        return (\r\n            <div className={className}\r\n                 tabIndex=\"0\"\r\n                onClick={this.handleClick}>\r\n                <label id={`input-label-${this.props.label}`}>\r\n                    {this.props.label}\r\n                </label>\r\n                <div className='variable-input-container'\r\n                     onKeyDown={this.handleKeyDown}\r\n                     onKeyUp={this.handleKeyUp}>\r\n                    <div id={inputID} className='variable-input'>\r\n                        <textarea id='variable_input_textarea'\r\n                                  className={`variable-input-textarea textarea-${this.props.label}`}\r\n                                  ref={this.setVariableInput}\r\n                                  value={this.state.value}\r\n                                  disabled={this.props.isLockedProcessPlan ? 'disabled' : ''}\r\n                                  onChange={this.handleInputChange}\r\n                                  onDrop={(ev) => ev.preventDefault()}\r\n                                  onMouseDown={this.handleMouseDown}\r\n                                  onScroll={this.handleScroll}/>\r\n                        <Variables className={`${this.props.label}-variables-group`}\r\n                                   id={`${this.props.label}-variables-group`}\r\n                                   isActive={this.state.isActiveVariable}\r\n                                   inputValue={this.state.inputValue}\r\n                                   inputType={this.props.label}\r\n                                   focused={this.state.isActiveVariable}\r\n                                   translate={this.props.translate}\r\n                                   onSelect={this.handleVariableSelect}\r\n                                   onExitVariable={this.handleExitVariable}\r\n                                   onVariableCreated={this.handleVariableSelect}\r\n                        />\r\n                    </div>\r\n\r\n                    <span title={this.props.translate(\"NG_PPE_Add_variable_long\")}\r\n                          id={\"btn_add_variable_\" + _.snakeCase(this.props.label)}\r\n                          ref={this.setAddButton}\r\n                          role='button'\r\n                          aria-label={this.props.translate(\"NG_PPE_Add_variable_long\")}\r\n                          className={'btn-add-variable' + ((this.props.isLockedProcessPlan || this.state.isModifiedVariable) ? ' btn-add-variable-disabled' : '')}\r\n                          onClick={this.addNewVariable}\r\n                          tabIndex={0}>\r\n                        <i className=\"material-icons\">add_box</i>\r\n                    </span>\r\n                </div>\r\n                <div className='variables-container'\r\n                     ref={this.setVariablesContainer}\r\n                     onScroll={this.handleScrollContainer}>\r\n                    {this.getVariablesContainerChildren()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getVariablesContainerChildren = () => {\r\n        let value = [];\r\n        _.map(this.state.vars, (variable, index) => {\r\n            if (index === 0) {\r\n                value.push(this.state.value.slice(0, variable.offset));\r\n            } else {\r\n                value.push(this.state.value.slice(this.state.vars[index - 1].offset + this.state.vars[index - 1].length, variable.offset))\r\n            }\r\n            let variableValue = this.state.value.slice(variable.offset, variable.offset + variable.length);\r\n            let variableParts = variableValue.split(ARROW_DOWN_ICON);\r\n            let isActiveVariable = ((this.state.activeVariableIndex === index || _.includes(this.state.activeVariableRange, index)) ? 'active-variable' : '');\r\n            value.push(\r\n                <span\r\n                    key={'variable_element_' + index}\r\n                    title={variable.title}\r\n                    onClick={this.handleVariableClick}\r\n                    className={'variable-element ' + isActiveVariable + (this.props.isLockedProcessPlan ? ' variable-element-disabled ' : '')}>\r\n                    {variableParts[0]}\r\n                    <span className='variable-element-arrow'\r\n                          onClick={this.handleArrowDownClick}>{ARROW_DOWN_ICON}</span>\r\n                    {variableParts[1]}\r\n                </span>\r\n            );\r\n\r\n            if (index === this.state.vars.length - 1) {\r\n                value.push(this.state.value.slice(variable.offset + variable.length));\r\n            }\r\n        });\r\n        if (this.state.vars.length === 0) {\r\n            value.push(this.state.value);\r\n        }\r\n        return value;\r\n    };\r\n\r\n    convertToState = (props) => {\r\n        let value = '';\r\n        let vars = [];\r\n        let offset;\r\n        let resultValue;\r\n        let title;\r\n        if (props.value) {\r\n            _.map(props.value.vars, (variable, index) => {\r\n                let variableProps = _.find(props.variables, el => el.id === variable.id);\r\n                if (index === 0) {\r\n                    value += props.value.value.slice(0, variable.offset);\r\n                    offset = variable.offset + 1;\r\n                } else {\r\n                    value += props.value.value.slice(props.value.vars[index - 1].offset + props.value.vars[index - 1].length, variable.offset);\r\n                    offset = value.length + 1;\r\n                }\r\n                title = getVariableDisplayText(variableProps);\r\n                resultValue = `${SPACE}${title.length > MAX_VARIABLE_CHAR_NUMBER ? title.slice(0, MAX_VARIABLE_CHAR_NUMBER - 1) + SPACE + ELLIPSIS : title}${SPACE}${ARROW_DOWN_ICON}${SPACE}`;\r\n                value += ' ' + resultValue + ' ';\r\n                if (index === props.value.vars.length - 1) {\r\n                    value += props.value.value.slice(variable.offset + variable.length);\r\n                }\r\n                vars.push({\r\n                    id: variable.id,\r\n                    offset,\r\n                    length: resultValue.length,\r\n                    title\r\n                })\r\n            });\r\n            if (!_.isNil(props.value.vars) && props.value.vars.length === 0) {\r\n                value = props.value.value;\r\n            }\r\n        }\r\n        this.setState({\r\n            value,\r\n            vars\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.convertToState(this.props);\r\n        this.updateVariableContainerView();\r\n        window.addEventListener('resize', this.updateVariableContainerView);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateVariableContainerView);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (_.isNil(prevProps.value) && !_.isNil(this.props.value)) {\r\n            this.convertToState(this.props);\r\n        }\r\n\r\n        if (prevProps.value !== this.props.value) {\r\n            this.convertToState(this.props);\r\n        }\r\n\r\n        if (this.state.textAreaHeight !== this.variableInput.offsetHeight) {\r\n            this.updateVariableContainerView();\r\n        }\r\n\r\n        if (this.state.value.length > prevState.value.length) {\r\n            this.variableInput.style.height = this.variableInput.scrollHeight + 'px';\r\n            this.updateVariableContainerView();\r\n        }\r\n        if (this.state.cursorPosition !== this.variableInput.selectionStart && this.state.selectionRangePosition.start === this.state.selectionRangePosition.end) {\r\n            this.variableInput.selectionStart = this.state.cursorPosition;\r\n            this.variableInput.selectionEnd = this.state.cursorPosition;\r\n        }\r\n\r\n        if ((!prevProps.focused && this.props.focused)) {\r\n            if (ELEMENTS[this.state.focusedElementIndex] === TEXTAREA) {\r\n                this.variableInput.focus();\r\n                this.setState({cursorPosition: this.state.value.length});\r\n            } else {\r\n                this.addButton.focus();\r\n            }\r\n        }\r\n\r\n        if ((this.state.focusedElementIndex !== prevState.focusedElementIndex)) {\r\n            if (ELEMENTS[this.state.focusedElementIndex] === TEXTAREA) {\r\n                this.variableInput.focus();\r\n            } else {\r\n                this.addButton.focus();\r\n            }\r\n        }\r\n\r\n        if (this.variableInput.offsetWidth !== prevState.variableInputWidth ||\r\n            this.variableInput.offsetTop !== _.parseInt(this.variablesContainer.style.top)) {\r\n            this.updateVariableContainerView();\r\n        }\r\n\r\n        if (this.state.selectionRangePosition.start !== prevState.selectionRangePosition.start ||\r\n            this.state.selectionRangePosition.end !== prevState.selectionRangePosition.end) {\r\n            this.variableInput.selectionStart = this.state.selectionRangePosition.start;\r\n            this.variableInput.selectionEnd = this.state.selectionRangePosition.end;\r\n        }\r\n\r\n        if (this.state.cursorPosition !== prevState.cursorPosition) {\r\n            let maxScrollLeft = this.variableInput.scrollWidth - this.variableInput.clientWidth;\r\n            let multiplier = maxScrollLeft / this.variableInput.textLength;\r\n            let scrollPositionDelta = (this.state.cursorPosition - prevState.cursorPosition) * multiplier;\r\n\r\n            if (this.state.cursorPosition === this.variableInput.textLength || this.state.cursorPosition === this.variableInput.textLength - 1) {\r\n                this.variableInput.scrollLeft = maxScrollLeft;\r\n                this.variablesContainer.scrollLeft = maxScrollLeft;\r\n            } else if (this.state.cursorPosition > prevState.cursorPosition) {\r\n                this.variableInput.scrollLeft = this.variableInput.scrollLeft + scrollPositionDelta;\r\n                this.variablesContainer.scrollLeft = this.variablesContainer.scrollLeft + scrollPositionDelta;\r\n            } else {\r\n                this.variableInput.scrollLeft = this.variableInput.scrollLeft + scrollPositionDelta;\r\n                this.variablesContainer.scrollLeft = this.variablesContainer.scrollLeft + scrollPositionDelta;\r\n            }\r\n        }\r\n\r\n        if (this.state.isModifiedVariable !== prevState.isModifiedVariable) {\r\n            this.variableInput.selectionStart = this.state.selectionRangePosition.start;\r\n            this.variableInput.selectionEnd = this.state.selectionRangePosition.end;\r\n        }\r\n\r\n        if(!prevProps.selected && this.props.selected){\r\n            this.variableInput.focus();\r\n        }\r\n\r\n        if(prevProps.selected && !this.props.selected){\r\n            this.variableInput.blur();\r\n            this.setState({...this.state, isActiveVariable: false});\r\n        }\r\n\r\n    };\r\n\r\n    updateVariableContainerView = () => {\r\n        this.variablesContainer.style.height = this.variableInput.offsetHeight + 'px';\r\n        this.variablesContainer.style.width = this.variableInput.offsetWidth + 'px';\r\n        this.variablesContainer.style.top = this.variableInput.offsetTop + 'px';\r\n        this.variablesContainer.style.left = this.variableInput.offsetLeft + 'px';\r\n        this.setState({\r\n            textAreaHeight: this.variableInput.offsetHeight,\r\n            variableInputWidth: this.variableInput.offsetWidth\r\n        });\r\n    };\r\n\r\n    convertToProps = (value, vars) => {\r\n        let propsValue = '';\r\n        let propsVars = [];\r\n        let offset;\r\n        _.map(vars, (variable, index) => {\r\n            let variableProps = _.find(this.props.variables, el => el.id === variable.id);\r\n            let variableValue = variableProps.type === VariableTypes.VARIABLE ? variableProps.value : VARIABLE_SCRIPT_DEFAULT_VALUE;\r\n            if (index === 0) {\r\n                propsValue += value.slice(0, variable.offset - 1);\r\n                offset = variable.offset - 1;\r\n            } else {\r\n                propsValue += value.slice(vars[index - 1].offset + vars[index - 1].length + 1, variable.offset - 1);\r\n                offset = propsValue.length;\r\n            }\r\n            propsValue += variableValue;\r\n            if (index === vars.length - 1) {\r\n                propsValue += value.slice(variable.offset + variable.length + 1);\r\n            }\r\n            propsVars.push({\r\n                id: variable.id,\r\n                offset: offset,\r\n                length: variableValue.length\r\n            })\r\n        });\r\n        if (vars.length === 0) {\r\n            propsValue = value;\r\n        }\r\n        return {\r\n            value: propsValue,\r\n            vars: propsVars\r\n        }\r\n    };\r\n\r\n    handleInputChange = (e) => {\r\n        let deltaOffset = e.target.value.length - this.state.value.length;\r\n        let vars = [...this.state.vars];\r\n        let value = e.target.value;\r\n        if (!_.isNull(this.state.activeVariableIndex)) {\r\n            let variableToRemove = this.state.vars[this.state.activeVariableIndex];\r\n            if (variableToRemove) {\r\n                _.remove(vars, variableToRemove);\r\n                vars = _.map(vars, variable => {\r\n                    if (variable.offset > variableToRemove.offset) {\r\n                        return {\r\n                            ...variable,\r\n                            offset: variable.offset - variableToRemove.length + 1\r\n                        }\r\n                    }\r\n                    return variable;\r\n                });\r\n                this.setState({\r\n                    value,\r\n                    vars,\r\n                    cursorPosition: variableToRemove.offset - 1,\r\n                    activeVariableIndex: null\r\n                });\r\n            }\r\n        } else {\r\n            vars = _.map(vars, (variable) => {\r\n                if (variable.offset >= e.target.selectionStart - deltaOffset) {\r\n                    return {\r\n                        ...variable,\r\n                        offset: variable.offset + deltaOffset\r\n                    }\r\n                } else {\r\n                    return variable;\r\n                }\r\n            });\r\n            this.setState({\r\n                value,\r\n                vars,\r\n                cursorPosition: e.target.selectionStart\r\n            });\r\n        }\r\n        this.props.onChange(this.convertToProps(value, vars));\r\n    };\r\n\r\n    handleVariableSelect = (newVariable) => {\r\n        let value = this.state.value;\r\n        let title = getVariableDisplayText(newVariable);\r\n        let newVariableValue = `${SPACE}${title.length > MAX_VARIABLE_CHAR_NUMBER ? title.slice(0, MAX_VARIABLE_CHAR_NUMBER - 1) + SPACE + ELLIPSIS : title}${SPACE}${ARROW_DOWN_ICON}${SPACE}`;\r\n        let vars = this.state.vars;\r\n        let cursorPosition = this.state.cursorPosition;\r\n\r\n        if (this.state.changingActiveVariable && this.state.vars[this.state.activeVariableIndex]) {\r\n            value = this.state.value.slice(0, this.state.vars[this.state.activeVariableIndex].offset) + newVariableValue\r\n                + this.state.value.slice(this.state.vars[this.state.activeVariableIndex].offset + this.state.vars[this.state.activeVariableIndex].length);\r\n            let deltaLength = newVariableValue.length - this.state.vars[this.state.activeVariableIndex].length;\r\n            vars = _.map(vars, (variable, index) => {\r\n                if (index === this.state.activeVariableIndex) {\r\n                    return {\r\n                        ...variable,\r\n                        id: newVariable.id,\r\n                        length: newVariableValue.length\r\n                    }\r\n                } else if (index > this.state.activeVariableIndex) {\r\n                    return {\r\n                        ...variable,\r\n                        offset: variable.offset + deltaLength\r\n                    }\r\n                } else {\r\n                    return variable;\r\n                }\r\n            });\r\n            cursorPosition = this.state.vars[this.state.activeVariableIndex].offset + newVariableValue.length + 1;\r\n            this.setState({changingActiveVariable: false, activeVariableIndex: null});\r\n        } else if (!_.isNull(this.state.activeVariableIndex) && this.state.vars[this.state.activeVariableIndex]) { //adding variable after active one\r\n            let variableToRemove = this.state.vars[this.state.activeVariableIndex];\r\n            if (variableToRemove) {\r\n                value = value.slice(0, variableToRemove.offset - 1) + value.slice(variableToRemove.offset + variableToRemove.length + 1);\r\n                _.remove(vars, variableToRemove);\r\n                vars = _.map(vars, variable => {\r\n                    if (variable.offset > variableToRemove.offset) {\r\n                        return {\r\n                            ...variable,\r\n                            offset: variable.offset - variableToRemove.length - 2\r\n                        }\r\n                    }\r\n                    return variable;\r\n                });\r\n                cursorPosition = variableToRemove.offset - 1;\r\n            }\r\n            value = value.slice(0, cursorPosition) + ' ' + newVariableValue + ' ' + value.slice(cursorPosition);\r\n            let indexToInsert = 0;\r\n            vars = _.map(vars, (variable, index) => {\r\n                if (variable.offset < cursorPosition && (index === vars.length - 1 || vars[index + 1].offset - 1 >= cursorPosition)) {\r\n                    indexToInsert = index + 1;\r\n                }\r\n                if (variable.offset - 1 >= cursorPosition) {\r\n                    return {\r\n                        ...variable,\r\n                        offset: variable.offset + newVariableValue.length + 2\r\n                    }\r\n                } else {\r\n                    return variable;\r\n                }\r\n            });\r\n            vars.splice(indexToInsert, 0, {\r\n                id: newVariable.id,\r\n                offset: cursorPosition + 1,\r\n                length: newVariableValue.length,\r\n                title: title\r\n            });\r\n            cursorPosition = cursorPosition + newVariableValue.length + 2;\r\n        } else if (!_.isNull(this.state.cursorPosition)) { //adding variable at current cursor position\r\n            if (this.state.activeVariableRange.length !== 0) {\r\n                let selectionStartPosition = this.state.selectionRangePosition.start;\r\n                let selectionEndPosition = this.state.selectionRangePosition.end;\r\n                let offset = selectionEndPosition - selectionStartPosition;\r\n\r\n                value = value.slice(0, selectionStartPosition) + value.slice(selectionEndPosition, value.length);\r\n                vars = _.chain(vars)\r\n                    .filter((variable, index) => !_.includes(this.state.activeVariableRange, index))\r\n                    .map((variable, index) => {\r\n                        if (_.includes(this.state.activeVariableRange, index) || index > _.last(this.state.activeVariableRange) || variable.offset > selectionEndPosition) {\r\n                            return {\r\n                                ...variable,\r\n                                offset: variable.offset - offset\r\n                            }\r\n                        } else {\r\n                            return {\r\n                                ...variable\r\n                            }\r\n                        }\r\n                    })\r\n                    .value();\r\n                cursorPosition = selectionStartPosition;\r\n            }\r\n            value = value.slice(0, cursorPosition) + ' ' + newVariableValue + ' ' + value.slice(cursorPosition);\r\n            let indexToInsert = 0;\r\n            vars = _.map(vars, (variable, index) => {\r\n                if (variable.offset < cursorPosition && (index === vars.length - 1 || vars[index + 1].offset - 1 >= cursorPosition)) {\r\n                    indexToInsert = index + 1;\r\n                }\r\n                if (variable.offset - 1 >= cursorPosition) {\r\n                    return {\r\n                        ...variable,\r\n                        offset: variable.offset + newVariableValue.length + 2\r\n                    }\r\n                } else {\r\n                    return variable;\r\n                }\r\n            });\r\n            vars.splice(indexToInsert, 0, {\r\n                id: newVariable.id,\r\n                offset: cursorPosition + 1,\r\n                length: newVariableValue.length,\r\n                title: title\r\n            });\r\n            cursorPosition = cursorPosition + newVariableValue.length + 2;\r\n        } else { //adding variable at the end of textarea\r\n            vars.push({\r\n                id: newVariable.id,\r\n                offset: this.state.value.length + 1,\r\n                length: newVariableValue.length,\r\n                title: title\r\n            });\r\n            value = this.state.value + ' ' + newVariableValue + ' ';\r\n            cursorPosition = this.state.value.length + newVariableValue.length + 2;\r\n        }\r\n        this.setState({\r\n            value,\r\n            vars,\r\n            cursorPosition,\r\n            selectionRangePosition: {\r\n                start: cursorPosition,\r\n                end: cursorPosition\r\n            },\r\n            activeVariableRange: [],\r\n            activeVariableIndex: null,\r\n            focusedElementIndex: _.findIndex(ELEMENTS, el => el === TEXTAREA),\r\n            isActiveVariable: false,\r\n            isModifiedVariable: false\r\n        });\r\n        this.variableInput.focus();\r\n        this.props.onChange(this.convertToProps(value, vars));\r\n    };\r\n\r\n    handleExitVariable = () => {\r\n        this.setState({\r\n            isActiveVariable: false,\r\n            isModifiedVariable: false\r\n        });\r\n        switch (ELEMENTS[this.state.focusedElementIndex]) {\r\n            case TEXTAREA:\r\n                let activeVariable = this.state.vars[this.state.activeVariableIndex];\r\n                this.setState({\r\n                    isActiveVariable: false,\r\n                    activeVariableIndex: null,\r\n                    cursorPosition: _.isNil(activeVariable) ? undefined : activeVariable.offset + activeVariable.length + 1,\r\n                    changingActiveVariable: false\r\n                });\r\n                this.variableInput.focus();\r\n                break;\r\n            case BUTTON:\r\n                this.addButton.focus();\r\n                this.setState({\r\n                    isActiveVariable: false\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    addNewVariable = () => {\r\n        if (!this.props.isLockedProcessPlan) {\r\n            if (!this.state.isModifiedVariable) {\r\n                this.setState({\r\n                    isActiveVariable: !this.state.isActiveVariable\r\n                });\r\n                _.map(this.variablesContainer.children, element => {\r\n                    element.classList.remove('active-variable');\r\n                });\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    handleMouseDown = (e) => {\r\n        e.stopPropagation();\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    handleMouseUp = (e) => {\r\n        e.stopPropagation();\r\n        let variableSelectedRange = [];\r\n        let activeVariableIndex = null;\r\n\r\n        if (e.target.selectionStart === this.state.selectionRangePosition.start && e.target.selectionEnd === this.state.selectionRangePosition.end) {\r\n            this.setState({\r\n                activeVariableIndex: activeVariableIndex,\r\n                isActiveVariable: false,\r\n                activeVariableRange: variableSelectedRange,\r\n                focusedElementIndex: _.findIndex(ELEMENTS, el => el === TEXTAREA),\r\n            });\r\n        } else {\r\n            if (this.variableInput.selectionStart === this.variableInput.selectionEnd) {\r\n                _.forEach(this.state.vars, (variable, index) => {\r\n                    if (this.variableInput.selectionStart === variable.offset + variable.length ||\r\n                        this.variableInput.selectionStart === variable.offset) {\r\n                        activeVariableIndex = index;\r\n                    }\r\n                });\r\n            } else {\r\n                _.forEach(this.state.vars, (variable, index) => {\r\n                    switch (this.variableInput.selectionDirection) {\r\n                        case 'forward':\r\n                            if ((variable.offset >= this.variableInput.selectionStart && variable.offset <= this.variableInput.selectionEnd) ||\r\n                                (variable.offset + variable.length === this.variableInput.selectionStart) || (variable.offset === this.variableInput.selectionEnd)) {\r\n                                variableSelectedRange.push(index);\r\n                            }\r\n                            break;\r\n                        case 'backward':\r\n                            if ((variable.offset + variable.length <= this.variableInput.selectionEnd && variable.offset + variable.length >= this.variableInput.selectionStart)) {\r\n                                variableSelectedRange.push(index);\r\n                            }\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (variableSelectedRange.length) {\r\n                let firstRangeVariable = this.state.vars[_.head(variableSelectedRange)];\r\n                let lastRangeVariable = this.state.vars[_.last(variableSelectedRange)];\r\n                let selectionStart = this.variableInput.selectionStart < firstRangeVariable.offset ?\r\n                    this.variableInput.selectionStart : firstRangeVariable.offset;\r\n                let selectionEnd = this.variableInput.selectionEnd < lastRangeVariable.offset + lastRangeVariable.length ?\r\n                    lastRangeVariable.offset + lastRangeVariable.length : this.variableInput.selectionEnd;\r\n\r\n                this.variableInput.setSelectionRange(selectionStart, selectionEnd);\r\n                this.setState({\r\n                    activeVariableIndex: activeVariableIndex,\r\n                    isActiveVariable: false,\r\n                    activeVariableRange: variableSelectedRange,\r\n                    focusedElementIndex: _.findIndex(ELEMENTS, el => el === TEXTAREA),\r\n                    cursorPosition: this.variableInput.selectionDirection === 'forward' ? this.variableInput.selectionEnd : this.variableInput.selectionStart,\r\n                    selectionRangePosition: {\r\n                        start: selectionStart,\r\n                        end: selectionEnd\r\n                    }\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    activeVariableIndex: activeVariableIndex,\r\n                    isActiveVariable: false,\r\n                    activeVariableRange: variableSelectedRange,\r\n                    focusedElementIndex: _.findIndex(ELEMENTS, el => el === TEXTAREA),\r\n                    cursorPosition: this.variableInput.selectionDirection === 'forward' ? this.variableInput.selectionEnd : this.variableInput.selectionStart,\r\n                    selectionRangePosition: {\r\n                        start: this.variableInput.selectionStart,\r\n                        end: this.variableInput.selectionEnd\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    handleVariableClick = (e) => {\r\n        if (!this.props.isLockedProcessPlan) {\r\n            let target = _.includes(e.target.className.split(/\\s+/), 'variable-element') ? e.target : e.target.parentElement;\r\n            let activeVariableIndex = _.findIndex(this.variablesContainer.children, target);\r\n            if (activeVariableIndex !== -1) {\r\n                this.setState({\r\n                    activeVariableIndex,\r\n                    cursorPosition: this.state.vars[activeVariableIndex].offset + 1,\r\n                    focusedElementIndex: _.findIndex(ELEMENTS, el => el === TEXTAREA),\r\n                    activeVariableRange: [],\r\n                    selectionRangePosition: {\r\n                        start: this.state.vars[activeVariableIndex].offset,\r\n                        end: this.state.vars[activeVariableIndex].offset + this.state.vars[activeVariableIndex].length\r\n                    }\r\n                });\r\n                this.variableInput.focus();\r\n            }\r\n        }\r\n    };\r\n\r\n    handleArrowDownClick = () => {\r\n        this.addNewVariable();\r\n        this.variableInput.selectionStart = this.state.cursorPosition + 1;\r\n        this.setState({\r\n            changingActiveVariable: true,\r\n            isActiveVariable: !this.state.isActiveVariable,\r\n            isModifiedVariable: !this.state.isModifiedVariable,\r\n            cursorPosition: this.state.cursorPosition + 1,\r\n            activeVariableIndex: null\r\n        });\r\n\r\n    };\r\n\r\n    selectRangeByKeyboard = (e, direction) => {\r\n        let startSelectionPosition = e.target.selectionStart;\r\n        let endSelectionPosition = e.target.selectionEnd;\r\n        let variableSelectedRange = [];\r\n\r\n        _.forEach(this.state.vars, (variable, index) => {\r\n            if (variable.offset > startSelectionPosition && variable.offset + variable.length < endSelectionPosition) {\r\n                variableSelectedRange.push(index);\r\n            } else if (direction === DIRECTION.RIGHT) {\r\n                if (endSelectionPosition >= variable.offset && endSelectionPosition <= variable.offset + variable.length) {\r\n                    variableSelectedRange.push(index);\r\n                    endSelectionPosition = variable.offset + variable.length + 1;\r\n                } else if (startSelectionPosition >= variable.offset && startSelectionPosition <= variable.offset + variable.length) {\r\n                    startSelectionPosition = variable.offset + variable.length + 1;\r\n                }\r\n            } else if (direction === DIRECTION.LEFT) {\r\n                if (startSelectionPosition >= variable.offset && startSelectionPosition <= variable.offset + variable.length) {\r\n                    variableSelectedRange.push(index);\r\n                    startSelectionPosition = variable.offset - 1;\r\n                } else if (endSelectionPosition >= variable.offset && endSelectionPosition <= variable.offset + variable.length) {\r\n                    endSelectionPosition = variable.offset - 1;\r\n                }\r\n            }\r\n        });\r\n        this.setState({\r\n            cursorPosition: startSelectionPosition,\r\n            activeVariableRange: variableSelectedRange,\r\n            selectionRangePosition: {\r\n                start: startSelectionPosition,\r\n                end: endSelectionPosition\r\n            }\r\n        });\r\n    };\r\n\r\n    removeVariableByIndex = variableIndex => {\r\n        let variableToRemove = this.state.vars[variableIndex];\r\n        if (variableToRemove) {\r\n            let value = this.state.value.slice(0, variableToRemove.offset - 1) + this.state.value.slice(variableToRemove.offset + variableToRemove.length + 1);\r\n            let vars = [...this.state.vars];\r\n            _.remove(vars, variableToRemove);\r\n            vars = _.map(vars, variable => {\r\n                if (variable.offset > variableToRemove.offset) {\r\n                    return {\r\n                        ...variable,\r\n                        offset: variable.offset - variableToRemove.length - 2\r\n                    }\r\n                }\r\n                return variable;\r\n            });\r\n            this.setState({\r\n                value,\r\n                vars,\r\n                cursorPosition: variableToRemove.offset - 1,\r\n                activeVariableIndex: null\r\n            });\r\n            this.props.onChange(this.convertToProps(value, vars));\r\n        }\r\n    };\r\n\r\n    handleScroll = () => {\r\n        this.variableInput.scrollLeft = Math.round(this.variableInput.scrollLeft);\r\n        this.variablesContainer.scrollLeft = this.variableInput.scrollLeft;\r\n    };\r\n\r\n    handleScrollContainer = () => {\r\n        this.variablesContainer.scrollLeft = Math.round(this.variablesContainer.scrollLeft);\r\n        this.variableInput.scrollLeft = this.variablesContainer.scrollLeft;\r\n    };\r\n\r\n    deleteRange = () => {\r\n        let selectionStartPosition = this.state.selectionRangePosition.start;\r\n        let selectionEndPosition = this.state.selectionRangePosition.end;\r\n        let offset = selectionEndPosition - selectionStartPosition;\r\n\r\n        let value = this.state.value.slice(0, selectionStartPosition) + this.state.value.slice(selectionEndPosition, this.state.value.length);\r\n        let vars = [...this.state.vars];\r\n        vars = _.chain(vars)\r\n            .filter((variable, index) => !_.includes(this.state.activeVariableRange, index))\r\n            .map((variable, index) => {\r\n                if (_.includes(this.state.activeVariableRange, index) || index > _.last(this.state.activeVariableRange) || variable.offset > selectionEndPosition) {\r\n                    return {\r\n                        ...variable,\r\n                        offset: variable.offset - offset\r\n                    }\r\n                } else {\r\n                    return {\r\n                        ...variable\r\n                    }\r\n                }\r\n            })\r\n            .value();\r\n        this.setState({\r\n            value,\r\n            vars,\r\n            cursorPosition: selectionStartPosition,\r\n            activeVariableRange: [],\r\n            selectionRangePosition: {\r\n                start: selectionStartPosition,\r\n                end: selectionStartPosition\r\n            }\r\n        });\r\n        this.props.onChange(this.convertToProps(value, vars));\r\n    };\r\n\r\n    deleteFullWord = (e) => {\r\n        if (!_.isNull(this.state.activeVariableIndex)) {\r\n            this.removeVariableByIndex(this.state.activeVariableIndex);\r\n            return;\r\n        } else if (this.state.selectionRangePosition.start !== this.state.selectionRangePosition.end) {\r\n            this.deleteRange();\r\n            return;\r\n        }\r\n\r\n        let startPositionToDelete = e.target.selectionStart;\r\n        let firstSpace = this.state.value.slice(startPositionToDelete).match(/\\s+/);\r\n        let endPositionToDelete = _.isNull(firstSpace) ? this.state.value.length + 1 : startPositionToDelete + firstSpace.index;\r\n        let activeVariableRange = [];\r\n\r\n        if (startPositionToDelete === endPositionToDelete) {\r\n            let variableToDeleteIndex = _.findIndex(this.state.vars, variable => variable.offset + 1 === endPositionToDelete + firstSpace[0].length);\r\n            if (variableToDeleteIndex !== -1) {\r\n                if (this.state.vars[variableToDeleteIndex].offset - 1 === endPositionToDelete) {\r\n                    endPositionToDelete = this.state.vars[variableToDeleteIndex].offset + this.state.vars[variableToDeleteIndex].length + 1;\r\n                    activeVariableRange.push(variableToDeleteIndex);\r\n                } else {\r\n                    endPositionToDelete = this.state.vars[variableToDeleteIndex].offset - 1;\r\n                }\r\n            } else {\r\n                endPositionToDelete += firstSpace[0].length;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            cursorPosition: startPositionToDelete,\r\n            selectionRangePosition: {start: startPositionToDelete, end: endPositionToDelete},\r\n            activeVariableRange\r\n        }, this.deleteRange);\r\n    };\r\n\r\n    deleteFullWordByBackspace = (e) => {\r\n        if (!_.isNull(this.state.activeVariableIndex)) {\r\n            this.removeVariableByIndex(this.state.activeVariableIndex);\r\n            return;\r\n        } else if (this.state.selectionRangePosition.start !== this.state.selectionRangePosition.end) {\r\n            this.deleteRange();\r\n            return;\r\n        }\r\n\r\n        let endPositionToDelete = e.target.selectionStart;\r\n        let firstSpaceWithText = this.state.value.slice(0, endPositionToDelete).match(/[^\\s]*\\s*$/);\r\n        let startPositionToDelete = _.isNull(firstSpaceWithText) ? 0 : firstSpaceWithText.index;\r\n        let activeVariableRange = [];\r\n\r\n        let variableToDeleteIndex = _.findIndex(this.state.vars, variable => variable.offset + variable.length - 2 === startPositionToDelete);\r\n\r\n        if (variableToDeleteIndex !== -1) {\r\n            startPositionToDelete = this.state.vars[variableToDeleteIndex].offset - 1;\r\n            activeVariableRange.push(variableToDeleteIndex);\r\n        }\r\n\r\n        this.setState({\r\n            cursorPosition: startPositionToDelete,\r\n            selectionRangePosition: {start: startPositionToDelete, end: endPositionToDelete},\r\n            activeVariableRange\r\n        }, this.deleteRange);\r\n    };\r\n\r\n    handleCursorPositionChanged = (e, direction) => {\r\n        let cursorPosition = e.target.selectionStart;\r\n\r\n        if (e.target.selectionEnd !== this.state.selectionRangePosition.end + 1 && direction === 'right') {\r\n            cursorPosition = e.target.selectionEnd + 1;\r\n        } else if (e.target.selectionEnd !== this.state.selectionRangePosition.end + 1 && direction === 'down') {\r\n            cursorPosition = this.state.value.length;\r\n        } else if (e.target.selectionStart !== this.state.selectionRangePosition.start + 1 && direction === 'up') {\r\n            cursorPosition = 0;\r\n        }\r\n\r\n        let activeVariableIndex = null;\r\n\r\n        _.forEach(this.state.vars, (variable, index) => {\r\n            if (cursorPosition === variable.offset && direction === DIRECTION.LEFT) {\r\n                cursorPosition = variable.offset - 1;\r\n            } else if (cursorPosition === variable.offset + 2 && direction === DIRECTION.RIGHT) {\r\n                cursorPosition = variable.offset + variable.length + 1;\r\n            } else if (variable.offset <= cursorPosition && variable.offset + variable.length >= cursorPosition) {\r\n                activeVariableIndex = index;\r\n                cursorPosition = variable.offset + 1;\r\n            }\r\n        });\r\n        this.setState({\r\n            activeVariableIndex,\r\n            activeVariableRange: [],\r\n            cursorPosition: cursorPosition,\r\n            selectionRangePosition: {start: cursorPosition, end: cursorPosition}\r\n        });\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if (this.state.isActiveVariable) {\r\n            return;\r\n        }\r\n\r\n        let variableToRemoveIndex;\r\n\r\n        if (e.ctrlKey) {\r\n            if (e.which === 65) { //A\r\n                e.preventDefault();\r\n                e.target.selectionStart = 0;\r\n                e.target.selectionEnd = this.state.value.length;\r\n                this.selectRangeByKeyboard(e);\r\n            } else if (e.which === 8) { //BackSpace\r\n                e.preventDefault();\r\n                this.deleteFullWordByBackspace(e);\r\n            } else if (e.which === 46) { //Delete\r\n                e.preventDefault();\r\n                this.deleteFullWord(e);\r\n            }\r\n        } else if (e.altKey) {\r\n            switch (e.key) {\r\n                case 'ArrowLeft':\r\n                    e.preventDefault();\r\n                    if (this.state.focusedElementIndex > 0) {\r\n                        e.stopPropagation();\r\n                        this.setState({focusedElementIndex: this.state.focusedElementIndex - 1});\r\n                    }\r\n                    break;\r\n                case 'ArrowRight':\r\n                    e.preventDefault();\r\n                    if (this.state.focusedElementIndex < ELEMENTS.length - 1) {\r\n                        e.stopPropagation();\r\n                        this.setState({focusedElementIndex: this.state.focusedElementIndex + 1});\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        } else if (!e.shiftKey) {\r\n            switch (e.key) {\r\n                case 'ArrowDown':\r\n                    if (this.state.selectionRangePosition.end !== this.state.selectionRangePosition.start) {\r\n                        e.preventDefault();\r\n                        e.target.selectionStart = this.state.selectionRangePosition.end;\r\n                        e.target.selectionEnd = this.state.selectionRangePosition.end;\r\n                    }\r\n                    break;\r\n                case 'ArrowUp':\r\n                    if (this.state.selectionRangePosition.end !== this.state.selectionRangePosition.start) {\r\n                        e.preventDefault();\r\n                        e.target.selectionStart = this.state.selectionRangePosition.start;\r\n                        e.target.selectionEnd = this.state.selectionRangePosition.start;\r\n                    }\r\n                    break;\r\n                case 'Enter':\r\n                case 'Return':\r\n                    if (ELEMENTS[this.state.focusedElementIndex] === BUTTON && !this.state.isActiveVariable) {\r\n                        e.preventDefault();\r\n                        this.addNewVariable();\r\n                    } else if (ELEMENTS[this.state.focusedElementIndex] === TEXTAREA && !_.isNull(this.state.activeVariableIndex)) {\r\n                        e.preventDefault();\r\n                        this.setState({changingActiveVariable: true});\r\n                        this.addNewVariable();\r\n                    } else if (!this.props.multiLine) {\r\n                        e.preventDefault();\r\n                    }\r\n                    break;\r\n                case 'PageUp':\r\n                    this.setState({\r\n                        cursorPosition: 0\r\n                    });\r\n                    this.variableInput.scrollLeft = 0;\r\n                    this.variablesContainer.scrollLeft = 0;\r\n                    break;\r\n                case 'PageDown':\r\n                    this.setState({\r\n                        cursorPosition: this.variableInput.value.length + 1\r\n                    });\r\n                    let maxScrollLeft = this.variableInput.scrollWidth - this.variableInput.clientWidth;\r\n                    this.variableInput.scrollLeft = maxScrollLeft;\r\n                    this.variablesContainer.scrollLeft = maxScrollLeft;\r\n                    break;\r\n                case 'Delete':\r\n                    if (ELEMENTS[this.state.focusedElementIndex] === TEXTAREA) {\r\n                        if (this.state.activeVariableRange.length !== 0) {\r\n                            e.preventDefault();\r\n                            this.deleteRange();\r\n                        } else {\r\n                            variableToRemoveIndex = this.state.activeVariableIndex;\r\n                            if (_.isNull(variableToRemoveIndex)) {\r\n                                _.map(this.state.vars, (variable, index) => {\r\n                                    if (e.target.selectionStart === variable.offset - 1) {\r\n                                        variableToRemoveIndex = index;\r\n                                    }\r\n                                });\r\n                            }\r\n                            if (!_.isNull(variableToRemoveIndex)) {\r\n                                e.preventDefault();\r\n                                this.removeVariableByIndex(variableToRemoveIndex);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'Backspace':\r\n                    if (ELEMENTS[this.state.focusedElementIndex] === TEXTAREA) {\r\n                        if (this.state.activeVariableRange.length !== 0) {\r\n                            e.preventDefault();\r\n                            this.deleteRange();\r\n                        } else {\r\n                            variableToRemoveIndex = this.state.activeVariableIndex;\r\n                            if (_.isNull(variableToRemoveIndex)) {\r\n                                _.map(this.state.vars, (variable, index) => {\r\n                                    if (e.target.selectionStart === variable.offset + variable.length + 1) {\r\n                                        variableToRemoveIndex = index;\r\n                                    }\r\n                                });\r\n                            }\r\n                            if (!_.isNull(variableToRemoveIndex)) {\r\n                                e.preventDefault();\r\n                                this.removeVariableByIndex(variableToRemoveIndex);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (e.key !== 'ArrowLeft' && e.key !== 'ArrowRight') {\r\n                        if (this.state.activeVariableRange.length !== 0) {\r\n                            this.deleteRange();\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleKeyUp = (e) => {\r\n        if (this.state.isActiveVariable) {\r\n            return;\r\n        }\r\n\r\n        if (e.ctrlKey) {\r\n            if (e.shiftKey) {\r\n                switch (e.key) {\r\n                    case 'End':\r\n                        this.variableInput.scrollLeft = this.variableInput.scrollWidth - this.variableInput.clientWidth;\r\n                        this.variablesContainer.scrollLeft = this.variableInput.scrollWidth - this.variableInput.clientWidth;\r\n\r\n                        e.target.selectionEnd = this.state.value.length;\r\n                        this.selectRangeByKeyboard(e, DIRECTION.RIGHT);\r\n                        break;\r\n                    case 'PageDown':\r\n                    case 'ArrowDown':\r\n                        if (e.target.selectionStart === 0 && e.target.selectionEnd !== e.target.selectionStart) {\r\n                            e.target.selectionStart = e.target.selectionEnd;\r\n                        } else {\r\n                            this.variableInput.scrollLeft = this.variableInput.scrollWidth - this.variableInput.clientWidth;\r\n                            this.variablesContainer.scrollLeft = this.variableInput.scrollWidth - this.variableInput.clientWidth;\r\n\r\n                            e.target.selectionEnd = this.state.value.length;\r\n                        }\r\n                        this.selectRangeByKeyboard(e, DIRECTION.RIGHT);\r\n                        break;\r\n                    case 'Home':\r\n                        this.variableInput.scrollLeft = 0;\r\n                        this.variablesContainer.scrollLeft = 0;\r\n\r\n                        e.target.selectionStart = 0;\r\n                        this.selectRangeByKeyboard(e, DIRECTION.LEFT);\r\n                        break;\r\n                    case 'PageUp':\r\n                    case 'ArrowUp':\r\n                        if (e.target.selectionEnd === this.state.value.length && e.target.selectionStart !== e.target.selectionEnd) {\r\n                            e.target.selectionEnd = e.target.selectionStart;\r\n                        } else {\r\n                            this.variableInput.scrollLeft = 0;\r\n                            this.variablesContainer.scrollLeft = 0;\r\n\r\n                            e.target.selectionStart = 0;\r\n                        }\r\n                        this.selectRangeByKeyboard(e, DIRECTION.LEFT);\r\n                        break;\r\n                    case 'ArrowLeft':\r\n                        this.selectRangeByKeyboard(e, DIRECTION.LEFT);\r\n                        break;\r\n                    case 'ArrowRight':\r\n                        _.forEach(this.state.vars, variable => {\r\n                            if (variable.offset + 1 === e.target.selectionEnd) {\r\n                                e.target.selectionEnd = variable.offset - 1;\r\n                            } else if (variable.offset + 1 === e.target.selectionStart) {\r\n                                e.target.selectionStart = variable.offset - 1;\r\n                            }\r\n                        });\r\n                        this.selectRangeByKeyboard(e, DIRECTION.RIGHT);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        } else if (e.shiftKey) {\r\n            switch (e.key) {\r\n                case 'Home':\r\n                case 'ArrowUp':\r\n                case 'ArrowLeft':\r\n                    this.selectRangeByKeyboard(e, DIRECTION.LEFT);\r\n                    break;\r\n                case 'End':\r\n                case 'ArrowDown':\r\n                case 'ArrowRight':\r\n                    this.selectRangeByKeyboard(e, DIRECTION.RIGHT);\r\n                    break;\r\n                case 'PageDown':\r\n                    if (e.target.selectionStart === 0 && e.target.selectionEnd !== e.target.selectionStart) {\r\n                        e.target.selectionStart = e.target.selectionEnd;\r\n                    } else {\r\n                        e.target.selectionEnd = this.state.value.length;\r\n                    }\r\n                    this.selectRangeByKeyboard(e, DIRECTION.RIGHT);\r\n                    break;\r\n                case 'PageUp':\r\n                    if (e.target.selectionEnd === this.state.value.length && e.target.selectionStart !== e.target.selectionEnd) {\r\n                        e.target.selectionEnd = e.target.selectionStart;\r\n                    } else {\r\n                        e.target.selectionStart = 0;\r\n                    }\r\n                    this.selectRangeByKeyboard(e, DIRECTION.LEFT);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowRight':\r\n                    this.handleCursorPositionChanged(e, DIRECTION.RIGHT);\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    this.handleCursorPositionChanged(e, DIRECTION.LEFT);\r\n                    break;\r\n                case 'ArrowDown':\r\n                    this.handleCursorPositionChanged(e, DIRECTION.DOWN);\r\n                    break;\r\n                case 'ArrowUp':\r\n                    this.handleCursorPositionChanged(e, DIRECTION.UP);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClick = () => {\r\n       if(!_.isUndefined(this.props.id)){\r\n           this.props.onSetSelection()\r\n       }\r\n    };\r\n}\r\n\r\nconst VarsShape = PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    offset: PropTypes.number.isRequired,\r\n    length: PropTypes.number.isRequired\r\n});\r\n\r\nconst ValueShape = PropTypes.shape({\r\n    value: PropTypes.string.isRequired,\r\n    vars: PropTypes.arrayOf(VarsShape)\r\n});\r\n\r\nconst VariablesShape = PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    key: PropTypes.string.isRequired,\r\n    value: PropTypes.string,\r\n    type: PropTypes.oneOf([VariableTypes.VARIABLE, VariableTypes.SCRIPT])\r\n});\r\n\r\nVariableInput.propTypes = {\r\n    id: PropTypes.string,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([ValueShape, PropTypes.string]),\r\n    variables: PropTypes.arrayOf(VariablesShape),\r\n    multiLine: PropTypes.bool.isRequired,\r\n    translate: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    onSetSelection: PropTypes.func.isRequired\r\n};\r\n\r\nexport default VariableInput;\r\n","import {connect} from 'react-redux';\r\nimport {getTranslate} from 'react-localize-redux';\r\nimport VariableInput from \"./VariableInput\";\r\nimport {getVariables} from \"../../../../redux/modules/availableObjects\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        variables: getVariables(state),\r\n        translate: getTranslate(state.localize)\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, {onSelect, id}) => ({\r\n    onSetSelection: () => onSelect(id)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VariableInput)\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport {translatedTransitionCheckboxType} from \"../../../../dictionary\"\r\nimport CheckBox from '../checkBox/CheckBox';\r\n\r\nimport './CheckBoxGroup.css';\r\n\r\nclass CheckBoxGroup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.checkboxes = [];\r\n        this.state = {\r\n            selectedCheckBoxIndex: 0\r\n        }\r\n    }\r\n\r\n    setCheckBoxGroup = (checkBoxGroup) => {\r\n        this.checkBoxGroup = checkBoxGroup;\r\n    };\r\n\r\n    render() {\r\n        let className = 'checkbox-group ' + (this.props.className || ' ');\r\n\r\n        if (this.checkboxes.length !== 0) {\r\n            this.checkboxes = [];\r\n        }\r\n\r\n        return (\r\n            <div className={className} ref={this.setCheckBoxGroup} tabIndex=\"0\" onKeyDown={this.handleKeyDown}>\r\n                <label id={`checkbox-group-label-${this.props.label}`}>{this.props.translate(translatedTransitionCheckboxType[this.props.label])}</label>\r\n                <div>{_.map(this.props.options, this.renderOption)}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderOption = (option) => {\r\n        this.checkboxes.push(option.value);\r\n        return (\r\n            <CheckBox key={option.value}\r\n                      id={this.props.id}\r\n                      label={option.label}\r\n                      groupLabelId={`checkbox-group-label-${this.props.label}`}\r\n                      focused={this.checkboxes[this.state.selectedCheckBoxIndex] === option.value && this.props.focused}\r\n                      value={_.includes(this.props.values, option.value)}\r\n                      selectedOnOtherTransitions={_.includes(this.props.selectedOptions, option.value)}\r\n                      disabled={this.props.disabled}\r\n                      translate={this.props.translate}\r\n                      onChange={this.handleChangeOption(option.value)}\r\n                      onSelect={this.props.onSetSelection}/>\r\n        );\r\n    };\r\n\r\n    handleChangeOption = (optionValue) => (checked) => {\r\n        if (checked) {\r\n            this.props.onChange([...this.props.values, optionValue]);\r\n        } else {\r\n            this.props.onChange(_.filter(this.props.values, value => value !== optionValue));\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        switch (e.key) {\r\n            case 'ArrowDown':\r\n                if (this.state.selectedCheckBoxIndex < this.checkboxes.length - 1) {\r\n                    e.stopPropagation();\r\n                    this.setState({...this.state, selectedCheckBoxIndex: this.state.selectedCheckBoxIndex + 1});\r\n                }\r\n                break;\r\n            case 'ArrowUp':\r\n                if (this.state.selectedCheckBoxIndex > 0) {\r\n                    e.stopPropagation();\r\n                    this.setState({...this.state, selectedCheckBoxIndex: this.state.selectedCheckBoxIndex - 1});\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n}\r\n\r\nconst OptionShape = PropTypes.shape({\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired\r\n});\r\n\r\nCheckBoxGroup.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    values: PropTypes.arrayOf(PropTypes.string),\r\n    options: PropTypes.arrayOf(OptionShape),\r\n    className: PropTypes.string,\r\n    focused: PropTypes.bool,\r\n    selectedOptions: PropTypes.arrayOf(PropTypes.string),\r\n    translate: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    onSetSelection: PropTypes.func.isRequired\r\n};\r\n\r\nexport default CheckBoxGroup;","import {connect} from 'react-redux';\r\nimport CheckBoxGroup from './CheckBoxGroup';\r\n\r\nconst mapDispatchToProps = (dispatch, {onSelect, id}) => ({\r\n    onSetSelection: () => onSelect(id)\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckBoxGroup);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {translatedTransitionRadioButtonType} from \"../../../../dictionary\";\r\nimport './RadioButton.css';\r\n\r\nclass RadioButton extends React.Component {\r\n    setRadioButton = (radioButton) => {\r\n        this.radioButton = radioButton;\r\n    };\r\n\r\n    render() {\r\n        let className = \"radio-button-container\" + (this.props.className ? \" \" + this.props.className : \"\")\r\n            + (this.props.focused ? \" focused \" : \" \")\r\n            + (this.props.selectedOnOtherTransitions ? ' selected-on-other-transition' : ' ')\r\n            + (this.props.disabled ? ' radio-button-container-disabled' : '');\r\n        let labelClassName = this.props.disabled ? ' label-for-radio-button-container-disabled' : ' label-for-radio-button-container';\r\n        let icon = this.props.value ? \"radio_button_checked\" : \"radio_button_unchecked\";\r\n        return (\r\n            <div ref={this.setRadioButton}\r\n                 className={className}\r\n                 aria-labelledby={`${this.props.groupLabelId || ''} radioButton-label-${this.props.label.replace(' ', '-')}`}\r\n                 role='checkbox'\r\n                 aria-checked={this.props.value}\r\n                 tabIndex=\"0\"\r\n                 onKeyDown={this.handleKeyDown}\r\n                 onClick={this.handleClick}>\r\n                <i key={icon} className=\"material-icons\">{icon}</i>\r\n                <label id={`radioButton-label-${this.props.label.replace(' ', '-')}`} className={labelClassName}>\r\n                    {this.props.translate(translatedTransitionRadioButtonType[this.props.label])}\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.focused) {\r\n            this.radioButton.focus();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.focused && this.props.focused) {\r\n            this.radioButton.focus();\r\n        }\r\n        if (prevProps.disabled !== this.props.disabled && this.props.disabled){\r\n            this.props.onChange(false);\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        if (!this.props.disabled) {\r\n            this.props.onChange(!this.props.value);\r\n        }\r\n        this.radioButton.focus();\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if (!this.props.disabled) {\r\n            if (e.which === 13 || e.keyCode === 13) { // enter\r\n                this.props.onChange(!this.props.value);\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nRadioButton.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.bool.isRequired,\r\n    className: PropTypes.string,\r\n    focused: PropTypes.bool,\r\n    groupLabelId: PropTypes.string,\r\n    selectedOnOtherTransitions: PropTypes.bool,\r\n    translate: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default RadioButton;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ModalPdfOverview.css';\r\nimport CheckBox from '../checkBox/CheckBox';\r\nimport RadioButton from '../radioButton/RadioButton';\r\nimport Select from 'react-select';\r\nimport _ from 'lodash';\r\n\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\r\n\r\nclass ModalPdfOverview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            highlightingProblems: this.props.details === 'mask_report' || this.props.details === 'layer_report'\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal className=\"process-plan-json-modal\" isOpen={this.props.modalIsOpen}\r\n                   toggle={this.toggleModal}\r\n                   fade={this.props.modalIsOpenCount === 0}\r\n                   role=\"dialog\"\r\n            >\r\n                <ModalHeader toggle={this.toggleModal}/>\r\n                <ModalBody className='modal-pdf-overview'>\r\n                    <Select id={'modal-select'}\r\n                            options={this.props.templateOptions}\r\n                            value={_.isUndefined(this.props.template)\r\n                                ? _.find(this.props.templateOptions, option => _.isEqual(option.value, ''))\r\n                                : _.find(this.props.templateOptions, option => _.isEqual(option.value, this.props.template))}\r\n                            ref={this.setSelect}\r\n                            isDisabled={false}\r\n                            onChange={this.handleTemplateOptionsChange}\r\n                            onSelect={this.handleSelect}\r\n                    />\r\n                    <CheckBox id={'modal-CheckBox'}\r\n                              value={this.state.highlightingProblems}\r\n                              label={'Problems highlighting'}\r\n                              groupLabelId={'Modal'}\r\n                              focused={false}\r\n                              disabled={false}\r\n                              translate={this.props.translate}\r\n                              onChange={this.highlightingCheckedChange}\r\n                              onSelect={this.handleSelect}\r\n                    />\r\n                    <div className='details'>\r\n                        <RadioButton\r\n                            value={(this.props.details === 'mask_report' && this.state.highlightingProblems) || this.props.details === ''}\r\n                            label={'Transparent masks'}\r\n                            groupLabelId={'Modal'}\r\n                            focused={false}\r\n                            disabled={!this.state.highlightingProblems}\r\n                            translate={this.props.translate}\r\n                            onChange={this.maskCheckedChange}/>\r\n                        <RadioButton value={this.props.details === 'layer_report' && this.state.highlightingProblems}\r\n                                     label={'Layers'}\r\n                                     groupLabelId={'Modal'}\r\n                                     focused={false}\r\n                                     disabled={!this.state.highlightingProblems}\r\n                                     translate={this.props.translate}\r\n                                     onChange={this.layerCheckedChange}/>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter/>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    handleTemplateOptionsChange = (selectedOption) => {\r\n        this.props.onPropertyChange(\r\n            this.props.transitionId,\r\n            {\r\n                type: \"overview_report\",\r\n                details: this.props.details,\r\n                template: _.isUndefined(selectedOption) ? _.find(this.props.templateOptions, option => _.isEqual(option.value, '')).value : selectedOption.value\r\n            });\r\n        this.props.onSetModalCount();\r\n    };\r\n\r\n    highlightingCheckedChange = () => {\r\n        if (this.state.highlightingProblems) {\r\n            this.props.onPropertyChange(\r\n                this.props.transitionId,\r\n                {\r\n                    type: \"overview_report\",\r\n                    details: '',\r\n                    template: this.props.template\r\n                });\r\n        } else {\r\n            this.props.onPropertyChange(\r\n                this.props.transitionId,\r\n                {\r\n                    type: \"overview_report\",\r\n                    details: 'mask_report',\r\n                    template: this.props.template\r\n                });\r\n        }\r\n        this.props.onSetModalCount();\r\n        this.setState({\r\n            highlightingProblems: !this.state.highlightingProblems\r\n        });\r\n    };\r\n\r\n    maskCheckedChange = () => {\r\n        if (this.state.highlightingProblems && this.props.details !== 'mask_report') {\r\n            this.props.onSetModalCount();\r\n            this.props.onPropertyChange(\r\n                this.props.transitionId,\r\n                {\r\n                    type: \"overview_report\",\r\n                    details: 'mask_report',\r\n                    template: this.props.template\r\n                });\r\n        }\r\n    };\r\n\r\n    layerCheckedChange = () => {\r\n        if (this.state.highlightingProblems && this.props.details !== 'layer_report') {\r\n            this.props.onSetModalCount();\r\n            this.props.onPropertyChange(\r\n                this.props.transitionId,\r\n                {\r\n                    type: \"overview_report\",\r\n                    details: 'layer_report',\r\n                    template: this.props.template\r\n                });\r\n        }\r\n    };\r\n\r\n    toggleModal = () => {\r\n        this.props.onSetModal(!this.props.modalIsOpen);\r\n    };\r\n\r\n    handleSelect = (selectedType) => {\r\n        this.setState({...this.state, selectedPropertyIndex: _.findIndex(this.properties, property => property === selectedType)});\r\n    };\r\n}\r\n\r\nModalPdfOverview.propTypes = {\r\n    translate: PropTypes.func.isRequired,\r\n    templateOptions: PropTypes.array.isRequired,\r\n    transitionId: PropTypes.string.isRequired,\r\n    details: PropTypes.string.isRequired,\r\n    template: PropTypes.string,\r\n    modalIsOpen: PropTypes.bool.isRequired,\r\n    modalIsOpenCount: PropTypes.number,\r\n    onPropertyChange: PropTypes.func.isRequired,\r\n    onSetModal: PropTypes.func.isRequired,\r\n    onSelectModal: PropTypes.func.isRequired,\r\n    onCount: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ModalPdfOverview;\r\n","import {connect} from 'react-redux';\r\nimport ModalPdfOverview from \"./ModalPdfOverview\";\r\nimport {applyChange} from \"../../../../redux/modules/changeStack\";\r\nimport {ChangeTransitionProperty} from \"../../../../redux/model/ChangeTransitionProperty\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, {onSelectModal, onCount, onSelect, id}) => ({\r\n    onPropertyChange: (transitionId, value) => {\r\n        dispatch(applyChange(new ChangeTransitionProperty(transitionId, 'pdf_overview_details', value)));\r\n    },\r\n    onSetModal: (modalIsOpened) => onSelectModal(modalIsOpened),\r\n    onSetModalCount: () => onCount(),\r\n    onSetSelection: () => onSelect(id)\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ModalPdfOverview);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select, {components} from 'react-select';\r\nimport _ from 'lodash';\r\n\r\nimport './CheckableMultiSelect.css';\r\nimport CheckBox from '../checkBox/CheckBox';\r\nimport ModalPdfOverview from \"../modalPdfOverview/ModalPdfOverview.container\";\r\n\r\nconst ELEMENTS = ['checkbox', 'select'];\r\n\r\nclass CheckableMultiSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedElementIndex: 0,\r\n            openedSelect: false,\r\n            modalIsOpen: false,\r\n            modalOpenCount: 0\r\n        };\r\n    }\r\n\r\n    setSelect = (select) => {\r\n        this.select = select;\r\n    };\r\n\r\n    render() {\r\n        let className = 'checkable-multi-select ' + (this.props.className || ' ');\r\n\r\n        let flatOptions = _.chain(this.props.options)                    // Ungroup options into plain list for easier search\r\n            .map('options')\r\n            .flatten()\r\n            .value();\r\n        let selectedOptions = this.props.value.values.map(\r\n            value => _.find(flatOptions, option => _.isEqual(option.value, value.type))\r\n        );\r\n        const MultiValueContainer = (props) => {\r\n            let modalDetails = _.find(this.props.value.values, value => value.type === 'overview_report');\r\n            return (\r\n                <div>\r\n                    <components.MultiValueContainer {...props}>\r\n                        {props.children[0]}\r\n                        {props.children[0]._owner.key === 'overview_report' ?\r\n                            <div className=\"report-edit-icon\" onMouseDown={(e) => this.handleMultiValueClick(e, props)}>\r\n                                <i className=\"material-icons\">edit</i>\r\n                            </div>\r\n                            : <i/>}\r\n                        {props.children[1]}\r\n                    </components.MultiValueContainer>\r\n                    {this.state.modalIsOpen && props.children[0]._owner.key === 'overview_report' ?\r\n                        <ModalPdfOverview\r\n                            translate={this.props.translate}\r\n                            transitionId={this.props.parentId}\r\n                            details={modalDetails.details}\r\n                            template={modalDetails.template}\r\n                            templateOptions={this.props.templateOptions}\r\n                            modalIsOpen={this.state.modalIsOpen}\r\n                            modalIsOpenCount={this.state.modalOpenCount}\r\n                            onCount={this.handleSetModalCount}\r\n                            onSelectModal={this.handleSetModal}\r\n                        /> : <></>}\r\n                </div>);\r\n        };\r\n\r\n        return (\r\n            <div className={className} tabIndex=\"0\" onKeyDown={this.handleKeyDown}>\r\n                <CheckBox\r\n                    id={this.props.id}\r\n                    value={this.props.value.checked}\r\n                    label={this.props.label}\r\n                    groupLabelId={this.props.groupLabelId}\r\n                    focused={ELEMENTS[this.state.selectedElementIndex] === 'checkbox' && this.props.focused}\r\n                    disabled={this.props.disabled}\r\n                    translate={this.props.translate}\r\n                    onChange={this.handleCheckedChange}\r\n                    onSelect={this.props.onSetSelection}/>\r\n                <Select\r\n                    id={this.props.id}\r\n                    components={{MultiValueContainer}}\r\n                    options={this.props.options}\r\n                    value={selectedOptions}\r\n                    ref={this.setSelect}\r\n                    isDisabled={!this.props.disabled ? !this.props.value.checked : true}\r\n                    onChange={this.handleSelectedOptionsChange}\r\n                    onClose={this.handleSelectClose}\r\n                    onOpen={this.handleSelectOpen}\r\n                    onSelect={this.props.onSetSelection}\r\n                    isMulti/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (ELEMENTS[prevState.selectedElementIndex] !== 'select' && ELEMENTS[this.state.selectedElementIndex] === 'select') {\r\n            this.select.focus();\r\n        }\r\n        if (prevProps.disabled !== this.props.disabled && this.props.disabled) {\r\n            this.handleSelectedOptionsChange([]);\r\n            this.props.onChange({...this.props.value, values: [], checked: false});\r\n        }\r\n    }\r\n\r\n    handleCheckedChange = (checked) => {\r\n        this.props.onChange({...this.props.value, checked});\r\n    };\r\n\r\n    handleSelectedOptionsChange = (selectedOptions) => {\r\n        this.props.onChange({\r\n            ...this.props.value, values: _.map(selectedOptions, option => {\r\n                if (option.value === 'overview_report') {\r\n                    return {\r\n                        type: option.value,\r\n                        details: '',\r\n                        template: _.find(this.props.templateOptions, option => _.isEqual(option.value, '')).value\r\n                    }\r\n                } else {\r\n                    return {type: option.value}\r\n                }\r\n            })\r\n        });\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        switch (e.key) {\r\n            case 'ArrowDown':\r\n                if (this.state.openedSelect) {\r\n                    e.stopPropagation();\r\n                } else if (this.state.selectedElementIndex < ELEMENTS.length - 1 && this.props.value.checked) {\r\n                    e.stopPropagation();\r\n                    this.setState({...this.state, selectedElementIndex: this.state.selectedElementIndex + 1});\r\n                }\r\n                break;\r\n            case 'ArrowUp':\r\n                if (this.state.openedSelect) {\r\n                    e.stopPropagation();\r\n                } else if (this.state.selectedElementIndex > 0) {\r\n                    e.stopPropagation();\r\n                    this.setState({...this.state, selectedElementIndex: this.state.selectedElementIndex - 1});\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if ((e.which === 38 || e.which === 40) && this.openedSelect) {\r\n            e.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleSelectOpen = () => {\r\n        if (this.props.value.values.length !== this.props.options.length) {\r\n            this.setState({...this.state, openedSelect: true});\r\n        }\r\n    };\r\n\r\n    handleSelectClose = () => {\r\n        this.setState({...this.state, openedSelect: false});\r\n    };\r\n\r\n    handleMultiValueClick = (e, props) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        this.setState({\r\n            ...this.state,\r\n            modalIsOpen: true,\r\n            modalOpenCount: 0\r\n        });\r\n    };\r\n\r\n    handleSetModal = (modal) => {\r\n        this.setState({...this.state, modalIsOpen: modal});\r\n    };\r\n\r\n    handleSetModalCount = () => {\r\n        this.setState({...this.state, modalOpenCount: this.state.modalOpenCount + 1});\r\n    }\r\n\r\n}\r\n\r\nconst VariableShape = PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    key: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired\r\n});\r\n\r\nconst ValueShape = PropTypes.shape({\r\n    checked: PropTypes.bool.isRequired,\r\n    values: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, VariableShape]))\r\n});\r\n\r\nconst OptionShape = PropTypes.shape({\r\n    label: PropTypes.string,\r\n    value: PropTypes.oneOfType([PropTypes.string, VariableShape])\r\n});\r\n\r\nCheckableMultiSelect.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: ValueShape,\r\n    options: PropTypes.arrayOf(OptionShape),\r\n    groupLabelId: PropTypes.string,\r\n    className: PropTypes.string,\r\n    focused: PropTypes.bool,\r\n    groupLabel: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    onSetSelection: PropTypes.func.isRequired,\r\n    parentId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default CheckableMultiSelect;\r\n","import {connect} from 'react-redux';\r\nimport CheckableMultiSelect from './CheckableMultiSelect';\r\nimport {getReportTemplatesOptions} from '../../../../redux/modules/availableObjects';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    templateOptions: getReportTemplatesOptions(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, {onSelect, id}) => ({\r\n    onSetSelection: () => onSelect(id)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckableMultiSelect);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport './ExternalObjectSelect.css';\r\nimport Select from '../select/Select';\r\nimport IconButton from './iconButton/IconButton';\r\nimport {\r\n    translatedExternalAddingElement,\r\n    translatedExternalDuplicatingElement,\r\n    translatedExternalEditingElement\r\n} from \"../../../../dictionary\"\r\n\r\nclass ExternalObjectSelect extends Component {\r\n    render() {\r\n        let disabled = _.isNil(this.props.value) || this.props.disabled;\r\n        return (\r\n            <div\r\n                onClick={this.handleClick}>\r\n                <div className='external-object-editor'>\r\n                    <IconButton\r\n                        icon=\"add\"\r\n                        title={this.props.translate(translatedExternalAddingElement[this.props.type])}\r\n                        disabled={this.props.disabled}\r\n                        onClick={this.props.onCreate}/>\r\n                    <IconButton\r\n                        icon=\"insert_drive_file\"\r\n                        title={this.props.translate(translatedExternalDuplicatingElement[this.props.type])}\r\n                        disabled={disabled}\r\n                        onClick={this.props.onDuplicate}/>\r\n                    <IconButton\r\n                        icon=\"create\"\r\n                        title={this.props.translate(translatedExternalEditingElement[this.props.type])}\r\n                        disabled={disabled}\r\n                        onClick={this.props.onEdit}/>\r\n                </div>\r\n                <Select\r\n                    id={this.props.id}\r\n                    className='property'\r\n                    label={this.props.label}\r\n                    value={this.props.value}\r\n                    options={this.props.options}\r\n                    disabled={this.props.disabled}\r\n                    translate={this.props.translate}\r\n                    onChange={this.props.onChange}\r\n                    onSetSelection={this.props.onSetSelection}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.onSetSelection();\r\n    };\r\n}\r\n\r\nExternalObjectSelect.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    value: PropTypes.string,\r\n    translate: PropTypes.func.isRequired,\r\n    onCreate: PropTypes.func.isRequired,\r\n    onEdit: PropTypes.func.isRequired,\r\n    onDuplicate: PropTypes.func.isRequired,\r\n    onSetSelection: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ExternalObjectSelect;\r\n","import {connect} from 'react-redux';\r\nimport ExternalObjectSelect from './ExternalObjectSelect';\r\nimport {\r\n    createExternalObject,\r\n    duplicateExternalObject,\r\n    editExternalObject\r\n} from '../../../../redux/modules/availableObjects';\r\n\r\nconst mapDispatchToProps = (dispatch, {type, value, onSelect, id}) => ({\r\n    onCreate: () => dispatch(createExternalObject(type)),\r\n    onDuplicate: () => dispatch(duplicateExternalObject(type, value)),\r\n    onEdit: () => dispatch(editExternalObject(type, value)),\r\n    onSetSelection: () => onSelect(id)\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ExternalObjectSelect);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport SidePanel from '../SidePanel';\r\nimport Select from './select/Select.container';\r\nimport CheckBox from './checkBox/CheckBox.container';\r\nimport VariableCheckBox from './variableCheckbox/VariableCheckBox.container';\r\nimport Input from './input/Input.container';\r\nimport VariableInput from './variableInput/VariableInput.container';\r\nimport CheckBoxGroup from './checkBoxGroup/CheckBoxGroup.container';\r\nimport CheckableMultiSelect from './multiSelect/CheckableMultiSelect.container';\r\nimport ExternalObjectSelect from './ExternalObjectSelect/ExternalObjectSelect.container';\r\n\r\nimport {translatedTransitionCheckboxType} from \"../../../dictionary\"\r\n\r\nimport './PropPanel.css';\r\n\r\n\r\nclass PropPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.properties = []; // TODO: move to state\r\n        this.state = {\r\n            selectedPropertyIndex: 0\r\n        }\r\n    }\r\n\r\n    setPropPanel = (propPanel) => {\r\n        this.propPanel = propPanel;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='properties-panel' ref={this.setPropPanel} onKeyDown={this.handleKeyDown}\r\n                 id='properties-panel' tabIndex=\"0\">\r\n                <SidePanel\r\n                    children={this.renderPropertyGroups()}\r\n                    isLockedProcessPlan={this.props.isLockedProcessPlan}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderPropertyGroups = () => {\r\n        if (_.isNil(this.props.propertyGroups)) {\r\n            return null;\r\n        }\r\n        if (this.properties.length !== 0) {\r\n            this.properties = [];\r\n        }\r\n        return _.map(this.props.propertyGroups, group => {\r\n            let label = _.isNil(group.name) ? null : <label>{this.props.translate(translatedTransitionCheckboxType[group.name])}</label>;\r\n            return (\r\n                <div className=\"property-group\" key={label}>\r\n                    {label}\r\n                    {_.map(group.properties, this.renderProperty)}\r\n                </div>\r\n            );\r\n        })\r\n    };\r\n\r\n    renderProperty = (property) => {\r\n        let key = `${property.name}-${this.props.objectId}`;\r\n        this.properties.push(key);\r\n\r\n        let onChange = this.handlePropertyChange(property.objectId, property.name);\r\n        let groupLabelId = _.isNil(property.controlDescriptor.group) ? ' ' : `group-label-${property.controlDescriptor.group.replace(' ', '-')}`;\r\n        switch (property.controlDescriptor.type) {\r\n            case 'external-object-select':\r\n                return (\r\n                    <ExternalObjectSelect key={key} className='property'\r\n                                          id={key}\r\n                                          type={property.type}\r\n                                          focused={this.properties[this.state.selectedPropertyIndex] === key && this.props.selected}\r\n                                          label={property.controlDescriptor.label}\r\n                                          value={property.value}\r\n                                          options={property.controlDescriptor.options}\r\n                                          disabled={property.disabled || this.props.isLockedProcessPlan}\r\n                                          translate={this.props.translate}\r\n                                          onChange={onChange}\r\n                                          onSelect={this.handleSelect}/>\r\n                );\r\n            case 'select':\r\n                return (\r\n                    <Select key={key} className='property'\r\n                            id={key}\r\n                            focused={this.properties[this.state.selectedPropertyIndex] === key && this.props.selected}\r\n                            label={property.controlDescriptor.label}\r\n                            value={property.value}\r\n                            options={property.controlDescriptor.options}\r\n                            disabled={property.disabled  || this.props.isLockedProcessPlan}\r\n                            translate={this.props.translate}\r\n                            onChange={onChange}\r\n                            onSelect={this.handleSelect}/>\r\n                );\r\n            case 'checkbox':\r\n                return (\r\n                    <CheckBox key={key} className={'property' + (property.disabled ? ' disabledProperty ' : '')}\r\n                              id={key}\r\n                              focused={this.properties[this.state.selectedPropertyIndex] === key && this.props.selected}\r\n                              groupLabelId={groupLabelId}\r\n                              label={property.controlDescriptor.label}\r\n                              value={property.value || false}\r\n                              disabled={property.disabled || this.props.isLockedProcessPlan}\r\n                              translate={this.props.translate}\r\n                              onChange={onChange}\r\n                              onSelect={this.handleSelect}/>\r\n                );\r\n            case 'variable-checkbox':\r\n                return (\r\n                    <VariableCheckBox key={key} className='property'\r\n                                      id={key}\r\n                                      selected={this.properties[this.state.selectedPropertyIndex] === key}\r\n                                      focused={this.properties[this.state.selectedPropertyIndex] === key && this.props.selected}\r\n                                      groupLabelId={groupLabelId}\r\n                                      label={property.controlDescriptor.label}\r\n                                      value={property.value || false}\r\n                                      disabled={property.disabled || this.props.isLockedProcessPlan}\r\n                                      translate={this.props.translate}\r\n                                      onChange={onChange}\r\n                                      onSelect={this.handleSelect}/>\r\n                );\r\n            case 'input':\r\n                return (\r\n                    <Input key={key} className='property'\r\n                           id={key}\r\n                           focused={this.properties[this.state.selectedPropertyIndex] === key && this.props.selected}\r\n                           label={property.controlDescriptor.label}\r\n                           value={property.value || ''}\r\n                           disabled={property.disabled || this.props.isLockedProcessPlan}\r\n                           translate={this.props.translate}\r\n                           onChange={onChange}\r\n                           onSelect={this.handleSelect}/>\r\n                );\r\n            case 'variable-input':\r\n                return (\r\n                    <VariableInput key={key} className='property'\r\n                                   id={key}\r\n                                   selected={this.properties[this.state.selectedPropertyIndex] === key}\r\n                                   focused={this.properties[this.state.selectedPropertyIndex] === key && this.props.selected}\r\n                                   label={property.controlDescriptor.label}\r\n                                   value={property.value || ''}\r\n                                   isLockedProcessPlan={property.disabled || this.props.isLockedProcessPlan}\r\n                                   translate={this.props.translate}\r\n                                   onChange={onChange}\r\n                                   onSelect={this.handleSelect}\r\n                                   multiLine={true}/>\r\n                );\r\n            case 'checkbox-group':\r\n                return (\r\n                    <CheckBoxGroup key={key} className='property'\r\n                                   id={key}\r\n                                   focused={this.properties[this.state.selectedPropertyIndex] === key && this.props.selected}\r\n                                   label={property.controlDescriptor.label}\r\n                                   values={property.value}\r\n                                   options={property.controlDescriptor.options}\r\n                                   selectedOptions={property.controlDescriptor.selectedOptions}\r\n                                   disabled={property.disabled  || this.props.isLockedProcessPlan}\r\n                                   translate={this.props.translate}\r\n                                   onChange={onChange}\r\n                                   onSelect={this.handleSelect}/>\r\n                );\r\n            case 'checkable-multiselect':\r\n                return (\r\n                    <CheckableMultiSelect key={key} className={'property' + (property.disabled ? ' disabledProperty ' : '')}\r\n                                          id={key}\r\n                                          value={property.value}\r\n                                          focused={this.properties[this.state.selectedPropertyIndex] === key && this.props.selected}\r\n                                          label={property.controlDescriptor.label}\r\n                                          groupLabelId={groupLabelId}\r\n                                          options={property.controlDescriptor.options}\r\n                                          disabled={property.disabled  || this.props.isLockedProcessPlan}\r\n                                          parentId={this.props.objectId}\r\n                                          translate={this.props.translate}\r\n                                          onChange={onChange}\r\n                                          onSelect={this.handleSelect}/>\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.objectId !== prevProps.objectId) {\r\n            this.setState({...this.state, selectedPropertiesIndex: 0})\r\n        }\r\n    }\r\n\r\n    handlePropertyChange = (objectId, name) => (value) => {\r\n        this.props.onPropertyChange(objectId, name, value);\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        switch (e.key) {\r\n            case 'ArrowDown':\r\n                if (this.state.selectedPropertyIndex < this.properties.length - 1) {\r\n                    this.setState({...this.state, selectedPropertyIndex: this.state.selectedPropertyIndex + 1});\r\n                }\r\n                break;\r\n            case 'ArrowUp':\r\n                if (this.state.selectedPropertyIndex > 0) {\r\n                    this.setState({...this.state, selectedPropertyIndex: this.state.selectedPropertyIndex - 1});\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    handleSelect = (selectedType) => {\r\n        this.setState({...this.state, selectedPropertyIndex: _.findIndex(this.properties, property => property === selectedType)});\r\n    };\r\n}\r\n\r\nconst ControlDescriptorShape = PropTypes.shape({\r\n    type: PropTypes.string.isRequired,\r\n    group: PropTypes.string,\r\n    label: PropTypes.string,\r\n    options: PropTypes.array\r\n});\r\n\r\nconst PropertyShape = PropTypes.shape({\r\n    objectId: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.any,\r\n    type: PropTypes.string,\r\n    controlDescriptor: ControlDescriptorShape,\r\n});\r\n\r\nconst PropertyGroupShape = PropTypes.shape({\r\n    name: PropTypes.string,\r\n    properties: PropTypes.arrayOf(PropertyShape)\r\n});\r\n\r\nPropPanel.propTypes = {\r\n    propertyGroups: PropTypes.arrayOf(PropertyGroupShape),\r\n    translate: PropTypes.func.isRequired,\r\n    onPropertyChange: PropTypes.func.isRequired,\r\n    onDeleteElement: PropTypes.func,\r\n    onSelect: PropTypes.func\r\n};\r\n\r\nexport default PropPanel;\r\n","import {connect} from 'react-redux';\r\nimport PropPanel from './PropPanel';\r\nimport {getTranslate} from 'react-localize-redux';\r\nimport _ from 'lodash';\r\nimport {\r\n    getSelectedTransitionPropsWithControlDescriptors, SELECTABLE_PROPERTIES_NUMBER_BY_TRANSITION_PROPERTY_NAME,\r\n    updateTransitionTypes\r\n} from \"../../../redux/modules/transitionProperties\";\r\nimport {getFocusedArea, SIDE_PANEL} from \"../../../redux/modules/processPlan\";\r\nimport {getSelectedTransitionId} from \"../../../redux/modules/transitions\";\r\nimport {applyChange} from \"../../../redux/modules/changeStack\";\r\nimport {ChangeTransitionProperty} from \"../../../redux/model/ChangeTransitionProperty\";\r\n\r\nexport const mapStateToProps = (state) => {\r\n    let propertyGroups = getSelectedTransitionPropsWithControlDescriptors(state);\r\n    let selectablePropertiesNumber = _.chain(propertyGroups)\r\n        .map(group => group.properties)\r\n        .flatten()\r\n        .map(property => property.controlDescriptor.type === 'checkbox-group' ? property.controlDescriptor.options.length :SELECTABLE_PROPERTIES_NUMBER_BY_TRANSITION_PROPERTY_NAME[property.controlDescriptor.type])\r\n        .sum()\r\n        .value();\r\n\r\n    return ({\r\n        objectId: getSelectedTransitionId(state),\r\n        propertyGroups: getSelectedTransitionPropsWithControlDescriptors(state),\r\n        selectablePropertiesNumber: selectablePropertiesNumber,\r\n        selected: getFocusedArea(state) === SIDE_PANEL,\r\n        translate: getTranslate(state.localize)\r\n    })\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onPropertyChange: (transitionId, name, value) => {\r\n            if (name === 'types') {\r\n                dispatch(updateTransitionTypes(transitionId, value));\r\n            } else {\r\n                dispatch(applyChange(new ChangeTransitionProperty(transitionId, name, value)));\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PropPanel)","import {connect} from 'react-redux';\r\nimport {getTranslate} from 'react-localize-redux';\r\nimport _ from 'lodash';\r\nimport {\r\n    SELECTABLE_PROPERTIES_NUMBER_BY_STEP_PROPERTY_NAME\r\n} from \"../../../redux/modules/stepProperties\";\r\nimport PropPanel from './PropPanel';\r\nimport {getFocusedArea, SIDE_PANEL} from \"../../../redux/modules/processPlan\";\r\nimport {getSelectedStepId} from \"../../../redux/modules/drawingArea\";\r\nimport {applyChange} from \"../../../redux/modules/changeStack\";\r\nimport {ChangeStepProperty} from \"../../../redux/model/ChangeStepProperty\";\r\nimport {getSelectedStepPropsWithControlDescriptors} from '../../../redux/modules/compositeSelectors';\r\n\r\nexport const mapStateToProps = (state) => {\r\n    let propertyGroups = getSelectedStepPropsWithControlDescriptors(state);\r\n    let selectablePropertiesNumber = _.chain(propertyGroups)\r\n        .map(group => group.properties)\r\n        .flatten()\r\n        .map(property => SELECTABLE_PROPERTIES_NUMBER_BY_STEP_PROPERTY_NAME[property.controlDescriptor.type])\r\n        .sum()\r\n        .value();\r\n\r\n    return ({\r\n        objectId: getSelectedStepId(state),\r\n        propertyGroups: getSelectedStepPropsWithControlDescriptors(state),\r\n        selectablePropertiesNumber: selectablePropertiesNumber,\r\n        selected: getFocusedArea(state) === SIDE_PANEL,\r\n        translate: getTranslate(state.localize)\r\n    })\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onPropertyChange: (stepId, name, value) => {\r\n            dispatch(applyChange(new ChangeStepProperty(stepId, name, value)));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PropPanel)","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ProcessPlanDetails.css';\r\nimport {Creatable } from 'react-select';\r\nimport VariableInput from \"../../sidePanel/propPanel/variableInput/VariableInput.container\";\r\nimport _ from 'lodash';\r\nimport {Translate} from 'react-localize-redux';\r\n\r\nclass ProcessPlanDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let selectedGroupOption = undefined;\r\n        let groupOptions = props.groups;\r\n\r\n        if (props.group) {\r\n            selectedGroupOption = props.groups.find(group => group.value === props.group);\r\n            if (!selectedGroupOption) {\r\n                selectedGroupOption = {label: props.group, value: _.snakeCase(props.group)};\r\n                groupOptions.push(selectedGroupOption);\r\n            }\r\n        }\r\n\r\n        let selectedDialogOption = undefined;\r\n        let dialogOptions = props.dialogs;\r\n\r\n        if (props.dialog) {\r\n            selectedDialogOption = props.dialogs.find(dialog => dialog.value === props.dialog);\r\n            if (!selectedDialogOption) {\r\n                selectedDialogOption = {label: props.dialog, value: _.snakeCase(props.dialog)};\r\n                dialogOptions.push(selectedDialogOption);\r\n            }\r\n        }\r\n\r\n        this.state = {\r\n            selectedGroupOption: selectedGroupOption,\r\n            groupOptions: groupOptions,\r\n            selectedDialogOption: selectedDialogOption,\r\n            dialogOptions: dialogOptions\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n                <div className='process-plan-details' id='process-plan-details' onClick={this.handleClick}>\r\n                    <div>\r\n                        <label id=\"process-plan-details-group-label\" >\r\n                            <Translate id=\"NG_PPE_Group_long\"/>\r\n                        </label>\r\n                        <Creatable\r\n                            className={this.props.isLockedProcessPlan ? \"disabled-process-plan-details\" : \"\"}\r\n                            value={this.state.selectedGroupOption}\r\n                            onChange={this.handleGroupChange}\r\n                            options={this.state.groupOptions}\r\n                            isValidNewOption={this.isValidNewGroupOption}\r\n                            isDisabled = {this.props.isLockedProcessPlan ? \"isDisabled\" : \"\"}\r\n                            styles={{ menu: provided => ({ ...provided, zIndex: 100 })}}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label id=\"process-plan-details-dialog-label\" >\r\n                            <Translate id=\"NG_PPE_Dialog_template_long\"/>\r\n                        </label>\r\n                        <Creatable\r\n                            className={this.props.isLockedProcessPlan ? \"disabled-process-plan-details\" : \"\"}\r\n                            value={this.state.selectedDialogOption}\r\n                            onChange={this.handleDialogChange}\r\n                            options={this.state.dialogOptions}\r\n                            isValidNewOption={this.isValidNewDialogOption}\r\n                            isDisabled = {this.props.isLockedProcessPlan ? \"isDisabled\" : \"\"}\r\n                            styles={{ menu: provided => ({ ...provided, zIndex: 100 })}}\r\n                        />\r\n\r\n                    </div>\r\n                    <div>\r\n                        <label id=\"process-plan-details-author-label\" htmlFor=\"process-plan-details-author\">\r\n                            <Translate id=\"NG_PPE_Author_long\"/>\r\n                        </label>\r\n                        <input id=\"process-plan-details-author\"\r\n                               className={this.props.isLockedProcessPlan ? \"disabled-process-plan-details\" : \"\"}\r\n                               aria-labelledby=\"process-plan-details-author-label\"\r\n                               type=\"text\"\r\n                               value={this.props.author}\r\n                               onDrop={(ev) => ev.preventDefault()}\r\n                               onChange={this.handleAuthorChange}\r\n                               disabled = {this.props.isLockedProcessPlan ? \"disabled\" : \"\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label id=\"process-plan-details-email-label\" htmlFor=\"process-plan-details-email\">\r\n                            <Translate id=\"NG_PPE_Email_long\"/>\r\n                        </label>\r\n                        <input id=\"process-plan-details-email\"\r\n                               className={this.props.isLockedProcessPlan ? \"disabled-process-plan-details\" : \"\"}\r\n                               aria-labelledby=\"process-plan-details-email-label\"\r\n                               type=\"text\"\r\n                               value={this.props.email}\r\n                               disabled = {this.props.isLockedProcessPlan ? \"disabled\" : \"\"}\r\n                               onDrop={(ev) => ev.preventDefault()}\r\n                               onChange={this.handleEmailChange} />\r\n                    </div>\r\n                    <div>\r\n                        <VariableInput\r\n                            className={\"variable-comment\" +(this.props.isLockedProcessPlan ? \" disabled-process-plan-details\" : \"\")}\r\n                            aria-labelledby=\"process-plan-details-comment\"\r\n                            label={this.props.translate(\"NG_PPE_Comment_long\")}\r\n                            value={this.props.comment}\r\n                            isLockedProcessPlan={this.props.isLockedProcessPlan}\r\n                            onDrop={(ev) => ev.preventDefault()}\r\n                            onChange={this.handleCommentChange}\r\n                            multiLine={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n    handleClick =(ev) => {\r\n        // Avoid panel hiding\r\n        ev.stopPropagation();\r\n    };\r\n    handleAuthorChange = (ev) => {\r\n        this.props.onChangeAuthor(ev.target.value);\r\n    };\r\n    handleEmailChange = (ev) => {\r\n        this.props.onChangeEmail(ev.target.value);\r\n    };\r\n    handleCommentChange = (comment) => {\r\n        this.props.onChangeComment(comment);\r\n    };\r\n    handleGroupChange = (option, { action }) => {\r\n        switch(action) {\r\n            case 'select-option':\r\n                this.setState({ selectedGroupOption: option });\r\n                break;\r\n            case 'create-option':\r\n                const { groupOptions } = this.state;\r\n                groupOptions.push(option);\r\n                this.setState({ selectedGroupOption: option, groupOptions });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.props.onChangeGroup(option.value);\r\n    };\r\n    handleDialogChange = (option, { action }) => {\r\n        switch(action) {\r\n            case 'select-option':\r\n                this.setState({ selectedDialogOption: option });\r\n                break;\r\n            case 'create-option':\r\n                const { dialogOptions } = this.state;\r\n                dialogOptions.push(option);\r\n                this.setState({ selectedDialogOption: option, dialogOptions });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.props.onChangeDialog(option.value);\r\n    };\r\n    isValidNewGroupOption = (inputValue, selectValue, selectGroupOptions) => {\r\n        return !(inputValue.trim().length === 0 || selectGroupOptions.find(option => option.name === inputValue));\r\n    };\r\n    isValidNewDialogOption = (inputValue, selectValue, selectDialogOptions) => {\r\n        return !(inputValue.trim().length === 0 || selectDialogOptions.find(option => option.name === inputValue));\r\n    };\r\n}\r\n\r\nProcessPlanDetails.propTypes = {\r\n    group: PropTypes.string,\r\n    groups: PropTypes.array,\r\n    dialog: PropTypes.string,\r\n    dialogs: PropTypes.array,\r\n    author: PropTypes.string,\r\n    email: PropTypes.string,\r\n    comment: PropTypes.object,\r\n    translate: PropTypes.func.isRequired,\r\n    onChangeAuthor: PropTypes.func,\r\n    onChangeEmail: PropTypes.func,\r\n    onChangePassword: PropTypes.func,\r\n    onChangeComment: PropTypes.func,\r\n    onChangeGroup: PropTypes.func,\r\n    onChangeDialog: PropTypes.func\r\n};\r\n\r\nexport default ProcessPlanDetails;\r\n","import {Change} from './Change';\r\n\r\nexport class ChangeProcessPlanAuthor extends Change {\r\n    constructor(author) {\r\n        super('Change process plan author');\r\n        this.author = author;\r\n        this.prevAuthor = null;\r\n    }\r\n\r\n    applyProcessPlanAuthorChange(processPlan) {\r\n        this.prevAuthor = processPlan.author;\r\n        return {...processPlan, author: this.author};\r\n    }\r\n    revertProcessPlanAuthorChange(processPlan) {\r\n        return {...processPlan, author: this.prevAuthor};\r\n    }\r\n}","import {Change} from './Change';\r\n\r\nexport class ChangeProcessPlanComment extends Change {\r\n    constructor(comment) {\r\n        super('Change process plan comment');\r\n        this.comment = comment;\r\n        this.prevComment = null;\r\n    }\r\n\r\n    applyProcessPlanCommentChange(processPlan) {\r\n        this.prevComment = processPlan.comment;\r\n        return {...processPlan, comment: this.comment};\r\n    }\r\n    revertProcessPlanCommentChange(processPlan) {\r\n        return {...processPlan, comment: this.prevComment};\r\n    }\r\n}","import {Change} from './Change';\r\n\r\nexport class ChangeProcessPlanEmail extends Change {\r\n    constructor(email) {\r\n        super('Change process plan email');\r\n        this.email = email;\r\n        this.prevEmail = null;\r\n    }\r\n\r\n    applyProcessPlanEmailChange(processPlan) {\r\n        this.prevEmail = processPlan.email;\r\n        return {...processPlan, email: this.email};\r\n    }\r\n    revertProcessPlanEmailChange(processPlan) {\r\n        return {...processPlan, email: this.prevEmail};\r\n    }\r\n}","import {Change} from './Change';\r\n\r\nexport class ChangeProcessPlanGroup extends Change {\r\n    constructor(group) {\r\n        super('Change process plan group');\r\n        this.group = group;\r\n        this.prevGroup = null;\r\n    }\r\n\r\n    applyProcessPlanGroupChange(processPlan) {\r\n        this.prevGroup = processPlan.group;\r\n        return {...processPlan, group: this.group};\r\n    }\r\n    revertProcessPlanGroupChange(processPlan) {\r\n        return {...processPlan, group: this.prevGroup};\r\n    }\r\n}\r\n","import {Change} from './Change';\r\n\r\nexport class ChangeProcessPlanDialog extends Change {\r\n    constructor(dialog) {\r\n        super('Change process plan dialog');\r\n        this.dialog = dialog;\r\n        this.prevDialog = null;\r\n    }\r\n\r\n    applyProcessPlanDialogChange(processPlan) {\r\n        this.prevDialog = processPlan.dialog;\r\n        return {...processPlan, dialog: this.dialog};\r\n    }\r\n    revertProcessPlanDialogChange(processPlan) {\r\n        return {...processPlan, dialog: this.prevDialog};\r\n    }\r\n}\r\n","import {connect} from 'react-redux';\r\nimport ProcessPlanDetails from \"./ProcessPlanDetails\";\r\nimport {applyChange} from \"../../../redux/modules/changeStack\";\r\nimport {ChangeProcessPlanAuthor} from \"../../../redux/model/ChangeProcessPlanAuthor\";\r\nimport {ChangeProcessPlanComment} from \"../../../redux/model/ChangeProcessPlanComment\";\r\nimport {ChangeProcessPlanEmail} from \"../../../redux/model/ChangeProcessPlanEmail\";\r\nimport {ChangeProcessPlanGroup} from \"../../../redux/model/ChangeProcessPlanGroup\";\r\nimport {ChangeProcessPlanDialog} from \"../../../redux/model/ChangeProcessPlanDialog\";\r\nimport {getAvailableGroupOptions} from \"../../../redux/modules/availableObjects\";\r\nimport {getAvailableDialogOptions} from \"../../../redux/modules/availableObjects\";\r\nimport {getTranslate} from 'react-localize-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    let headerPanel = state.processPlan;\r\n    return {\r\n        group: headerPanel.group,\r\n        groups: getAvailableGroupOptions(state),\r\n        dialog: headerPanel.dialog,\r\n        dialogs: getAvailableDialogOptions(state),\r\n        author: headerPanel.author,\r\n        email: headerPanel.email,\r\n        comment: headerPanel.comment,\r\n        translate: getTranslate(state.localize)\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangeAuthor: (author) => {\r\n            dispatch(applyChange(new ChangeProcessPlanAuthor(author)));\r\n        },\r\n        onChangeEmail: (email) => {\r\n            dispatch(applyChange(new ChangeProcessPlanEmail(email)));\r\n        },\r\n        onChangeComment: (comment) => {\r\n            dispatch(applyChange(new ChangeProcessPlanComment(comment)));\r\n        },\r\n        onChangeGroup: (group) => {\r\n            dispatch(applyChange(new ChangeProcessPlanGroup(group)))\r\n        },\r\n        onChangeDialog: (dialog) => {\r\n            dispatch(applyChange(new ChangeProcessPlanDialog(dialog)))\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProcessPlanDetails)\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport ProcessPlanDetails from \"./processPlanDetails/ProcessPlanDetails.container\";\r\nimport VariableInput from \"../sidePanel/propPanel/variableInput/VariableInput.container\";\r\nimport api from \"../../api\";\r\nimport './HeaderPanel.css';\r\n\r\nimport {\r\n    Button,\r\n    Dropdown,\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    ModalHeader,\r\n    Popover,\r\n    PopoverBody\r\n} from 'reactstrap';\r\nimport CodeMirror from 'react-codemirror';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/addon/fold/foldgutter.css';\r\nimport 'codemirror/addon/fold/foldgutter.js';\r\nimport 'codemirror/addon/fold/brace-fold.js';\r\nimport error from '../drawingArea/error_icon.svg';\r\nconst DUPLICATE_PROCESS_PLAN_NAME = 'NG_PPE_NameExistWarning_long';\r\nconst EMPTY_PROCESS_PLAN_NAME = 'NG_PPE_NameEmptyWarning_long';\r\n\r\nclass HeaderPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            exportModalIsOpened: false,\r\n            lockMenuIsOpened: false,\r\n            lockWithPasswordModalIsOpened: false,\r\n            passwordConfirmationPopoverOpen: false,\r\n            unlockWithPasswordModalIsOpened: false,\r\n            popoverOpen: false,\r\n        };\r\n    }\r\n\r\n    setPassword = password => {\r\n        this.password = password;\r\n    };\r\n\r\n    setPasswordLock = passwordLock => {\r\n        this.passwordLock = passwordLock;\r\n    };\r\n\r\n    setPasswordConfirmation = passwordConfirmation => {\r\n        this.passwordConfirmation = passwordConfirmation;\r\n    };\r\n\r\n    render() {\r\n        if (!this.props.fetching) {\r\n            return (\r\n                <div className='header'\r\n                     onMouseUp={this.headerMouseUp}>\r\n                    <VariableInput\r\n                        type=\"text\"\r\n                        aria-live=\"polite\"\r\n                        aria-label={this.props.translate(\"NG_PPE_Process_plan_name_long\")}\r\n                        label=\"variable-processPlan-name\"\r\n                        className=\"variable-processPlan-name\"\r\n                        value={this.props.name}\r\n                        isLockedProcessPlan={this.props.isLockedProcessPlan}\r\n                        onDrop={(ev) => ev.preventDefault()}\r\n                        onChange={this.handleNameChange}\r\n                        multiLine={false}\r\n                    />\r\n                    {this.renderValidationTooltip()}\r\n                    {this.renderExportButton()}\r\n                    {this.renderLockMenu()}\r\n                    <span role=\"button\"\r\n                          title={this.props.translate(\"NG_PPE_More_details_long\")}\r\n                          aria-label={this.props.translate(\"NG_PPE_More_details_long\")}\r\n                          aria-expanded={!this.props.isHidden}\r\n                          aria-controls=\"process-plan-details\"\r\n                          onClick={this.moreDetails}>\r\n                        <i className=\"material-icons more_vert\">more_vert</i>\r\n                    </span>\r\n                    {!this.props.isHidden && <ProcessPlanDetails isLockedProcessPlan={this.props.isLockedProcessPlan}/>}\r\n                    {this.renderExportModal()}\r\n                    {this.renderModalLockWithPassword()}\r\n                    {this.renderModalUnlockWithPassword()}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderValidationTooltip = () => {\r\n        if (this.props.validationTooltip) {\r\n            let tooltipText = (this.props.name.value === '' ) ? this.props.translate(EMPTY_PROCESS_PLAN_NAME) : this.props.translate(DUPLICATE_PROCESS_PLAN_NAME);\r\n            return (\r\n                <span\r\n                    className={'header-tooltip-toggle'}\r\n                    data-tooltip={tooltipText}\r\n                    role=\"tooltip\"\r\n                    tabIndex=\"0\"\r\n                    aria-label={tooltipText}>\r\n                    <img\r\n                        src={error}\r\n                        width={25}\r\n                        className={'header-error-icon'}\r\n                        alt={tooltipText}\r\n                    />\r\n                </span>\r\n            );\r\n        }\r\n    };\r\n\r\n    renderExportButton = () => {\r\n        if (!this.props.isExportAvailable) {\r\n            return null;\r\n        }\r\n        return (\r\n            <span role=\"button\"\r\n                  aria-label=\"Export process plan\"\r\n                  aria-controls=\"process-plan-export\"\r\n                  onClick={this.handleExportButtonClick}>\r\n                <i className=\"material-icons save\">vertical_align_bottom</i>\r\n            </span>\r\n        );\r\n    };\r\n\r\n    renderLockMenu = () => {\r\n        let icon = this.props.locked ? 'lock' : 'lock_open';\r\n        let title;\r\n        if (this.props.locked) {\r\n            title = this.props.hasPassword ?\r\n                this.props.translate(\"NG_PPE_PasswordProtected_long\") :\r\n                this.props.translate(\"NG_PPE_Locked_long\");\r\n        } else {\r\n            title = this.props.translate(\"NG_PPE_Unlocked_long\");\r\n        }\r\n        return (\r\n            <Dropdown isOpen={this.state.lockMenuIsOpened} toggle={this.changeLockType}>\r\n                <DropdownToggle>\r\n                    <i title={title} key={icon} className=\"material-icons lock\">{icon}</i>\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                    <DropdownItem\r\n                        onClick={this.changeSimpleLockType}>{this.props.translate(\"NG_PPE_LockSimple_long\")}</DropdownItem>\r\n                    <DropdownItem\r\n                        onClick={this.changePasswordProtectedLockTypeMenu}>{this.props.translate(\"NG_PPE_LockPassword_long\")}</DropdownItem>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        )\r\n    };\r\n\r\n    renderExportModal = () => {\r\n        return (\r\n            <Modal className=\"process-plan-json-modal\" isOpen={this.state.exportModalIsOpened}\r\n                   toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Process plan converted to json</ModalHeader>\r\n                <ModalBody>\r\n                    <CodeMirror className='code-mirror'\r\n                                value={this.props.modalText}\r\n                                options={{\r\n                                    mode: 'application/json',\r\n                                    lineNumbers: true,\r\n                                    readOnly: true,\r\n                                    foldGutter: true,\r\n                                    gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"]\r\n                                }}\r\n                                autoFocus={true}/>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.toggleModal}>Ok</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    };\r\n\r\n    renderModalLockWithPassword = () => {\r\n        return (\r\n            <Modal className=\"process-plan-json-modal\" isOpen={this.state.lockWithPasswordModalIsOpened}\r\n                   toggle={this.togglePasswordProtectedLockModal}>\r\n                <ModalBody>\r\n                    <div className=\"locking-body-password \">\r\n                        <label id=\"password-enter-label\" htmlFor=\"password-enter\">\r\n                            {this.props.translate(\"NG_PPE_PasswordEnter_long\")}\r\n                        </label>\r\n                        <input type=\"password\"\r\n                               ref={this.setPasswordLock}\r\n                               aria-labelledby=\"password-enter\"\r\n                               aria-live=\"off\"\r\n                               className=\"password\"\r\n                               onDrop={(ev) => ev.preventDefault()}\r\n                        />\r\n                    </div>\r\n                    <div className=\"locking-body-password \">\r\n                        <label id=\"password-confirmation-enter-label\" htmlFor=\"password-confirmation-enter\">\r\n                            {this.props.translate(\"NG_PPE_PasswordConfirm_long\")}\r\n                        </label>\r\n                        <input type=\"password\"\r\n                               ref={this.setPasswordConfirmation}\r\n                               aria-labelledby=\"password-confirmation-enter\"\r\n                               aria-live=\"off\"\r\n                               className=\"password\"\r\n                               onDrop={(ev) => ev.preventDefault()}\r\n                        />\r\n                        {(!_.isUndefined(this.passwordConfirmation) && !_.isNil(this.passwordConfirmation) && !_.isUndefined(this.passwordLock) && !_.isNil(this.passwordLock)) ?\r\n                            this.renderConfirmPopover(this.passwordConfirmation) : ''}\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\"\r\n                            onClick={this.changePasswordProtectedLockType}>{this.props.translate(\"NG_PPE_ButtonOK_long\")}</Button>\r\n                    <Button color=\"primary\"\r\n                            onClick={this.togglePasswordProtectedLockModal}>{this.props.translate(\"NG_PPE_ButtonCancel_long\")}</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    };\r\n\r\n    renderConfirmPopover = () => {\r\n        return (\r\n            <Popover placement=\"bottom\" isOpen={this.state.passwordConfirmationPopoverOpen}\r\n                     target={this.passwordConfirmation} toggle={this.toggle}>\r\n                <PopoverBody>{this.props.translate(\"NG_PPE_PasswordInvalid_long\")}</PopoverBody>\r\n            </Popover>\r\n        )\r\n    };\r\n\r\n    renderModalUnlockWithPassword = () => {\r\n        if (!this.props.isLockedProcessPlan || !this.props.hasPassword) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Modal className=\"process-plan-json-modal\" isOpen={this.state.unlockWithPasswordModalIsOpened}\r\n                   toggle={this.togglePasswordProtectedUnlockModal}>\r\n                <ModalBody>\r\n                    <div className=\"locking-body-password \">\r\n                        <label id=\"password-enter-label\" htmlFor=\"password-enter\">\r\n                            {this.props.translate(\"NG_PPE_PasswordEnter_long\")}\r\n                        </label>\r\n                        <input type=\"password\"\r\n                               ref={this.setPassword}\r\n                               aria-labelledby=\"password-enter\"\r\n                               aria-live=\"off\"\r\n                               className=\"password\"\r\n                               onDrop={(ev) => ev.preventDefault()}\r\n                        />\r\n                        {(!_.isUndefined(this.password) && !_.isNil(this.password)) ? this.renderPopover(this.password) : ''}\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\"\r\n                            onClick={this.changePasswordProtectedUnlockType}>{this.props.translate(\"NG_PPE_ButtonOK_long\")}</Button>\r\n                    <Button color=\"primary\"\r\n                            onClick={this.togglePasswordProtectedUnlockModal}>{this.props.translate(\"NG_PPE_ButtonCancel_long\")}</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    };\r\n\r\n    renderPopover = () => {\r\n        return (\r\n            <Popover placement=\"bottom\" isOpen={this.state.popoverOpen} target={this.password} toggle={this.toggle}>\r\n                <PopoverBody>{this.props.translate(\"NG_PPE_PasswordInvalid_long\")}</PopoverBody>\r\n            </Popover>\r\n        )\r\n    };\r\n\r\n    handleNameChange = (name) => {\r\n        this.props.onChangeProcessPlanName(name);\r\n    };\r\n\r\n    changeLockType = () => {\r\n        this.props.isLockedProcessPlan\r\n            ? this.props.hasPassword\r\n            ? this.setState({unlockWithPasswordModalIsOpened: !this.state.unlockWithPasswordModalIsOpened})\r\n            : this.changeSimpleUnlockType()\r\n            : this.setState({lockMenuIsOpened: !this.state.lockMenuIsOpened});\r\n    };\r\n\r\n    moreDetails = (ev) => {\r\n        ev.stopPropagation();\r\n        this.props.isHideProcessPlanInfo(!this.props.isHidden);\r\n    };\r\n\r\n    toggleModal = () => {\r\n        this.setState({exportModalIsOpened: !this.state.exportModalIsOpened});\r\n    };\r\n\r\n    togglePasswordProtectedLockModal = () => {\r\n        this.setState({lockWithPasswordModalIsOpened: !this.state.lockWithPasswordModalIsOpened});\r\n    };\r\n\r\n    togglePasswordProtectedUnlockModal = () => {\r\n        this.setState({unlockWithPasswordModalIsOpened: !this.state.unlockWithPasswordModalIsOpened});\r\n        this.password.value = this.password.value ? \"\" : this.password.value = \"\";\r\n    };\r\n\r\n    changeSimpleUnlockType = () => {\r\n        this.props.onChangeLockType(!this.props.locked);\r\n    };\r\n\r\n    changeSimpleLockType = () => {\r\n        this.props.onChangeLockType(!this.props.locked);\r\n        this.setState({lockMenuIsOpened: !this.state.lockMenuIsOpened});\r\n        this.props.onChangePassword(false);\r\n    };\r\n\r\n    changePasswordProtectedLockTypeMenu = () => {\r\n        this.setState({lockMenuIsOpened: false});\r\n        this.setState({lockWithPasswordModalIsOpened: true});\r\n    };\r\n\r\n    changePasswordProtectedUnlockType = () => {\r\n        api.checkPassword(this.password.value).then(isValidPassword => {\r\n            if (isValidPassword) {\r\n                this.props.onChangeLockType(!this.props.locked);\r\n                this.setState({unlockWithPasswordModalIsOpened: !this.state.unlockWithPasswordModalIsOpened});\r\n            } else {\r\n                this.password.value = \"\";\r\n                this.setState({popoverOpen: true});\r\n            }\r\n        })\r\n    };\r\n\r\n    changePasswordProtectedLockType = () => {\r\n        if (this.passwordLock.value === this.passwordConfirmation.value) {\r\n            api.setPassword(this.passwordLock.value);\r\n            this.props.onChangePassword(true);\r\n            this.setState({\r\n                ...this.state,\r\n                passwordConfirmationPopoverOpen: false,\r\n                lockWithPasswordModalIsOpened: !this.state.lockWithPasswordModalIsOpened\r\n            });\r\n            this.props.onChangeLockType(!this.props.locked);\r\n        } else {\r\n            this.setState({passwordConfirmationPopoverOpen: true});\r\n        }\r\n        this.passwordLock.value = \"\";\r\n        this.passwordConfirmation.value = \"\";\r\n    };\r\n\r\n    handleExportButtonClick = (e) => {\r\n        e.stopPropagation();\r\n        if (!this.props.isLockedProcessPlan) {\r\n            this.closeFullscreen();\r\n            this.props.onProcessPlanExport();\r\n            this.toggleModal();\r\n        }\r\n    };\r\n\r\n    closeFullscreen = () => {\r\n        if (document.fullscreenElement && document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        } else if (document.mozFullScreenElement && document.mozCancelFullScreen) { /* Firefox */\r\n            document.mozCancelFullScreen();\r\n        } else if (document.webkitFullscreenElement && document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\r\n            document.webkitExitFullscreen();\r\n        } else if (document.msFullscreenElement && document.msExitFullscreen) { /* IE/Edge */\r\n            document.msExitFullscreen();\r\n        }\r\n    };\r\n\r\n    headerMouseUp = () => {\r\n        if (this.props.isExistTempTransition) {\r\n            this.props.destroyTempTransition();\r\n        }\r\n    };\r\n}\r\n\r\nHeaderPanel.propTypes = {\r\n    name: PropTypes.object,\r\n    locked: PropTypes.bool,\r\n    hasPassword: PropTypes.bool,\r\n    fetching: PropTypes.bool,\r\n    isHidden: PropTypes.bool,\r\n    isExportAvailable: PropTypes.bool,\r\n    isExistTempTransition: PropTypes.bool.isRequired,\r\n    validationTooltip: PropTypes.bool,\r\n    translate: PropTypes.func.isRequired,\r\n    onChangeProcessPlanName: PropTypes.func,\r\n    onChangeLockType: PropTypes.func,\r\n    onChangePassword: PropTypes.func,\r\n    isHideProcessPlanInfo: PropTypes.func,\r\n    destroyTempTransition: PropTypes.func\r\n};\r\n\r\nexport default HeaderPanel;\r\n","import {Change} from './Change';\r\n\r\nexport class ChangeProcessPlanName extends Change {\r\n    constructor(name) {\r\n        super('Change process plan name');\r\n        this.name = name;\r\n        this.prevName = null;\r\n    }\r\n\r\n    applyProcessPlanNameChange(processPlan) {\r\n        this.prevName = processPlan.name;\r\n        return {...processPlan, name: this.name};\r\n    }\r\n    revertProcessPlanNameChange(processPlan) {\r\n        return {...processPlan, name: this.prevName};\r\n    }\r\n}","import {connect} from 'react-redux';\r\nimport {getTranslate} from 'react-localize-redux';\r\nimport {exportProcessPlan, getProcessPlanJson, isProcessPlanLoaded,showProcessPlanInfo, lockProcessPlan, getProcessPlanNameValidationTooltip\r\n} from \"../../redux/modules/processPlan\";\r\nimport {isAvailableObjectsLoaded} from \"../../redux/modules/availableObjects\";\r\nimport HeaderPanel from \"./HeaderPanel\";\r\nimport {applyChange} from \"../../redux/modules/changeStack\";\r\nimport {ChangeProcessPlanName} from \"../../redux/model/ChangeProcessPlanName\";\r\nimport {setPasswordFlag} from \"../../redux/modules/processPlan\";\r\nimport {nativeApiAvailable} from '../../api';\r\nimport {endTransitionCreation, getTempTransition} from \"../../redux/modules/tempTransition\";\r\nimport _ from 'lodash';\r\n\r\nconst mapStateToProps = (state) => {\r\n    let headerPanel = state.processPlan;\r\n    return {\r\n        name: headerPanel.name,\r\n        locked: headerPanel.locked,\r\n        hasPassword: headerPanel.hasPassword,\r\n        fetching: !(isProcessPlanLoaded(state) && isAvailableObjectsLoaded(state)),\r\n        isHidden: headerPanel.isHidden,\r\n        isExportAvailable: !nativeApiAvailable,\r\n        isExistTempTransition: !_.isEmpty(getTempTransition(state)),\r\n        modalText: getProcessPlanJson(state),\r\n        validationTooltip: getProcessPlanNameValidationTooltip(state),\r\n        translate: getTranslate(state.localize)\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangeProcessPlanName: (name) => {\r\n            dispatch(applyChange(new ChangeProcessPlanName(name)));\r\n        },\r\n        onChangeLockType: (lockedType) => {\r\n            dispatch(lockProcessPlan(lockedType));\r\n        },\r\n        onChangePassword: (hasPassword) => {\r\n            dispatch(setPasswordFlag(hasPassword));\r\n        },\r\n        isHideProcessPlanInfo: (type) => {\r\n            dispatch(showProcessPlanInfo(type))\r\n        },\r\n        onProcessPlanExport: () => dispatch(exportProcessPlan()),\r\n        destroyTempTransition : () => {dispatch(endTransitionCreation(null))}\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderPanel)","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {renderToStaticMarkup} from 'react-dom/server';\r\nimport {withLocalize} from 'react-localize-redux';\r\nimport DrawingArea from './drawingArea/DrawingArea.container';\r\nimport ZoomToolbar from './zoomPanel/ZoomToolbar.container';\r\nimport StepPanel from \"./sidePanel/stepPanel/StepPanel.container\";\r\nimport TransitionPropPanel from \"./sidePanel/propPanel/TransitionPropPanel.container\";\r\nimport StepPropPanel from \"./sidePanel/propPanel/StepPropPanel.container\";\r\nimport {RECT_OFFSET} from \"./drawingArea/step/Step\";\r\nimport HeaderPanel from \"./headerPanel/HeaderPanel.container\";\r\nimport './App.css';\r\nimport _ from 'lodash';\r\nimport {DRAWING_AREA, SIDE_PANEL} from \"../redux/modules/processPlan\";\r\n\r\nexport const HEADER_OFFSET = 100;\r\nexport const SIDE_PANEL_OFFSET = 300;\r\nexport const COLOR_DISABLE = \"#7e7e7e\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isGotTranslation: false,\r\n        };\r\n    }\r\n\r\n    setApp = (app) => {\r\n        this.app = app;\r\n    };\r\n\r\n    setMain = (main) => {\r\n        this.main = main;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\"\r\n                 tabIndex=\"0\"\r\n                 ref={this.setApp}\r\n                 onClick={this.handleFullScreen}\r\n                 onKeyDown={this.handleKeyDown}\r\n                 id=\"full-screen\"\r\n            >\r\n                <HeaderPanel className=\"header\" isLockedProcessPlan={this.props.isLockedProcessPlan}/>\r\n                <div className=\"toolbar\"\r\n                     ref={this.setToolbar}\r\n                     tabIndex=\"0\"\r\n                     onMouseUp={this.toolbarMouseUp}\r\n                >\r\n                    <div className=\"edit-toolbar\">\r\n                        <div\r\n                            className={'undo-redo-icon' + (this.props.isLockedProcessPlan || !this.props.isAvailableUndo ? ' undo-redo-icon-disabled' : '')}\r\n                            onClick={this.handleUndo}\r\n                            title={this.props.translate(\"NG_PPE_Undo_long\")}\r\n                            role='button'\r\n                            aria-label={this.props.translate(\"NG_PPE_Undo_long\")}\r\n                        >\r\n                            <i className=\"material-icons\">undo</i>\r\n                        </div>\r\n                        <div\r\n                            className={'undo-redo-icon' + (this.props.isLockedProcessPlan || !this.props.isAvailableRedo ? ' undo-redo-icon-disabled' : '')}\r\n                            onClick={this.handleRedo}\r\n                            title={this.props.translate(\"NG_PPE_Redo_long\")}\r\n                            role='button'\r\n                            aria-label={this.props.translate(\"NG_PPE_Redo_long\")}\r\n                        >\r\n                            <i className=\"material-icons\">redo</i>\r\n                        </div>\r\n                        {((this.props.selectedObjectType === 'step' && !_.isUndefined(this.props.selectedStep)) || this.props.selectedObjectType === 'transition') ?\r\n                            <div\r\n                                className={'delete-button' + (this.props.isLockedProcessPlan ? ' delete-button-disabled' : '')}\r\n                                title={this.props.translate(\"NG_PPE_Delete_long\")}\r\n                                role='button'\r\n                                aria-label={this.props.translate(\"NG_PPE_Delete_long\") + this.props.selectedObjectType}\r\n                                onClick={this.deleteElement}>\r\n                                <i className=\"material-icons\">delete_forever</i>\r\n                            </div> : ''}\r\n                    </div>\r\n                    <ZoomToolbar className=\"zoom-toolbar\"/>\r\n                    <div className=\"visualization-buttons\">\r\n                        <div className=\"transition-info-button\"\r\n                             title={this.props.translate(\"NG_PPE_Show_transition_info_long\") + (this.props.showTransitionInfo ? this.props.translate(\"NG_PPE_On_long\") : this.props.translate(\"NG_PPE_Off_long\"))}\r\n                             role='button'\r\n                             aria-label={this.props.translate(\"NG_PPE_Show_transition_info_long\")}\r\n                             aria-pressed={this.props.showTransitionInfo}\r\n                             onClick={this.props.onTransitionInfoButtonClick}>\r\n                            {this.props.showTransitionInfo ?\r\n                                <i key=\"on\" className=\"material-icons\">visibility</i> :\r\n                                <i key=\"off\" className=\"material-icons\">visibility_off</i>\r\n                            }\r\n                        </div>\r\n                        <div\r\n                            className={'snap-to-grid' + (this.props.isLockedProcessPlan ? ' snap-to-grid-disabled' : '')}\r\n                            title={this.props.translate(\"NG_PPE_Snap_to_grid_long\") + (this.props.snapToGrid ? this.props.translate(\"NG_PPE_On_long\") : this.props.translate(\"NG_PPE_Off_long\"))}\r\n                            role='button'\r\n                            aria-label={`${this.props.snapToGrid ? this.props.translate(\"NG_PPE_Reset_Snap_to_grid_long\") : this.props.translate(\"NG_PPE_Set_Snap_to_grid_long\")}`}\r\n                            aria-pressed={this.props.snapToGrid}\r\n                            onClick={this.props.onSnapToGridButtonClick}>\r\n                            {this.props.snapToGrid ?\r\n                                <i key=\"on\" className=\"material-icons\">grid_on</i> :\r\n                                <i key=\"off\" className=\"material-icons\">grid_off</i>}\r\n                        </div>\r\n                        <div\r\n                            className={'auto-generate-layout' + (this.props.isLockedProcessPlan ? ' auto-generate-layout-disabled' : '')}\r\n                            title={this.props.translate(\"NG_PPE_Auto_generate_layout_long\")}\r\n                            role='button'\r\n                            aria-label={this.props.translate(\"NG_PPE_Auto_generate_layout_long\")}\r\n                            onClick={this.onAutoGenerateLayout}>\r\n                            <i className=\"material-icons\">clear_all</i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"main\"\r\n                     id='mainSvgField'\r\n                     ref={this.setMain}\r\n                     onMouseUp={this.handleMouseUp}\r\n                     onDrop={this.handleDrop}\r\n                     onDragStart={(event) => event.preventDefault()}\r\n                     onDragOver={(event) => event.preventDefault()}>\r\n                    <DrawingArea isLockedProcessPlan={this.props.isLockedProcessPlan}/>\r\n                </div>\r\n                <div className=\"aside\">\r\n                    {this.renderSidePanel()}\r\n                </div>\r\n                <div className={\"loading-overlay\" + (this.state.isGotTranslation ? \" hidden\" : \"\")}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderSidePanel() {\r\n        switch (this.props.selectedObjectType) {\r\n            case 'step':\r\n                return <StepPropPanel isLockedProcessPlan={this.props.isLockedProcessPlan}/>;\r\n            case 'transition':\r\n                return <TransitionPropPanel isLockedProcessPlan={this.props.isLockedProcessPlan}/>;\r\n            default:\r\n                return <StepPanel isLockedProcessPlan={this.props.isLockedProcessPlan}/>;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onMainRender(\r\n            {\r\n                width: window.innerWidth - SIDE_PANEL_OFFSET,\r\n                height: window.innerHeight - HEADER_OFFSET\r\n            }\r\n        );\r\n        window.addEventListener('resize', this.handleResize);\r\n        this.app.focus();\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (!prevState.isGotTranslation && !_.isEmpty(this.props.translations)) {\r\n            this.setState({isGotTranslation: true});\r\n            this.props.initialize({\r\n                languages: [{name: \"\", code: \"\"}],\r\n                translation: this.props.translations,\r\n                options: {renderToStaticMarkup}\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    getMobileOperatingSystem = () => {\r\n        let userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n\r\n        if (/windows phone/i.test(userAgent)) {\r\n            return \"Windows Phone\";\r\n        }\r\n        if (/android/i.test(userAgent)) {\r\n            return \"Android\";\r\n        }\r\n        if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\r\n            return \"iOS\";\r\n        }\r\n        return \"unknown\";\r\n    };\r\n\r\n    handleFullScreen = () => {\r\n        this.props.onClick();\r\n\r\n        if (this.getMobileOperatingSystem() !== 'unknown') {\r\n\r\n            let elem = document.getElementById(\"root\");\r\n            if (elem.webkitRequestFullscreen) {\r\n                elem.webkitRequestFullscreen();\r\n            } else if (elem.mozRequestFullScreen) { /* Firefox */\r\n                elem.mozRequestFullScreen();\r\n            } else if (elem.msRequestFullscreen) { /* IE/Edge */\r\n                elem.msRequestFullscreen();\r\n            }\r\n        }\r\n    };\r\n\r\n    handleDrop = (e) => {\r\n        if (!this.props.isLockedProcessPlan) {\r\n            // Prevent default drop redirect in FF\r\n            e.preventDefault();\r\n            let data;\r\n            try {\r\n                data = JSON.parse(e.dataTransfer.getData('text'));\r\n            } catch (ignore) {\r\n                return;\r\n            }\r\n            let position = {\r\n                x: e.clientX - data.offsetX - (RECT_OFFSET),\r\n                y: e.clientY - data.offsetY - (RECT_OFFSET) - HEADER_OFFSET\r\n            };\r\n            this.props.onDrop(data.stepType, position);\r\n        }\r\n    };\r\n\r\n    handleMouseUp = () => {\r\n        this.props.onMouseUp();\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if ((e.altKey && e.which === 67) || (e.altKey && e.keyCode === 67)) { //alt+C\r\n            e.preventDefault();\r\n            this.props.onFocusOnGlobalArea(DRAWING_AREA);\r\n            this.props.onSelectDrawingArea();\r\n        } else if ((e.altKey && e.which === 80) || (e.altKey && e.keyCode === 80)) { //alt+P\r\n            e.preventDefault();\r\n            this.props.onFocusOnGlobalArea(SIDE_PANEL);\r\n        } else if ((e.ctrlKey && e.which === 89) || (e.metaKey && e.shiftKey && e.keyCode === 90) || (e.metaKey && e.shiftKey && e.which === 90)) { //ctrl+Y //cmd+SHIFT+Z\r\n            e.preventDefault();\r\n            this.props.onRedo();\r\n        } else if ((e.ctrlKey && e.which === 90) || (e.metaKey && e.keyCode === 90)) { //ctrl+Z //cmd+Z\r\n            e.preventDefault();\r\n            this.props.onUndo();\r\n        }\r\n    };\r\n\r\n    deleteElement = () => {\r\n        if (!this.props.isLockedProcessPlan) {\r\n            (this.props.selectedObjectType === 'step') ? this.props.onDeleteStep(this.props.selectedStep.id) : this.props.onDeleteTransition(this.props.selectedTransition.id);\r\n        }\r\n    };\r\n\r\n    onAutoGenerateLayout = () => {\r\n        if (!this.props.isLockedProcessPlan) {\r\n            this.props.onUpdateLayout();\r\n        }\r\n    };\r\n\r\n    handleUndo = () => {\r\n        if (!this.props.isLockedProcessPlan) {\r\n            this.props.onUndo();\r\n        }\r\n    };\r\n\r\n    handleRedo = () => {\r\n        if (!this.props.isLockedProcessPlan) {\r\n            this.props.onRedo();\r\n        }\r\n    };\r\n\r\n    handleResize = () => {\r\n        this.props.onMainRender(\r\n            {\r\n                width: window.innerWidth - SIDE_PANEL_OFFSET,\r\n                height: window.innerHeight - HEADER_OFFSET\r\n            }\r\n        );\r\n        this.props.onUpdateScreenSize();\r\n    };\r\n\r\n    toolbarMouseUp = () => {\r\n        if (this.props.isExistTempTransition) {\r\n            this.props.destroyTempTransition();\r\n        }\r\n    };\r\n}\r\n\r\nApp.propTypes = {\r\n    selectedObjectType: PropTypes.oneOf(['step', 'transition']),\r\n    showTransitionInfo: PropTypes.bool,\r\n    transitionCreationStarted: PropTypes.bool,\r\n    selectedStep: PropTypes.object,\r\n    selectedTransition: PropTypes.object,\r\n    translations: PropTypes.object,\r\n    isAvailableUndo: PropTypes.bool,\r\n    isAvailableRedo: PropTypes.bool,\r\n    isLockedProcessPlan: PropTypes.bool,\r\n    isExistTempTransition: PropTypes.bool.isRequired,\r\n    initialize: PropTypes.func.isRequired,\r\n    translate: PropTypes.func.isRequired,\r\n    onMainRender: PropTypes.func,\r\n    onDrop: PropTypes.func,\r\n    onMouseMove: PropTypes.func,\r\n    onMouseUp: PropTypes.func,\r\n    onClick: PropTypes.func,\r\n    onTransitionInfoButtonClick: PropTypes.func,\r\n    onFocusOnGlobalArea: PropTypes.func,\r\n    onSelectDrawingArea: PropTypes.func,\r\n    onUndo: PropTypes.func,\r\n    onRedo: PropTypes.func,\r\n    onDeleteStep: PropTypes.func,\r\n    onDeleteTransition: PropTypes.func,\r\n    onUpdateLayout: PropTypes.func,\r\n    onUpdateScreenSize: PropTypes.func,\r\n    destroyTempTransition: PropTypes.func\r\n};\r\n\r\nexport default withLocalize(App);\r\n","import {Change} from './Change';\r\nimport _ from 'lodash';\r\n\r\nexport class GenerateLayout extends Change {\r\n    constructor(plans) {\r\n        super('Generate auto layout');\r\n        this.processPlan = plans.newProcessPlan;\r\n        this.prevProcessPlan = plans.currentProcessPlan;\r\n    }\r\n\r\n    applyLayoutAutoGenerationForSteps(){\r\n        return this.processPlan.steps;\r\n    }\r\n    revertLayoutAutoGenerationForSteps() {\r\n        return this.prevProcessPlan.steps;\r\n    }\r\n\r\n    applyLayoutAutoGenerationForStepsLayout(){\r\n        return this.processPlan.stepsLayout;\r\n    }\r\n    revertLayoutAutoGenerationForStepsLayout() {\r\n        return this.prevProcessPlan.stepsLayout;\r\n    }\r\n\r\n    applyProcessPlanLayoutAutoGenerationStepProperties(){\r\n        return this.processPlan.stepProperties;\r\n    }\r\n    revertProcessPlanLayoutAutoGenerationStepProperties() {\r\n        return this.prevProcessPlan.stepProperties;\r\n    }\r\n\r\n    applyLayoutAutoGenerationForTransitions(){\r\n        return this.processPlan.transitions;\r\n    }\r\n    revertLayoutAutoGenerationForTransitions() {\r\n        return this.prevProcessPlan.transitions;\r\n    }\r\n\r\n    applyLayoutAutoGenerationForTransitionsLayout(){\r\n        return this.processPlan.transitionsLayout;\r\n    }\r\n    revertAutoGenerationForTransitionsLayout() {\r\n        return this.prevProcessPlan.transitionsLayout;\r\n    }\r\n\r\n    applyLayoutAutoGenerationForTransitionProperties(){\r\n        return this.processPlan.transitionProperties;\r\n    }\r\n    revertLayoutAutoGenerationForTransitionProperties() {\r\n        return this.prevProcessPlan.transitionProperties;\r\n    }\r\n\r\n    applyLayoutAutoGenerationForConnections(){\r\n        return _.chain(this.processPlan.stepProperties)\r\n            .filter(property => property.name === 'step_id')\r\n            .map(property => ({startStepId: property.stepId, endStepId: property.value}))\r\n            .map(connection => ({\r\n                ...connection,\r\n                endPosition: null}))\r\n            .value();\r\n    }\r\n    revertLayoutAutoGenerationForConnections() {\r\n        return this.prevProcessPlan.connectionsLayout;\r\n    }\r\n}","import {connect} from 'react-redux';\r\nimport _ from 'lodash';\r\n\r\nimport App from './App';\r\nimport {dropStep, getSelectedStep, selectStep, removeStep} from \"../redux/modules/steps\";\r\nimport {getSelectedTransition, getSelectedTransitionId, selectTransition} from \"../redux/modules/transitions\";\r\nimport {continueTransitionCreation, endTransitionCreation, getTempTransition} from \"../redux/modules/tempTransition\";\r\nimport {\r\n    DRAWING_AREA, getProcessPlanAccess, isNeedToUpdateLayout, setFocusOnGlobalArea, showProcessPlanInfo, updateLayout\r\n} from \"../redux/modules/processPlan\";\r\nimport {\r\n    changeScreenSize, getSelectedStepId, getSnapToGrid, getTranslations, isTransitionsInfoShown, selectDrawingArea,\r\n    toggleSnapToGrid, toggleTransitionInfo, updateOriginalViewportSize, updateViewportSize\r\n} from \"../redux/modules/drawingArea\";\r\nimport {applyChange, getRedoStack, getUndoStack, redo, undo} from \"../redux/modules/changeStack\";\r\nimport uuidv4 from \"uuid/v4\";\r\nimport {RemoveTransitionChange} from \"../redux/model/RemoveTransition\";\r\nimport {GenerateLayout} from \"../redux/model/AutoGenerateLayout\";\r\n\r\nexport const mapStateToProps = (state) => {\r\n    return ({\r\n        selectedObjectType: !_.isNil(getSelectedStepId(state)) ? 'step' : (!_.isNil(getSelectedTransitionId(state)) ? 'transition' : null),\r\n        selectedStep: getSelectedStep(state),\r\n        selectedTransition: getSelectedTransition(state),\r\n        showTransitionInfo: isTransitionsInfoShown(state),\r\n        snapToGrid: getSnapToGrid(state),\r\n        translations: getTranslations(state),\r\n        isAvailableUndo: getUndoStack(state).length > 0,\r\n        isAvailableRedo: getRedoStack(state).length > 0,\r\n        isLockedProcessPlan: getProcessPlanAccess(state),\r\n        isExistTempTransition: !_.isEmpty(getTempTransition(state))\r\n    });\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, {isLockedProcessPlan}) => {\r\n    return {\r\n        onDrop: (type, position) => {\r\n            let id = uuidv4();\r\n            dispatch(dropStep(id, type, position));\r\n            dispatch(selectDrawingArea(true));\r\n            dispatch(selectStep(id));\r\n        },\r\n        onMainRender: (viewPortSize) => {\r\n            dispatch(updateViewportSize(viewPortSize));\r\n            dispatch(updateOriginalViewportSize(viewPortSize));\r\n        },\r\n        onMouseMove: (coordinates) => dispatch(continueTransitionCreation(coordinates)),\r\n        onMouseUp: () => dispatch(endTransitionCreation(null)),\r\n        onClick: () => dispatch(showProcessPlanInfo(true)),\r\n        onTransitionInfoButtonClick: () => dispatch(toggleTransitionInfo()),\r\n        onFocusOnGlobalArea: globalArea => dispatch(setFocusOnGlobalArea(globalArea)),\r\n        onSelectDrawingArea: () => dispatch(selectDrawingArea(true)),\r\n        onSnapToGridButtonClick: () => {\r\n            if (!isLockedProcessPlan) dispatch(toggleSnapToGrid())\r\n        },\r\n        onUndo: () => {\r\n            if (!isLockedProcessPlan) dispatch(undo())\r\n        },\r\n        onRedo: () => {\r\n            if (!isLockedProcessPlan) dispatch(redo())\r\n        },\r\n        onDeleteStep: (id) => {\r\n            if (id !== 'start' && id !== 'end') {\r\n                dispatch(removeStep(id));\r\n                dispatch(selectStep(null));\r\n\r\n                dispatch(selectDrawingArea(true));\r\n                dispatch(setFocusOnGlobalArea(DRAWING_AREA));\r\n            }\r\n        },\r\n        onDeleteTransition: (id) => {\r\n            dispatch(applyChange(new RemoveTransitionChange(id)));\r\n            dispatch(selectTransition(null));\r\n            dispatch(selectDrawingArea(true));\r\n            dispatch(setFocusOnGlobalArea(DRAWING_AREA));\r\n        },\r\n        onUpdateLayout: () => {\r\n            if (dispatch(isNeedToUpdateLayout())) {\r\n                dispatch(applyChange(new GenerateLayout(dispatch(updateLayout()))))\r\n            }\r\n        },\r\n        onUpdateScreenSize: () => {\r\n            dispatch(changeScreenSize())\r\n        },\r\n        destroyTempTransition: () => {\r\n            dispatch(endTransitionCreation(null))\r\n        }\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {combineReducers} from 'redux';\r\nimport {combineEpics} from 'redux-observable';\r\nimport processPlan, {processplanSettingsLoadEpic} from './processPlan';\r\nimport availableObjects, {handleExternalObjectsUpdateEpic} from './availableObjects';\r\nimport steps from './steps';\r\nimport transitions from './transitions';\r\nimport transitionsLayout from './transitionsLayout';\r\nimport stepsLayout from './stepsLayout';\r\nimport stepProperties from './stepProperties'\r\nimport transitionProperties from './transitionProperties';\r\nimport tempTransition from './tempTransition';\r\nimport drawingArea from './drawingArea';\r\nimport changeStack from './changeStack';\r\nimport connectionsLayout from './connectionsLayout';\r\nimport transitionActionType from './transitionActionType';\r\nimport transitionCopy from './transitionCopy';\r\nimport {localizeReducer} from \"react-localize-redux\";\r\n\r\nexport default combineReducers({\r\n    localize: localizeReducer,\r\n    processPlan,\r\n    steps,\r\n    transitions,\r\n    stepsLayout,\r\n    transitionsLayout,\r\n    availableObjects,\r\n    stepProperties,\r\n    transitionProperties,\r\n    tempTransition,\r\n    drawingArea,\r\n    changeStack,\r\n    connectionsLayout,\r\n    transitionActionType,\r\n    transitionCopy\r\n});\r\n\r\nexport const rootEpic = combineEpics(\r\n    processplanSettingsLoadEpic,\r\n    handleExternalObjectsUpdateEpic\r\n);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport promise from 'redux-promise';\r\nimport {createEpicMiddleware} from 'redux-observable';\r\nimport {polyfill as keyboardEventKeyPolyfill } from 'keyboardevent-key-polyfill';\r\nimport {polyfill} from 'mobile-drag-drop';\r\nimport {unregister} from './registerServiceWorker';\r\nimport {LocalizeProvider} from \"react-localize-redux\";\r\nimport './fonts/fonts.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nimport App from './components/App.container';\r\n\r\nimport reducer from './redux/modules';\r\nimport {rootEpic} from './redux/modules/index';\r\nimport {loadProcessPlan} from './redux/modules/processPlan';\r\nimport {loadViewSettings} from './redux/modules/drawingArea';\r\nimport {loadAvailableObjects} from './redux/modules/availableObjects';\r\n\r\nkeyboardEventKeyPolyfill();\r\n\r\n// Init store\r\nlet epicMiddleware = createEpicMiddleware();\r\nlet store = createStore(reducer, applyMiddleware(thunk, promise,epicMiddleware));\r\nepicMiddleware.run(rootEpic);\r\nwindow.store = store;\r\n\r\n// Load available objects\r\nstore.dispatch(loadAvailableObjects());\r\n\r\n// Load process plan\r\nlet sampleName;\r\n\r\nlet url = window.location.search;\r\nlet sampleParam = url.split(/[?&]+/).find(param => /sample=.*/.test(param));\r\nif (sampleParam) {\r\n    sampleName = sampleParam.substring('sample='.length);\r\n}\r\n\r\nstore.dispatch(loadProcessPlan(sampleName));\r\n\r\n// Load view settings\r\nstore.dispatch(loadViewSettings());\r\n\r\n// Render application\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n       <LocalizeProvider store={store}>\r\n          <App/>\r\n       </LocalizeProvider>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nunregister();\r\npolyfill();\r\n","module.exports = __webpack_public_path__ + \"static/media/error_icon.cc2758a2.svg\";"],"sourceRoot":""}